dic=[{'ref': 8, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_average_process_usage_listener()', 'description': 'add_average_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;average_process_usage&quot; has changed. C++ signature :  void add_average_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_average_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 9, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_control_surfaces_listener()', 'description': 'add_control_surfaces_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;control_surfaces&quot; has changed. C++ signature :  void add_control_surfaces_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_control_surfaces_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 10, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_open_dialog_count_listener()', 'description': 'add_open_dialog_count_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;open_dialog_count&quot; has changed. C++ signature :  void add_open_dialog_count_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_open_dialog_count_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 11, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_peak_process_usage_listener()', 'description': 'add_peak_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;peak_process_usage&quot; has changed. C++ signature :  void add_peak_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_peak_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 12, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_unavailable_features_listener()', 'description': 'add_unavailable_features_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;unavailable_features&quot; has changed. C++ signature :  void add_unavailable_features_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_unavailable_features_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 13, 'tag': 'listener Method', 'name': 'Live.Application.Application.average_process_usage_has_listener()', 'description': 'average_process_usage_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;average_process_usage&quot;. C++ signature :  bool average_process_usage_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'average_process_usage_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 14, 'tag': 'listener Method', 'name': 'Live.Application.Application.control_surfaces_has_listener()', 'description': 'control_surfaces_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;control_surfaces&quot;. C++ signature :  bool control_surfaces_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'control_surfaces_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 23, 'tag': 'listener Method', 'name': 'Live.Application.Application.open_dialog_count_has_listener()', 'description': 'open_dialog_count_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;open_dialog_count&quot;. C++ signature :  bool open_dialog_count_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'open_dialog_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 24, 'tag': 'listener Method', 'name': 'Live.Application.Application.peak_process_usage_has_listener()', 'description': 'peak_process_usage_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;peak_process_usage&quot;. C++ signature :  bool peak_process_usage_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'peak_process_usage_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 26, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_average_process_usage_listener()', 'description': 'remove_average_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;average_process_usage&quot;. C++ signature :  void remove_average_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_average_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 27, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_control_surfaces_listener()', 'description': 'remove_control_surfaces_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;control_surfaces&quot;. C++ signature :  void remove_control_surfaces_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_control_surfaces_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 28, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_open_dialog_count_listener()', 'description': 'remove_open_dialog_count_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;open_dialog_count&quot;. C++ signature :  void remove_open_dialog_count_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_open_dialog_count_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 29, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_peak_process_usage_listener()', 'description': 'remove_peak_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;peak_process_usage&quot;. C++ signature :  void remove_peak_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_peak_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 30, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_unavailable_features_listener()', 'description': 'remove_unavailable_features_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;unavailable_features&quot;. C++ signature :  void remove_unavailable_features_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_unavailable_features_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 33, 'tag': 'listener Method', 'name': 'Live.Application.Application.unavailable_features_has_listener()', 'description': 'unavailable_features_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;unavailable_features&quot;. C++ signature :  bool unavailable_features_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'unavailable_features_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 63, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_average_process_usage_listener()', 'description': 'add_average_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;average_process_usage&quot; has changed. C++ signature :  void add_average_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_average_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 64, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_control_surfaces_listener()', 'description': 'add_control_surfaces_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;control_surfaces&quot; has changed. C++ signature :  void add_control_surfaces_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_control_surfaces_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 65, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_open_dialog_count_listener()', 'description': 'add_open_dialog_count_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;open_dialog_count&quot; has changed. C++ signature :  void add_open_dialog_count_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_open_dialog_count_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 66, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_peak_process_usage_listener()', 'description': 'add_peak_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;peak_process_usage&quot; has changed. C++ signature :  void add_peak_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_peak_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 67, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_unavailable_features_listener()', 'description': 'add_unavailable_features_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;unavailable_features&quot; has changed. C++ signature :  void add_unavailable_features_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_unavailable_features_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 69, 'tag': 'listener Method', 'name': 'Live.Application.Application.average_process_usage_has_listener()', 'description': 'average_process_usage_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;average_process_usage&quot;. C++ signature :  bool average_process_usage_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'average_process_usage_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 73, 'tag': 'listener Method', 'name': 'Live.Application.Application.control_surfaces_has_listener()', 'description': 'control_surfaces_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;control_surfaces&quot;. C++ signature :  bool control_surfaces_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'control_surfaces_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 85, 'tag': 'listener Method', 'name': 'Live.Application.Application.open_dialog_count_has_listener()', 'description': 'open_dialog_count_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;open_dialog_count&quot;. C++ signature :  bool open_dialog_count_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'open_dialog_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 87, 'tag': 'listener Method', 'name': 'Live.Application.Application.peak_process_usage_has_listener()', 'description': 'peak_process_usage_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;peak_process_usage&quot;. C++ signature :  bool peak_process_usage_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'peak_process_usage_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 89, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_average_process_usage_listener()', 'description': 'remove_average_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;average_process_usage&quot;. C++ signature :  void remove_average_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_average_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 90, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_control_surfaces_listener()', 'description': 'remove_control_surfaces_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;control_surfaces&quot;. C++ signature :  void remove_control_surfaces_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_control_surfaces_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 91, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_open_dialog_count_listener()', 'description': 'remove_open_dialog_count_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;open_dialog_count&quot;. C++ signature :  void remove_open_dialog_count_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_open_dialog_count_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 92, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_peak_process_usage_listener()', 'description': 'remove_peak_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;peak_process_usage&quot;. C++ signature :  void remove_peak_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_peak_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 93, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_unavailable_features_listener()', 'description': 'remove_unavailable_features_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;unavailable_features&quot;. C++ signature :  void remove_unavailable_features_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_unavailable_features_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 97, 'tag': 'listener Method', 'name': 'Live.Application.Application.unavailable_features_has_listener()', 'description': 'unavailable_features_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;unavailable_features&quot;. C++ signature :  bool unavailable_features_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'unavailable_features_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 100, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_browse_mode_listener()', 'description': 'add_browse_mode_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;browse_mode&quot; has changed. C++ signature :  void add_browse_mode_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_browse_mode_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 101, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_focused_document_view_listener()', 'description': 'add_focused_document_view_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;focused_document_view&quot; has changed. C++ signature :  void add_focused_document_view_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_focused_document_view_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 102, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_is_view_visible_listener()', 'description': 'add_is_view_visible_listener( (View)arg1, (object)arg2, (object)arg3) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_view_visible&quot; has changed. C++ signature :  void add_is_view_visible_listener(TPyViewData&lt;ASongApp&gt;,TString,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_is_view_visible_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 103, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_view_focus_changed_listener()', 'description': 'add_view_focus_changed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;view_focus_changed&quot; has changed. C++ signature :  void add_view_focus_changed_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_view_focus_changed_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 105, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.browse_mode_has_listener()', 'description': 'browse_mode_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;browse_mode&quot;. C++ signature :  bool browse_mode_has_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'browse_mode_has_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 107, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.focused_document_view_has_listener()', 'description': 'focused_document_view_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;focused_document_view&quot;. C++ signature :  bool focused_document_view_has_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'focused_document_view_has_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 110, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.is_view_visible_has_listener()', 'description': 'is_view_visible_has_listener( (View)arg1, (object)arg2, (object)arg3) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_view_visible&quot;. C++ signature :  bool is_view_visible_has_listener(TPyViewData&lt;ASongApp&gt;,TString,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'is_view_visible_has_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 111, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_browse_mode_listener()', 'description': 'remove_browse_mode_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;browse_mode&quot;. C++ signature :  void remove_browse_mode_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_browse_mode_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 112, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_focused_document_view_listener()', 'description': 'remove_focused_document_view_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;focused_document_view&quot;. C++ signature :  void remove_focused_document_view_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_focused_document_view_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 113, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_is_view_visible_listener()', 'description': 'remove_is_view_visible_listener( (View)arg1, (object)arg2, (object)arg3) -&gt; None : Remove a previously set listener function or method from property &quot;is_view_visible&quot;. C++ signature :  void remove_is_view_visible_listener(TPyViewData&lt;ASongApp&gt;,TString,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_is_view_visible_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 114, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_view_focus_changed_listener()', 'description': 'remove_view_focus_changed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;view_focus_changed&quot;. C++ signature :  void remove_view_focus_changed_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_view_focus_changed_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 118, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.view_focus_changed_has_listener()', 'description': 'view_focus_changed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;view_focus_changed&quot;. C++ signature :  bool view_focus_changed_has_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'view_focus_changed_has_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 149, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_browse_mode_listener()', 'description': 'add_browse_mode_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;browse_mode&quot; has changed. C++ signature :  void add_browse_mode_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_browse_mode_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 150, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_focused_document_view_listener()', 'description': 'add_focused_document_view_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;focused_document_view&quot; has changed. C++ signature :  void add_focused_document_view_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_focused_document_view_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 151, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_is_view_visible_listener()', 'description': 'add_is_view_visible_listener( (View)arg1, (object)arg2, (object)arg3) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_view_visible&quot; has changed. C++ signature :  void add_is_view_visible_listener(TPyViewData&lt;ASongApp&gt;,TString,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_is_view_visible_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 152, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_view_focus_changed_listener()', 'description': 'add_view_focus_changed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;view_focus_changed&quot; has changed. C++ signature :  void add_view_focus_changed_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_view_focus_changed_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 155, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.browse_mode_has_listener()', 'description': 'browse_mode_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;browse_mode&quot;. C++ signature :  bool browse_mode_has_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'browse_mode_has_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 159, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.focused_document_view_has_listener()', 'description': 'focused_document_view_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;focused_document_view&quot;. C++ signature :  bool focused_document_view_has_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'focused_document_view_has_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 162, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.is_view_visible_has_listener()', 'description': 'is_view_visible_has_listener( (View)arg1, (object)arg2, (object)arg3) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_view_visible&quot;. C++ signature :  bool is_view_visible_has_listener(TPyViewData&lt;ASongApp&gt;,TString,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'is_view_visible_has_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 163, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_browse_mode_listener()', 'description': 'remove_browse_mode_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;browse_mode&quot;. C++ signature :  void remove_browse_mode_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_browse_mode_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 164, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_focused_document_view_listener()', 'description': 'remove_focused_document_view_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;focused_document_view&quot;. C++ signature :  void remove_focused_document_view_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_focused_document_view_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 165, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_is_view_visible_listener()', 'description': 'remove_is_view_visible_listener( (View)arg1, (object)arg2, (object)arg3) -&gt; None : Remove a previously set listener function or method from property &quot;is_view_visible&quot;. C++ signature :  void remove_is_view_visible_listener(TPyViewData&lt;ASongApp&gt;,TString,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_is_view_visible_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 166, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_view_focus_changed_listener()', 'description': 'remove_view_focus_changed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;view_focus_changed&quot;. C++ signature :  void remove_view_focus_changed_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_view_focus_changed_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 170, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.view_focus_changed_has_listener()', 'description': 'view_focus_changed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;view_focus_changed&quot;. C++ signature :  bool view_focus_changed_has_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'view_focus_changed_has_listener()'], 'hierarchy': 4, 'ref_parent': 34, 'children': [], 'group': 'listener Method'},
{'ref': 322, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.add_control_values_arrived_listener()', 'description': 'add_control_values_arrived_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;control_values_arrived&quot; has changed. C++ signature :  void add_control_values_arrived_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'add_control_values_arrived_listener()'], 'hierarchy': 3, 'ref_parent': 321, 'children': [], 'group': 'listener Method'},
{'ref': 323, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.add_midi_received_listener()', 'description': 'add_midi_received_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_received&quot; has changed. C++ signature :  void add_midi_received_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'add_midi_received_listener()'], 'hierarchy': 3, 'ref_parent': 321, 'children': [], 'group': 'listener Method'},
{'ref': 324, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.control_values_arrived_has_listener()', 'description': 'control_values_arrived_has_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;control_values_arrived&quot;. C++ signature :  bool control_values_arrived_has_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'control_values_arrived_has_listener()'], 'hierarchy': 3, 'ref_parent': 321, 'children': [], 'group': 'listener Method'},
{'ref': 329, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.midi_received_has_listener()', 'description': 'midi_received_has_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_received&quot;. C++ signature :  bool midi_received_has_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'midi_received_has_listener()'], 'hierarchy': 3, 'ref_parent': 321, 'children': [], 'group': 'listener Method'},
{'ref': 331, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.remove_control_values_arrived_listener()', 'description': 'remove_control_values_arrived_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;control_values_arrived&quot;. C++ signature :  void remove_control_values_arrived_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'remove_control_values_arrived_listener()'], 'hierarchy': 3, 'ref_parent': 321, 'children': [], 'group': 'listener Method'},
{'ref': 332, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.remove_midi_received_listener()', 'description': 'remove_midi_received_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_received&quot;. C++ signature :  void remove_midi_received_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'remove_midi_received_listener()'], 'hierarchy': 3, 'ref_parent': 321, 'children': [], 'group': 'listener Method'},
{'ref': 364, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.add_control_values_arrived_listener()', 'description': 'add_control_values_arrived_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;control_values_arrived&quot; has changed. C++ signature :  void add_control_values_arrived_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'add_control_values_arrived_listener()'], 'hierarchy': 3, 'ref_parent': 321, 'children': [], 'group': 'listener Method'},
{'ref': 365, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.add_midi_received_listener()', 'description': 'add_midi_received_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_received&quot; has changed. C++ signature :  void add_midi_received_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'add_midi_received_listener()'], 'hierarchy': 3, 'ref_parent': 321, 'children': [], 'group': 'listener Method'},
{'ref': 367, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.control_values_arrived_has_listener()', 'description': 'control_values_arrived_has_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;control_values_arrived&quot;. C++ signature :  bool control_values_arrived_has_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'control_values_arrived_has_listener()'], 'hierarchy': 3, 'ref_parent': 321, 'children': [], 'group': 'listener Method'},
{'ref': 372, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.midi_received_has_listener()', 'description': 'midi_received_has_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_received&quot;. C++ signature :  bool midi_received_has_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'midi_received_has_listener()'], 'hierarchy': 3, 'ref_parent': 321, 'children': [], 'group': 'listener Method'},
{'ref': 374, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.remove_control_values_arrived_listener()', 'description': 'remove_control_values_arrived_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;control_values_arrived&quot;. C++ signature :  void remove_control_values_arrived_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'remove_control_values_arrived_listener()'], 'hierarchy': 3, 'ref_parent': 321, 'children': [], 'group': 'listener Method'},
{'ref': 375, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.remove_midi_received_listener()', 'description': 'remove_midi_received_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_received&quot;. C++ signature :  void remove_midi_received_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'remove_midi_received_listener()'], 'hierarchy': 3, 'ref_parent': 321, 'children': [], 'group': 'listener Method'},
{'ref': 939, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.add_filter_type_listener()', 'description': 'add_filter_type_listener( (Browser)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;filter_type&quot; has changed. C++ signature :  void add_filter_type_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'add_filter_type_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 940, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.add_full_refresh_listener()', 'description': 'add_full_refresh_listener( (Browser)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;full_refresh&quot; has changed. C++ signature :  void add_full_refresh_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'add_full_refresh_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 941, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.add_hotswap_target_listener()', 'description': 'add_hotswap_target_listener( (Browser)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;hotswap_target&quot; has changed. C++ signature :  void add_hotswap_target_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'add_hotswap_target_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 942, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.filter_type_has_listener()', 'description': 'filter_type_has_listener( (Browser)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;filter_type&quot;. C++ signature :  bool filter_type_has_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'filter_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 943, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.full_refresh_has_listener()', 'description': 'full_refresh_has_listener( (Browser)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;full_refresh&quot;. C++ signature :  bool full_refresh_has_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'full_refresh_has_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 944, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.hotswap_target_has_listener()', 'description': 'hotswap_target_has_listener( (Browser)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;hotswap_target&quot;. C++ signature :  bool hotswap_target_has_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'hotswap_target_has_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 948, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.remove_filter_type_listener()', 'description': 'remove_filter_type_listener( (Browser)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;filter_type&quot;. C++ signature :  void remove_filter_type_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'remove_filter_type_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 949, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.remove_full_refresh_listener()', 'description': 'remove_full_refresh_listener( (Browser)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;full_refresh&quot;. C++ signature :  void remove_full_refresh_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'remove_full_refresh_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 950, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.remove_hotswap_target_listener()', 'description': 'remove_hotswap_target_listener( (Browser)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;hotswap_target&quot;. C++ signature :  void remove_hotswap_target_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'remove_hotswap_target_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 980, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.add_filter_type_listener()', 'description': 'add_filter_type_listener( (Browser)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;filter_type&quot; has changed. C++ signature :  void add_filter_type_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'add_filter_type_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 981, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.add_full_refresh_listener()', 'description': 'add_full_refresh_listener( (Browser)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;full_refresh&quot; has changed. C++ signature :  void add_full_refresh_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'add_full_refresh_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 982, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.add_hotswap_target_listener()', 'description': 'add_hotswap_target_listener( (Browser)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;hotswap_target&quot; has changed. C++ signature :  void add_hotswap_target_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'add_hotswap_target_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 989, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.filter_type_has_listener()', 'description': 'filter_type_has_listener( (Browser)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;filter_type&quot;. C++ signature :  bool filter_type_has_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'filter_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 990, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.full_refresh_has_listener()', 'description': 'full_refresh_has_listener( (Browser)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;full_refresh&quot;. C++ signature :  bool full_refresh_has_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'full_refresh_has_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 992, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.hotswap_target_has_listener()', 'description': 'hotswap_target_has_listener( (Browser)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;hotswap_target&quot;. C++ signature :  bool hotswap_target_has_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'hotswap_target_has_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 1002, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.remove_filter_type_listener()', 'description': 'remove_filter_type_listener( (Browser)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;filter_type&quot;. C++ signature :  void remove_filter_type_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'remove_filter_type_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 1003, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.remove_full_refresh_listener()', 'description': 'remove_full_refresh_listener( (Browser)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;full_refresh&quot;. C++ signature :  void remove_full_refresh_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'remove_full_refresh_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 1004, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.remove_hotswap_target_listener()', 'description': 'remove_hotswap_target_listener( (Browser)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;hotswap_target&quot;. C++ signature :  void remove_hotswap_target_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'remove_hotswap_target_listener()'], 'hierarchy': 3, 'ref_parent': 938, 'children': [], 'group': 'listener Method'},
{'ref': 1283, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_bool_target_listener()', 'description': 'add_custom_bool_target_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_bool_target&quot; has changed. C++ signature :  void add_custom_bool_target_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_bool_target_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1284, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_0_listener()', 'description': 'add_custom_float_target_0_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_0&quot; has changed. C++ signature :  void add_custom_float_target_0_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_0_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1285, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_10_listener()', 'description': 'add_custom_float_target_10_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_10&quot; has changed. C++ signature :  void add_custom_float_target_10_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_10_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1286, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_11_listener()', 'description': 'add_custom_float_target_11_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_11&quot; has changed. C++ signature :  void add_custom_float_target_11_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_11_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1287, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_1_listener()', 'description': 'add_custom_float_target_1_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_1&quot; has changed. C++ signature :  void add_custom_float_target_1_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_1_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1288, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_2_listener()', 'description': 'add_custom_float_target_2_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_2&quot; has changed. C++ signature :  void add_custom_float_target_2_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_2_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1289, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_3_listener()', 'description': 'add_custom_float_target_3_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_3&quot; has changed. C++ signature :  void add_custom_float_target_3_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_3_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1290, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_4_listener()', 'description': 'add_custom_float_target_4_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_4&quot; has changed. C++ signature :  void add_custom_float_target_4_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_4_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1291, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_5_listener()', 'description': 'add_custom_float_target_5_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_5&quot; has changed. C++ signature :  void add_custom_float_target_5_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_5_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1292, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_6_listener()', 'description': 'add_custom_float_target_6_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_6&quot; has changed. C++ signature :  void add_custom_float_target_6_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_6_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1293, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_7_listener()', 'description': 'add_custom_float_target_7_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_7&quot; has changed. C++ signature :  void add_custom_float_target_7_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_7_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1294, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_8_listener()', 'description': 'add_custom_float_target_8_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_8&quot; has changed. C++ signature :  void add_custom_float_target_8_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_8_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1295, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_9_listener()', 'description': 'add_custom_float_target_9_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_9&quot; has changed. C++ signature :  void add_custom_float_target_9_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_9_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1296, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1297, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1298, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1299, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1300, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1301, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_bool_target_has_listener()', 'description': 'custom_bool_target_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_bool_target&quot;. C++ signature :  bool custom_bool_target_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_bool_target_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1302, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_0_has_listener()', 'description': 'custom_float_target_0_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_0&quot;. C++ signature :  bool custom_float_target_0_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_0_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1303, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_10_has_listener()', 'description': 'custom_float_target_10_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_10&quot;. C++ signature :  bool custom_float_target_10_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_10_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1304, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_11_has_listener()', 'description': 'custom_float_target_11_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_11&quot;. C++ signature :  bool custom_float_target_11_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_11_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1305, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_1_has_listener()', 'description': 'custom_float_target_1_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_1&quot;. C++ signature :  bool custom_float_target_1_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_1_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1306, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_2_has_listener()', 'description': 'custom_float_target_2_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_2&quot;. C++ signature :  bool custom_float_target_2_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_2_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1307, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_3_has_listener()', 'description': 'custom_float_target_3_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_3&quot;. C++ signature :  bool custom_float_target_3_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_3_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1308, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_4_has_listener()', 'description': 'custom_float_target_4_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_4&quot;. C++ signature :  bool custom_float_target_4_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_4_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1309, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_5_has_listener()', 'description': 'custom_float_target_5_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_5&quot;. C++ signature :  bool custom_float_target_5_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_5_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1310, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_6_has_listener()', 'description': 'custom_float_target_6_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_6&quot;. C++ signature :  bool custom_float_target_6_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_6_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1311, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_7_has_listener()', 'description': 'custom_float_target_7_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_7&quot;. C++ signature :  bool custom_float_target_7_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_7_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1312, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_8_has_listener()', 'description': 'custom_float_target_8_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_8&quot;. C++ signature :  bool custom_float_target_8_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_8_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1313, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_9_has_listener()', 'description': 'custom_float_target_9_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_9&quot;. C++ signature :  bool custom_float_target_9_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_9_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1314, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1315, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1316, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1317, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1318, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1319, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_bool_target_listener()', 'description': 'remove_custom_bool_target_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_bool_target&quot;. C++ signature :  void remove_custom_bool_target_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_bool_target_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1320, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_0_listener()', 'description': 'remove_custom_float_target_0_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_0&quot;. C++ signature :  void remove_custom_float_target_0_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_0_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1321, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_10_listener()', 'description': 'remove_custom_float_target_10_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_10&quot;. C++ signature :  void remove_custom_float_target_10_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_10_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1322, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_11_listener()', 'description': 'remove_custom_float_target_11_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_11&quot;. C++ signature :  void remove_custom_float_target_11_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_11_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1323, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_1_listener()', 'description': 'remove_custom_float_target_1_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_1&quot;. C++ signature :  void remove_custom_float_target_1_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_1_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1324, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_2_listener()', 'description': 'remove_custom_float_target_2_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_2&quot;. C++ signature :  void remove_custom_float_target_2_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_2_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1325, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_3_listener()', 'description': 'remove_custom_float_target_3_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_3&quot;. C++ signature :  void remove_custom_float_target_3_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_3_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1326, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_4_listener()', 'description': 'remove_custom_float_target_4_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_4&quot;. C++ signature :  void remove_custom_float_target_4_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_4_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1327, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_5_listener()', 'description': 'remove_custom_float_target_5_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_5&quot;. C++ signature :  void remove_custom_float_target_5_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_5_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1328, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_6_listener()', 'description': 'remove_custom_float_target_6_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_6&quot;. C++ signature :  void remove_custom_float_target_6_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_6_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1329, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_7_listener()', 'description': 'remove_custom_float_target_7_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_7&quot;. C++ signature :  void remove_custom_float_target_7_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_7_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1330, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_8_listener()', 'description': 'remove_custom_float_target_8_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_8&quot;. C++ signature :  void remove_custom_float_target_8_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_8_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1331, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_9_listener()', 'description': 'remove_custom_float_target_9_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_9&quot;. C++ signature :  void remove_custom_float_target_9_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_9_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1332, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1333, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1334, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1335, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1336, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1368, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_bool_target_listener()', 'description': 'add_custom_bool_target_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_bool_target&quot; has changed. C++ signature :  void add_custom_bool_target_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_bool_target_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1369, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_0_listener()', 'description': 'add_custom_float_target_0_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_0&quot; has changed. C++ signature :  void add_custom_float_target_0_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_0_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1370, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_10_listener()', 'description': 'add_custom_float_target_10_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_10&quot; has changed. C++ signature :  void add_custom_float_target_10_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_10_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1371, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_11_listener()', 'description': 'add_custom_float_target_11_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_11&quot; has changed. C++ signature :  void add_custom_float_target_11_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_11_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1372, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_1_listener()', 'description': 'add_custom_float_target_1_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_1&quot; has changed. C++ signature :  void add_custom_float_target_1_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_1_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1373, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_2_listener()', 'description': 'add_custom_float_target_2_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_2&quot; has changed. C++ signature :  void add_custom_float_target_2_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_2_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1374, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_3_listener()', 'description': 'add_custom_float_target_3_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_3&quot; has changed. C++ signature :  void add_custom_float_target_3_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_3_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1375, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_4_listener()', 'description': 'add_custom_float_target_4_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_4&quot; has changed. C++ signature :  void add_custom_float_target_4_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_4_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1376, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_5_listener()', 'description': 'add_custom_float_target_5_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_5&quot; has changed. C++ signature :  void add_custom_float_target_5_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_5_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1377, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_6_listener()', 'description': 'add_custom_float_target_6_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_6&quot; has changed. C++ signature :  void add_custom_float_target_6_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_6_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1378, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_7_listener()', 'description': 'add_custom_float_target_7_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_7&quot; has changed. C++ signature :  void add_custom_float_target_7_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_7_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1379, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_8_listener()', 'description': 'add_custom_float_target_8_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_8&quot; has changed. C++ signature :  void add_custom_float_target_8_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_8_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1380, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_custom_float_target_9_listener()', 'description': 'add_custom_float_target_9_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;custom_float_target_9&quot; has changed. C++ signature :  void add_custom_float_target_9_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_custom_float_target_9_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1381, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1382, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1383, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1384, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1385, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1392, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_bool_target_has_listener()', 'description': 'custom_bool_target_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_bool_target&quot;. C++ signature :  bool custom_bool_target_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_bool_target_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1395, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_0_has_listener()', 'description': 'custom_float_target_0_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_0&quot;. C++ signature :  bool custom_float_target_0_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_0_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1399, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_10_has_listener()', 'description': 'custom_float_target_10_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_10&quot;. C++ signature :  bool custom_float_target_10_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_10_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1402, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_11_has_listener()', 'description': 'custom_float_target_11_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_11&quot;. C++ signature :  bool custom_float_target_11_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_11_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1404, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_1_has_listener()', 'description': 'custom_float_target_1_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_1&quot;. C++ signature :  bool custom_float_target_1_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_1_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1407, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_2_has_listener()', 'description': 'custom_float_target_2_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_2&quot;. C++ signature :  bool custom_float_target_2_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_2_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1410, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_3_has_listener()', 'description': 'custom_float_target_3_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_3&quot;. C++ signature :  bool custom_float_target_3_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_3_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1413, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_4_has_listener()', 'description': 'custom_float_target_4_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_4&quot;. C++ signature :  bool custom_float_target_4_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_4_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1416, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_5_has_listener()', 'description': 'custom_float_target_5_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_5&quot;. C++ signature :  bool custom_float_target_5_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_5_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1419, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_6_has_listener()', 'description': 'custom_float_target_6_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_6&quot;. C++ signature :  bool custom_float_target_6_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_6_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1422, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_7_has_listener()', 'description': 'custom_float_target_7_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_7&quot;. C++ signature :  bool custom_float_target_7_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_7_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1425, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_8_has_listener()', 'description': 'custom_float_target_8_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_8&quot;. C++ signature :  bool custom_float_target_8_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_8_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1428, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.custom_float_target_9_has_listener()', 'description': 'custom_float_target_9_has_listener( (CcControlDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;custom_float_target_9&quot;. C++ signature :  bool custom_float_target_9_has_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'custom_float_target_9_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1431, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1433, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1435, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1437, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1439, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1440, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_bool_target_listener()', 'description': 'remove_custom_bool_target_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_bool_target&quot;. C++ signature :  void remove_custom_bool_target_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_bool_target_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1441, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_0_listener()', 'description': 'remove_custom_float_target_0_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_0&quot;. C++ signature :  void remove_custom_float_target_0_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_0_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1442, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_10_listener()', 'description': 'remove_custom_float_target_10_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_10&quot;. C++ signature :  void remove_custom_float_target_10_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_10_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1443, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_11_listener()', 'description': 'remove_custom_float_target_11_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_11&quot;. C++ signature :  void remove_custom_float_target_11_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_11_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1444, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_1_listener()', 'description': 'remove_custom_float_target_1_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_1&quot;. C++ signature :  void remove_custom_float_target_1_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_1_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1445, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_2_listener()', 'description': 'remove_custom_float_target_2_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_2&quot;. C++ signature :  void remove_custom_float_target_2_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_2_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1446, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_3_listener()', 'description': 'remove_custom_float_target_3_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_3&quot;. C++ signature :  void remove_custom_float_target_3_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_3_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1447, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_4_listener()', 'description': 'remove_custom_float_target_4_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_4&quot;. C++ signature :  void remove_custom_float_target_4_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_4_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1448, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_5_listener()', 'description': 'remove_custom_float_target_5_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_5&quot;. C++ signature :  void remove_custom_float_target_5_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_5_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1449, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_6_listener()', 'description': 'remove_custom_float_target_6_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_6&quot;. C++ signature :  void remove_custom_float_target_6_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_6_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1450, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_7_listener()', 'description': 'remove_custom_float_target_7_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_7&quot;. C++ signature :  void remove_custom_float_target_7_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_7_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1451, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_8_listener()', 'description': 'remove_custom_float_target_8_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_8&quot;. C++ signature :  void remove_custom_float_target_8_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_8_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1452, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_custom_float_target_9_listener()', 'description': 'remove_custom_float_target_9_listener( (CcControlDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;custom_float_target_9&quot;. C++ signature :  void remove_custom_float_target_9_listener(TCcControlDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_custom_float_target_9_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1453, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1454, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1455, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1456, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1457, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 1282, 'children': [], 'group': 'listener Method'},
{'ref': 1463, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 1339, 'children': [], 'group': 'listener Method'},
{'ref': 1464, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 1339, 'children': [], 'group': 'listener Method'},
{'ref': 1465, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 1339, 'children': [], 'group': 'listener Method'},
{'ref': 1494, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 1339, 'children': [], 'group': 'listener Method'},
{'ref': 1497, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 1339, 'children': [], 'group': 'listener Method'},
{'ref': 1498, 'tag': 'listener Method', 'name': 'Live.CcControlDevice.CcControlDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CcControlDevice', 'CcControlDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 1339, 'children': [], 'group': 'listener Method'},
{'ref': 1501, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_color_index_listener()', 'description': 'add_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1502, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_color_listener()', 'description': 'add_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1503, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_devices_listener()', 'description': 'add_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;devices&quot; has changed. C++ signature :  void add_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_devices_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1504, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_is_auto_colored_listener()', 'description': 'add_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_auto_colored&quot; has changed. C++ signature :  void add_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1505, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_mute_listener()', 'description': 'add_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1506, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_muted_via_solo_listener()', 'description': 'add_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted_via_solo&quot; has changed. C++ signature :  void add_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1507, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_name_listener()', 'description': 'add_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1508, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_solo_listener()', 'description': 'add_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1509, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.color_has_listener()', 'description': 'color_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1510, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.color_index_has_listener()', 'description': 'color_index_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1512, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.devices_has_listener()', 'description': 'devices_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;devices&quot;. C++ signature :  bool devices_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'devices_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1513, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.is_auto_colored_has_listener()', 'description': 'is_auto_colored_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_auto_colored&quot;. C++ signature :  bool is_auto_colored_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'is_auto_colored_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1514, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.mute_has_listener()', 'description': 'mute_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1515, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.muted_via_solo_has_listener()', 'description': 'muted_via_solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted_via_solo&quot;. C++ signature :  bool muted_via_solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'muted_via_solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1516, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.name_has_listener()', 'description': 'name_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1517, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1518, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_color_listener()', 'description': 'remove_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1519, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_devices_listener()', 'description': 'remove_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;devices&quot;. C++ signature :  void remove_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_devices_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1520, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_is_auto_colored_listener()', 'description': 'remove_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_auto_colored&quot;. C++ signature :  void remove_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1521, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_mute_listener()', 'description': 'remove_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1522, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_muted_via_solo_listener()', 'description': 'remove_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted_via_solo&quot;. C++ signature :  void remove_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1523, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_name_listener()', 'description': 'remove_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1524, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_solo_listener()', 'description': 'remove_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1525, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.solo_has_listener()', 'description': 'solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1554, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_color_index_listener()', 'description': 'add_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1555, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_color_listener()', 'description': 'add_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1556, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_devices_listener()', 'description': 'add_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;devices&quot; has changed. C++ signature :  void add_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_devices_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1557, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_is_auto_colored_listener()', 'description': 'add_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_auto_colored&quot; has changed. C++ signature :  void add_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1558, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_mute_listener()', 'description': 'add_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1559, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_muted_via_solo_listener()', 'description': 'add_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted_via_solo&quot; has changed. C++ signature :  void add_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1560, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_name_listener()', 'description': 'add_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1561, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_solo_listener()', 'description': 'add_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1564, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.color_has_listener()', 'description': 'color_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1566, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.color_index_has_listener()', 'description': 'color_index_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1569, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.devices_has_listener()', 'description': 'devices_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;devices&quot;. C++ signature :  bool devices_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'devices_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1575, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.is_auto_colored_has_listener()', 'description': 'is_auto_colored_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_auto_colored&quot;. C++ signature :  bool is_auto_colored_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'is_auto_colored_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1578, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.mute_has_listener()', 'description': 'mute_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1580, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.muted_via_solo_has_listener()', 'description': 'muted_via_solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted_via_solo&quot;. C++ signature :  bool muted_via_solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'muted_via_solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1582, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.name_has_listener()', 'description': 'name_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1583, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1584, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_color_listener()', 'description': 'remove_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1585, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_devices_listener()', 'description': 'remove_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;devices&quot;. C++ signature :  void remove_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_devices_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1586, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_is_auto_colored_listener()', 'description': 'remove_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_auto_colored&quot;. C++ signature :  void remove_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1587, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_mute_listener()', 'description': 'remove_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1588, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_muted_via_solo_listener()', 'description': 'remove_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted_via_solo&quot;. C++ signature :  void remove_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1589, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_name_listener()', 'description': 'remove_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1590, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_solo_listener()', 'description': 'remove_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1592, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.solo_has_listener()', 'description': 'solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 1500, 'children': [], 'group': 'listener Method'},
{'ref': 1595, 'tag': 'listener Method', 'name': 'Live.ChainMixerDevice.ChainMixerDevice.add_sends_listener()', 'description': 'add_sends_listener( (ChainMixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sends&quot; has changed. C++ signature :  void add_sends_listener(TPyHandle&lt;ABranchMixerDevice&gt;,boost::python::api::object)', 'path': ['Live', 'ChainMixerDevice', 'ChainMixerDevice', 'add_sends_listener()'], 'hierarchy': 3, 'ref_parent': 1594, 'children': [], 'group': 'listener Method'},
{'ref': 1596, 'tag': 'listener Method', 'name': 'Live.ChainMixerDevice.ChainMixerDevice.remove_sends_listener()', 'description': 'remove_sends_listener( (ChainMixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sends&quot;. C++ signature :  void remove_sends_listener(TPyHandle&lt;ABranchMixerDevice&gt;,boost::python::api::object)', 'path': ['Live', 'ChainMixerDevice', 'ChainMixerDevice', 'remove_sends_listener()'], 'hierarchy': 3, 'ref_parent': 1594, 'children': [], 'group': 'listener Method'},
{'ref': 1597, 'tag': 'listener Method', 'name': 'Live.ChainMixerDevice.ChainMixerDevice.sends_has_listener()', 'description': 'sends_has_listener( (ChainMixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sends&quot;. C++ signature :  bool sends_has_listener(TPyHandle&lt;ABranchMixerDevice&gt;,boost::python::api::object)', 'path': ['Live', 'ChainMixerDevice', 'ChainMixerDevice', 'sends_has_listener()'], 'hierarchy': 3, 'ref_parent': 1594, 'children': [], 'group': 'listener Method'},
{'ref': 1626, 'tag': 'listener Method', 'name': 'Live.ChainMixerDevice.ChainMixerDevice.add_sends_listener()', 'description': 'add_sends_listener( (ChainMixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sends&quot; has changed. C++ signature :  void add_sends_listener(TPyHandle&lt;ABranchMixerDevice&gt;,boost::python::api::object)', 'path': ['Live', 'ChainMixerDevice', 'ChainMixerDevice', 'add_sends_listener()'], 'hierarchy': 3, 'ref_parent': 1594, 'children': [], 'group': 'listener Method'},
{'ref': 1630, 'tag': 'listener Method', 'name': 'Live.ChainMixerDevice.ChainMixerDevice.remove_sends_listener()', 'description': 'remove_sends_listener( (ChainMixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sends&quot;. C++ signature :  void remove_sends_listener(TPyHandle&lt;ABranchMixerDevice&gt;,boost::python::api::object)', 'path': ['Live', 'ChainMixerDevice', 'ChainMixerDevice', 'remove_sends_listener()'], 'hierarchy': 3, 'ref_parent': 1594, 'children': [], 'group': 'listener Method'},
{'ref': 1632, 'tag': 'listener Method', 'name': 'Live.ChainMixerDevice.ChainMixerDevice.sends_has_listener()', 'description': 'sends_has_listener( (ChainMixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sends&quot;. C++ signature :  bool sends_has_listener(TPyHandle&lt;ABranchMixerDevice&gt;,boost::python::api::object)', 'path': ['Live', 'ChainMixerDevice', 'ChainMixerDevice', 'sends_has_listener()'], 'hierarchy': 3, 'ref_parent': 1594, 'children': [], 'group': 'listener Method'},
{'ref': 1667, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_color_index_listener()', 'description': 'add_color_index_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1668, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_color_listener()', 'description': 'add_color_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1669, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_end_marker_listener()', 'description': 'add_end_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;end_marker&quot; has changed. C++ signature :  void add_end_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1670, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_end_time_listener()', 'description': 'add_end_time_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;end_time&quot; has changed. C++ signature :  void add_end_time_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_end_time_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1671, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_file_path_listener()', 'description': 'add_file_path_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;file_path&quot; has changed. C++ signature :  void add_file_path_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1672, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_gain_listener()', 'description': 'add_gain_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;gain&quot; has changed. C++ signature :  void add_gain_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_gain_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1673, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_groove_listener()', 'description': 'add_groove_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;groove&quot; has changed. C++ signature :  void add_groove_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_groove_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1674, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_has_envelopes_listener()', 'description': 'add_has_envelopes_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_envelopes&quot; has changed. C++ signature :  void add_has_envelopes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_has_envelopes_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1675, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_is_overdubbing_listener()', 'description': 'add_is_overdubbing_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_overdubbing&quot; has changed. C++ signature :  void add_is_overdubbing_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_is_overdubbing_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1676, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_is_recording_listener()', 'description': 'add_is_recording_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_recording&quot; has changed. C++ signature :  void add_is_recording_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_is_recording_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1677, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_launch_mode_listener()', 'description': 'add_launch_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;launch_mode&quot; has changed. C++ signature :  void add_launch_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_launch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1678, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_launch_quantization_listener()', 'description': 'add_launch_quantization_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;launch_quantization&quot; has changed. C++ signature :  void add_launch_quantization_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_launch_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1679, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_legato_listener()', 'description': 'add_legato_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;legato&quot; has changed. C++ signature :  void add_legato_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_legato_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1680, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_loop_end_listener()', 'description': 'add_loop_end_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_end&quot; has changed. C++ signature :  void add_loop_end_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_loop_end_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1681, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_loop_jump_listener()', 'description': 'add_loop_jump_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_jump&quot; has changed. C++ signature :  void add_loop_jump_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_loop_jump_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1682, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_loop_start_listener()', 'description': 'add_loop_start_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_start&quot; has changed. C++ signature :  void add_loop_start_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1683, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_looping_listener()', 'description': 'add_looping_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;looping&quot; has changed. C++ signature :  void add_looping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_looping_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1684, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_muted_listener()', 'description': 'add_muted_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted&quot; has changed. C++ signature :  void add_muted_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_muted_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1685, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_name_listener()', 'description': 'add_name_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1687, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_notes_listener()', 'description': 'add_notes_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;notes&quot; has changed. C++ signature :  void add_notes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_notes_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1688, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_pitch_coarse_listener()', 'description': 'add_pitch_coarse_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_coarse&quot; has changed. C++ signature :  void add_pitch_coarse_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_pitch_coarse_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1689, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_pitch_fine_listener()', 'description': 'add_pitch_fine_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_fine&quot; has changed. C++ signature :  void add_pitch_fine_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_pitch_fine_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1690, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_playing_position_listener()', 'description': 'add_playing_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_position&quot; has changed. C++ signature :  void add_playing_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1691, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_playing_status_listener()', 'description': 'add_playing_status_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_status&quot; has changed. C++ signature :  void add_playing_status_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1692, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_position_listener()', 'description': 'add_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;position&quot; has changed. C++ signature :  void add_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_position_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1693, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_ram_mode_listener()', 'description': 'add_ram_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ram_mode&quot; has changed. C++ signature :  void add_ram_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_ram_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1694, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_signature_denominator_listener()', 'description': 'add_signature_denominator_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_denominator&quot; has changed. C++ signature :  void add_signature_denominator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1695, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_signature_numerator_listener()', 'description': 'add_signature_numerator_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_numerator&quot; has changed. C++ signature :  void add_signature_numerator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1696, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_start_marker_listener()', 'description': 'add_start_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;start_marker&quot; has changed. C++ signature :  void add_start_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1697, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_velocity_amount_listener()', 'description': 'add_velocity_amount_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;velocity_amount&quot; has changed. C++ signature :  void add_velocity_amount_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1699, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_warp_markers_listener()', 'description': 'add_warp_markers_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_markers&quot; has changed. C++ signature :  void add_warp_markers_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1700, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_warp_mode_listener()', 'description': 'add_warp_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_mode&quot; has changed. C++ signature :  void add_warp_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1701, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_warping_listener()', 'description': 'add_warping_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warping&quot; has changed. C++ signature :  void add_warping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_warping_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1707, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.color_has_listener()', 'description': 'color_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1708, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.color_index_has_listener()', 'description': 'color_index_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1715, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.end_marker_has_listener()', 'description': 'end_marker_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;end_marker&quot;. C++ signature :  bool end_marker_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'end_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1716, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.end_time_has_listener()', 'description': 'end_time_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;end_time&quot;. C++ signature :  bool end_time_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'end_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1717, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.file_path_has_listener()', 'description': 'file_path_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;file_path&quot;. C++ signature :  bool file_path_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'file_path_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1719, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.gain_has_listener()', 'description': 'gain_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;gain&quot;. C++ signature :  bool gain_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'gain_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1726, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.groove_has_listener()', 'description': 'groove_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;groove&quot;. C++ signature :  bool groove_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'groove_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1727, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.has_envelopes_has_listener()', 'description': 'has_envelopes_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_envelopes&quot;. C++ signature :  bool has_envelopes_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'has_envelopes_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1728, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.is_overdubbing_has_listener()', 'description': 'is_overdubbing_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_overdubbing&quot;. C++ signature :  bool is_overdubbing_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'is_overdubbing_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1729, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.is_recording_has_listener()', 'description': 'is_recording_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_recording&quot;. C++ signature :  bool is_recording_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'is_recording_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1730, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.launch_mode_has_listener()', 'description': 'launch_mode_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;launch_mode&quot;. C++ signature :  bool launch_mode_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'launch_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1731, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.launch_quantization_has_listener()', 'description': 'launch_quantization_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;launch_quantization&quot;. C++ signature :  bool launch_quantization_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'launch_quantization_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1732, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.legato_has_listener()', 'description': 'legato_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;legato&quot;. C++ signature :  bool legato_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'legato_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1733, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.loop_end_has_listener()', 'description': 'loop_end_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_end&quot;. C++ signature :  bool loop_end_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'loop_end_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1734, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.loop_jump_has_listener()', 'description': 'loop_jump_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_jump&quot;. C++ signature :  bool loop_jump_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'loop_jump_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1735, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.loop_start_has_listener()', 'description': 'loop_start_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_start&quot;. C++ signature :  bool loop_start_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'loop_start_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1736, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.looping_has_listener()', 'description': 'looping_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;looping&quot;. C++ signature :  bool looping_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'looping_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1739, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.muted_has_listener()', 'description': 'muted_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted&quot;. C++ signature :  bool muted_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'muted_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1740, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.name_has_listener()', 'description': 'name_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1741, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.notes_has_listener()', 'description': 'notes_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;notes&quot;. C++ signature :  bool notes_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'notes_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1742, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.pitch_coarse_has_listener()', 'description': 'pitch_coarse_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_coarse&quot;. C++ signature :  bool pitch_coarse_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'pitch_coarse_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1743, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.pitch_fine_has_listener()', 'description': 'pitch_fine_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_fine&quot;. C++ signature :  bool pitch_fine_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'pitch_fine_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1744, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.playing_position_has_listener()', 'description': 'playing_position_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_position&quot;. C++ signature :  bool playing_position_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'playing_position_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1745, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.playing_status_has_listener()', 'description': 'playing_status_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_status&quot;. C++ signature :  bool playing_status_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'playing_status_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1746, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.position_has_listener()', 'description': 'position_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;position&quot;. C++ signature :  bool position_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'position_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1749, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.ram_mode_has_listener()', 'description': 'ram_mode_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ram_mode&quot;. C++ signature :  bool ram_mode_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'ram_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1750, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1751, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_color_listener()', 'description': 'remove_color_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1752, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_end_marker_listener()', 'description': 'remove_end_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;end_marker&quot;. C++ signature :  void remove_end_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1753, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_end_time_listener()', 'description': 'remove_end_time_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;end_time&quot;. C++ signature :  void remove_end_time_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_end_time_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1754, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_file_path_listener()', 'description': 'remove_file_path_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;file_path&quot;. C++ signature :  void remove_file_path_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1755, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_gain_listener()', 'description': 'remove_gain_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;gain&quot;. C++ signature :  void remove_gain_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_gain_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1756, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_groove_listener()', 'description': 'remove_groove_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;groove&quot;. C++ signature :  void remove_groove_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_groove_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1757, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_has_envelopes_listener()', 'description': 'remove_has_envelopes_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_envelopes&quot;. C++ signature :  void remove_has_envelopes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_has_envelopes_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1758, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_is_overdubbing_listener()', 'description': 'remove_is_overdubbing_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_overdubbing&quot;. C++ signature :  void remove_is_overdubbing_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_is_overdubbing_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1759, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_is_recording_listener()', 'description': 'remove_is_recording_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_recording&quot;. C++ signature :  void remove_is_recording_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_is_recording_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1760, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_launch_mode_listener()', 'description': 'remove_launch_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;launch_mode&quot;. C++ signature :  void remove_launch_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_launch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1761, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_launch_quantization_listener()', 'description': 'remove_launch_quantization_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;launch_quantization&quot;. C++ signature :  void remove_launch_quantization_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_launch_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1762, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_legato_listener()', 'description': 'remove_legato_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;legato&quot;. C++ signature :  void remove_legato_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_legato_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1763, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_loop_end_listener()', 'description': 'remove_loop_end_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_end&quot;. C++ signature :  void remove_loop_end_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_loop_end_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1764, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_loop_jump_listener()', 'description': 'remove_loop_jump_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_jump&quot;. C++ signature :  void remove_loop_jump_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_loop_jump_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1765, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_loop_start_listener()', 'description': 'remove_loop_start_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_start&quot;. C++ signature :  void remove_loop_start_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1766, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_looping_listener()', 'description': 'remove_looping_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;looping&quot;. C++ signature :  void remove_looping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_looping_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1767, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_muted_listener()', 'description': 'remove_muted_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted&quot;. C++ signature :  void remove_muted_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_muted_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1768, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_name_listener()', 'description': 'remove_name_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1772, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_notes_listener()', 'description': 'remove_notes_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;notes&quot;. C++ signature :  void remove_notes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_notes_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1773, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_pitch_coarse_listener()', 'description': 'remove_pitch_coarse_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_coarse&quot;. C++ signature :  void remove_pitch_coarse_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_pitch_coarse_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1774, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_pitch_fine_listener()', 'description': 'remove_pitch_fine_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_fine&quot;. C++ signature :  void remove_pitch_fine_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_pitch_fine_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1775, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_playing_position_listener()', 'description': 'remove_playing_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_position&quot;. C++ signature :  void remove_playing_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1776, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_playing_status_listener()', 'description': 'remove_playing_status_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_status&quot;. C++ signature :  void remove_playing_status_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1777, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_position_listener()', 'description': 'remove_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;position&quot;. C++ signature :  void remove_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_position_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1778, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_ram_mode_listener()', 'description': 'remove_ram_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ram_mode&quot;. C++ signature :  void remove_ram_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_ram_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1779, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_signature_denominator_listener()', 'description': 'remove_signature_denominator_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_denominator&quot;. C++ signature :  void remove_signature_denominator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1780, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_signature_numerator_listener()', 'description': 'remove_signature_numerator_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_numerator&quot;. C++ signature :  void remove_signature_numerator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1781, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_start_marker_listener()', 'description': 'remove_start_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;start_marker&quot;. C++ signature :  void remove_start_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1782, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_velocity_amount_listener()', 'description': 'remove_velocity_amount_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;velocity_amount&quot;. C++ signature :  void remove_velocity_amount_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1784, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_warp_markers_listener()', 'description': 'remove_warp_markers_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_markers&quot;. C++ signature :  void remove_warp_markers_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1785, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_warp_mode_listener()', 'description': 'remove_warp_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_mode&quot;. C++ signature :  void remove_warp_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1786, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_warping_listener()', 'description': 'remove_warping_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warping&quot;. C++ signature :  void remove_warping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_warping_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1795, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.signature_denominator_has_listener()', 'description': 'signature_denominator_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_denominator&quot;. C++ signature :  bool signature_denominator_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'signature_denominator_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1796, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.signature_numerator_has_listener()', 'description': 'signature_numerator_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_numerator&quot;. C++ signature :  bool signature_numerator_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'signature_numerator_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1797, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.start_marker_has_listener()', 'description': 'start_marker_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;start_marker&quot;. C++ signature :  bool start_marker_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'start_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1800, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.velocity_amount_has_listener()', 'description': 'velocity_amount_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;velocity_amount&quot;. C++ signature :  bool velocity_amount_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'velocity_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1801, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.warp_markers_has_listener()', 'description': 'warp_markers_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_markers&quot;. C++ signature :  bool warp_markers_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'warp_markers_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1802, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.warp_mode_has_listener()', 'description': 'warp_mode_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_mode&quot;. C++ signature :  bool warp_mode_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'warp_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1803, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.warping_has_listener()', 'description': 'warping_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warping&quot;. C++ signature :  bool warping_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'warping_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1833, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_color_index_listener()', 'description': 'add_color_index_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1834, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_color_listener()', 'description': 'add_color_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1835, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_end_marker_listener()', 'description': 'add_end_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;end_marker&quot; has changed. C++ signature :  void add_end_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1836, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_end_time_listener()', 'description': 'add_end_time_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;end_time&quot; has changed. C++ signature :  void add_end_time_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_end_time_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1837, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_file_path_listener()', 'description': 'add_file_path_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;file_path&quot; has changed. C++ signature :  void add_file_path_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1838, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_gain_listener()', 'description': 'add_gain_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;gain&quot; has changed. C++ signature :  void add_gain_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_gain_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1839, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_groove_listener()', 'description': 'add_groove_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;groove&quot; has changed. C++ signature :  void add_groove_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_groove_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1840, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_has_envelopes_listener()', 'description': 'add_has_envelopes_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_envelopes&quot; has changed. C++ signature :  void add_has_envelopes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_has_envelopes_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1841, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_is_overdubbing_listener()', 'description': 'add_is_overdubbing_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_overdubbing&quot; has changed. C++ signature :  void add_is_overdubbing_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_is_overdubbing_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1842, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_is_recording_listener()', 'description': 'add_is_recording_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_recording&quot; has changed. C++ signature :  void add_is_recording_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_is_recording_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1843, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_launch_mode_listener()', 'description': 'add_launch_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;launch_mode&quot; has changed. C++ signature :  void add_launch_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_launch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1844, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_launch_quantization_listener()', 'description': 'add_launch_quantization_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;launch_quantization&quot; has changed. C++ signature :  void add_launch_quantization_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_launch_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1845, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_legato_listener()', 'description': 'add_legato_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;legato&quot; has changed. C++ signature :  void add_legato_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_legato_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1846, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_loop_end_listener()', 'description': 'add_loop_end_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_end&quot; has changed. C++ signature :  void add_loop_end_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_loop_end_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1847, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_loop_jump_listener()', 'description': 'add_loop_jump_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_jump&quot; has changed. C++ signature :  void add_loop_jump_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_loop_jump_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1848, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_loop_start_listener()', 'description': 'add_loop_start_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_start&quot; has changed. C++ signature :  void add_loop_start_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1849, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_looping_listener()', 'description': 'add_looping_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;looping&quot; has changed. C++ signature :  void add_looping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_looping_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1850, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_muted_listener()', 'description': 'add_muted_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted&quot; has changed. C++ signature :  void add_muted_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_muted_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1851, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_name_listener()', 'description': 'add_name_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1853, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_notes_listener()', 'description': 'add_notes_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;notes&quot; has changed. C++ signature :  void add_notes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_notes_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1854, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_pitch_coarse_listener()', 'description': 'add_pitch_coarse_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_coarse&quot; has changed. C++ signature :  void add_pitch_coarse_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_pitch_coarse_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1855, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_pitch_fine_listener()', 'description': 'add_pitch_fine_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_fine&quot; has changed. C++ signature :  void add_pitch_fine_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_pitch_fine_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1856, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_playing_position_listener()', 'description': 'add_playing_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_position&quot; has changed. C++ signature :  void add_playing_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1857, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_playing_status_listener()', 'description': 'add_playing_status_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_status&quot; has changed. C++ signature :  void add_playing_status_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1858, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_position_listener()', 'description': 'add_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;position&quot; has changed. C++ signature :  void add_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_position_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1859, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_ram_mode_listener()', 'description': 'add_ram_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ram_mode&quot; has changed. C++ signature :  void add_ram_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_ram_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1860, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_signature_denominator_listener()', 'description': 'add_signature_denominator_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_denominator&quot; has changed. C++ signature :  void add_signature_denominator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1861, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_signature_numerator_listener()', 'description': 'add_signature_numerator_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_numerator&quot; has changed. C++ signature :  void add_signature_numerator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1862, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_start_marker_listener()', 'description': 'add_start_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;start_marker&quot; has changed. C++ signature :  void add_start_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1863, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_velocity_amount_listener()', 'description': 'add_velocity_amount_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;velocity_amount&quot; has changed. C++ signature :  void add_velocity_amount_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1865, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_warp_markers_listener()', 'description': 'add_warp_markers_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_markers&quot; has changed. C++ signature :  void add_warp_markers_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1866, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_warp_mode_listener()', 'description': 'add_warp_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_mode&quot; has changed. C++ signature :  void add_warp_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1867, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_warping_listener()', 'description': 'add_warping_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warping&quot; has changed. C++ signature :  void add_warping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_warping_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1876, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.color_has_listener()', 'description': 'color_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1878, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.color_index_has_listener()', 'description': 'color_index_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1886, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.end_marker_has_listener()', 'description': 'end_marker_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;end_marker&quot;. C++ signature :  bool end_marker_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'end_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1888, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.end_time_has_listener()', 'description': 'end_time_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;end_time&quot;. C++ signature :  bool end_time_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'end_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1890, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.file_path_has_listener()', 'description': 'file_path_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;file_path&quot;. C++ signature :  bool file_path_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'file_path_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1894, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.gain_has_listener()', 'description': 'gain_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;gain&quot;. C++ signature :  bool gain_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'gain_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1902, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.groove_has_listener()', 'description': 'groove_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;groove&quot;. C++ signature :  bool groove_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'groove_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1904, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.has_envelopes_has_listener()', 'description': 'has_envelopes_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_envelopes&quot;. C++ signature :  bool has_envelopes_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'has_envelopes_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1910, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.is_overdubbing_has_listener()', 'description': 'is_overdubbing_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_overdubbing&quot;. C++ signature :  bool is_overdubbing_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'is_overdubbing_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1913, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.is_recording_has_listener()', 'description': 'is_recording_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_recording&quot;. C++ signature :  bool is_recording_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'is_recording_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1916, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.launch_mode_has_listener()', 'description': 'launch_mode_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;launch_mode&quot;. C++ signature :  bool launch_mode_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'launch_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1918, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.launch_quantization_has_listener()', 'description': 'launch_quantization_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;launch_quantization&quot;. C++ signature :  bool launch_quantization_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'launch_quantization_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1920, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.legato_has_listener()', 'description': 'legato_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;legato&quot;. C++ signature :  bool legato_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'legato_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1923, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.loop_end_has_listener()', 'description': 'loop_end_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_end&quot;. C++ signature :  bool loop_end_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'loop_end_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1924, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.loop_jump_has_listener()', 'description': 'loop_jump_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_jump&quot;. C++ signature :  bool loop_jump_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'loop_jump_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1926, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.loop_start_has_listener()', 'description': 'loop_start_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_start&quot;. C++ signature :  bool loop_start_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'loop_start_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1928, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.looping_has_listener()', 'description': 'looping_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;looping&quot;. C++ signature :  bool looping_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'looping_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1932, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.muted_has_listener()', 'description': 'muted_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted&quot;. C++ signature :  bool muted_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'muted_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1934, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.name_has_listener()', 'description': 'name_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1935, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.notes_has_listener()', 'description': 'notes_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;notes&quot;. C++ signature :  bool notes_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'notes_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1937, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.pitch_coarse_has_listener()', 'description': 'pitch_coarse_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_coarse&quot;. C++ signature :  bool pitch_coarse_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'pitch_coarse_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1939, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.pitch_fine_has_listener()', 'description': 'pitch_fine_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_fine&quot;. C++ signature :  bool pitch_fine_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'pitch_fine_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1941, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.playing_position_has_listener()', 'description': 'playing_position_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_position&quot;. C++ signature :  bool playing_position_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'playing_position_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1942, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.playing_status_has_listener()', 'description': 'playing_status_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_status&quot;. C++ signature :  bool playing_status_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'playing_status_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1944, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.position_has_listener()', 'description': 'position_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;position&quot;. C++ signature :  bool position_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'position_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1948, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.ram_mode_has_listener()', 'description': 'ram_mode_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ram_mode&quot;. C++ signature :  bool ram_mode_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'ram_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1949, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1950, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_color_listener()', 'description': 'remove_color_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1951, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_end_marker_listener()', 'description': 'remove_end_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;end_marker&quot;. C++ signature :  void remove_end_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1952, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_end_time_listener()', 'description': 'remove_end_time_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;end_time&quot;. C++ signature :  void remove_end_time_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_end_time_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1953, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_file_path_listener()', 'description': 'remove_file_path_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;file_path&quot;. C++ signature :  void remove_file_path_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1954, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_gain_listener()', 'description': 'remove_gain_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;gain&quot;. C++ signature :  void remove_gain_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_gain_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1955, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_groove_listener()', 'description': 'remove_groove_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;groove&quot;. C++ signature :  void remove_groove_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_groove_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1956, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_has_envelopes_listener()', 'description': 'remove_has_envelopes_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_envelopes&quot;. C++ signature :  void remove_has_envelopes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_has_envelopes_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1957, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_is_overdubbing_listener()', 'description': 'remove_is_overdubbing_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_overdubbing&quot;. C++ signature :  void remove_is_overdubbing_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_is_overdubbing_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1958, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_is_recording_listener()', 'description': 'remove_is_recording_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_recording&quot;. C++ signature :  void remove_is_recording_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_is_recording_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1959, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_launch_mode_listener()', 'description': 'remove_launch_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;launch_mode&quot;. C++ signature :  void remove_launch_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_launch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1960, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_launch_quantization_listener()', 'description': 'remove_launch_quantization_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;launch_quantization&quot;. C++ signature :  void remove_launch_quantization_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_launch_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1961, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_legato_listener()', 'description': 'remove_legato_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;legato&quot;. C++ signature :  void remove_legato_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_legato_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1962, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_loop_end_listener()', 'description': 'remove_loop_end_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_end&quot;. C++ signature :  void remove_loop_end_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_loop_end_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1963, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_loop_jump_listener()', 'description': 'remove_loop_jump_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_jump&quot;. C++ signature :  void remove_loop_jump_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_loop_jump_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1964, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_loop_start_listener()', 'description': 'remove_loop_start_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_start&quot;. C++ signature :  void remove_loop_start_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1965, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_looping_listener()', 'description': 'remove_looping_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;looping&quot;. C++ signature :  void remove_looping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_looping_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1966, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_muted_listener()', 'description': 'remove_muted_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted&quot;. C++ signature :  void remove_muted_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_muted_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1967, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_name_listener()', 'description': 'remove_name_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1971, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_notes_listener()', 'description': 'remove_notes_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;notes&quot;. C++ signature :  void remove_notes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_notes_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1972, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_pitch_coarse_listener()', 'description': 'remove_pitch_coarse_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_coarse&quot;. C++ signature :  void remove_pitch_coarse_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_pitch_coarse_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1973, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_pitch_fine_listener()', 'description': 'remove_pitch_fine_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_fine&quot;. C++ signature :  void remove_pitch_fine_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_pitch_fine_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1974, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_playing_position_listener()', 'description': 'remove_playing_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_position&quot;. C++ signature :  void remove_playing_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1975, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_playing_status_listener()', 'description': 'remove_playing_status_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_status&quot;. C++ signature :  void remove_playing_status_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1976, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_position_listener()', 'description': 'remove_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;position&quot;. C++ signature :  void remove_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_position_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1977, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_ram_mode_listener()', 'description': 'remove_ram_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ram_mode&quot;. C++ signature :  void remove_ram_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_ram_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1978, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_signature_denominator_listener()', 'description': 'remove_signature_denominator_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_denominator&quot;. C++ signature :  void remove_signature_denominator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1979, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_signature_numerator_listener()', 'description': 'remove_signature_numerator_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_numerator&quot;. C++ signature :  void remove_signature_numerator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1980, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_start_marker_listener()', 'description': 'remove_start_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;start_marker&quot;. C++ signature :  void remove_start_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1981, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_velocity_amount_listener()', 'description': 'remove_velocity_amount_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;velocity_amount&quot;. C++ signature :  void remove_velocity_amount_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1983, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_warp_markers_listener()', 'description': 'remove_warp_markers_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_markers&quot;. C++ signature :  void remove_warp_markers_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1984, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_warp_mode_listener()', 'description': 'remove_warp_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_mode&quot;. C++ signature :  void remove_warp_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1985, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_warping_listener()', 'description': 'remove_warping_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warping&quot;. C++ signature :  void remove_warping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_warping_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1997, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.signature_denominator_has_listener()', 'description': 'signature_denominator_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_denominator&quot;. C++ signature :  bool signature_denominator_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'signature_denominator_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 1999, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.signature_numerator_has_listener()', 'description': 'signature_numerator_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_numerator&quot;. C++ signature :  bool signature_numerator_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'signature_numerator_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 2001, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.start_marker_has_listener()', 'description': 'start_marker_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;start_marker&quot;. C++ signature :  bool start_marker_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'start_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 2006, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.velocity_amount_has_listener()', 'description': 'velocity_amount_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;velocity_amount&quot;. C++ signature :  bool velocity_amount_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'velocity_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 2009, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.warp_markers_has_listener()', 'description': 'warp_markers_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_markers&quot;. C++ signature :  bool warp_markers_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'warp_markers_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 2011, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.warp_mode_has_listener()', 'description': 'warp_mode_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_mode&quot;. C++ signature :  bool warp_mode_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'warp_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 2013, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.warping_has_listener()', 'description': 'warping_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warping&quot;. C++ signature :  bool warping_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'warping_has_listener()'], 'hierarchy': 3, 'ref_parent': 1666, 'children': [], 'group': 'listener Method'},
{'ref': 2572, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_color_index_listener()', 'description': 'add_color_index_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2573, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_color_listener()', 'description': 'add_color_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2574, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_controls_other_clips_listener()', 'description': 'add_controls_other_clips_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;controls_other_clips&quot; has changed. C++ signature :  void add_controls_other_clips_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_controls_other_clips_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2575, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_has_clip_listener()', 'description': 'add_has_clip_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_clip&quot; has changed. C++ signature :  void add_has_clip_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_has_clip_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2576, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_has_stop_button_listener()', 'description': 'add_has_stop_button_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_stop_button&quot; has changed. C++ signature :  void add_has_stop_button_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_has_stop_button_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2577, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_is_triggered_listener()', 'description': 'add_is_triggered_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_triggered&quot; has changed. C++ signature :  void add_is_triggered_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2578, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_playing_status_listener()', 'description': 'add_playing_status_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_status&quot; has changed. C++ signature :  void add_playing_status_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2579, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.color_has_listener()', 'description': 'color_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2580, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.color_index_has_listener()', 'description': 'color_index_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2581, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.controls_other_clips_has_listener()', 'description': 'controls_other_clips_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;controls_other_clips&quot;. C++ signature :  bool controls_other_clips_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'controls_other_clips_has_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2586, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.has_clip_has_listener()', 'description': 'has_clip_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_clip&quot;. C++ signature :  bool has_clip_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'has_clip_has_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2587, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.has_stop_button_has_listener()', 'description': 'has_stop_button_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_stop_button&quot;. C++ signature :  bool has_stop_button_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'has_stop_button_has_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2588, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.is_triggered_has_listener()', 'description': 'is_triggered_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_triggered&quot;. C++ signature :  bool is_triggered_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'is_triggered_has_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2589, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.playing_status_has_listener()', 'description': 'playing_status_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_status&quot;. C++ signature :  bool playing_status_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'playing_status_has_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2590, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_color_index_listener()', 'description': 'remove_color_index_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2591, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_color_listener()', 'description': 'remove_color_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2592, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_controls_other_clips_listener()', 'description': 'remove_controls_other_clips_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;controls_other_clips&quot;. C++ signature :  void remove_controls_other_clips_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_controls_other_clips_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2593, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_has_clip_listener()', 'description': 'remove_has_clip_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_clip&quot;. C++ signature :  void remove_has_clip_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_has_clip_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2594, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_has_stop_button_listener()', 'description': 'remove_has_stop_button_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_stop_button&quot;. C++ signature :  void remove_has_stop_button_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_has_stop_button_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2595, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_is_triggered_listener()', 'description': 'remove_is_triggered_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_triggered&quot;. C++ signature :  void remove_is_triggered_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2596, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_playing_status_listener()', 'description': 'remove_playing_status_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_status&quot;. C++ signature :  void remove_playing_status_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2627, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_color_index_listener()', 'description': 'add_color_index_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2628, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_color_listener()', 'description': 'add_color_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2629, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_controls_other_clips_listener()', 'description': 'add_controls_other_clips_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;controls_other_clips&quot; has changed. C++ signature :  void add_controls_other_clips_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_controls_other_clips_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2630, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_has_clip_listener()', 'description': 'add_has_clip_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_clip&quot; has changed. C++ signature :  void add_has_clip_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_has_clip_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2631, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_has_stop_button_listener()', 'description': 'add_has_stop_button_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_stop_button&quot; has changed. C++ signature :  void add_has_stop_button_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_has_stop_button_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2632, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_is_triggered_listener()', 'description': 'add_is_triggered_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_triggered&quot; has changed. C++ signature :  void add_is_triggered_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2633, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_playing_status_listener()', 'description': 'add_playing_status_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_status&quot; has changed. C++ signature :  void add_playing_status_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2637, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.color_has_listener()', 'description': 'color_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2639, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.color_index_has_listener()', 'description': 'color_index_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2641, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.controls_other_clips_has_listener()', 'description': 'controls_other_clips_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;controls_other_clips&quot;. C++ signature :  bool controls_other_clips_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'controls_other_clips_has_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2647, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.has_clip_has_listener()', 'description': 'has_clip_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_clip&quot;. C++ signature :  bool has_clip_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'has_clip_has_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2649, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.has_stop_button_has_listener()', 'description': 'has_stop_button_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_stop_button&quot;. C++ signature :  bool has_stop_button_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'has_stop_button_has_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2654, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.is_triggered_has_listener()', 'description': 'is_triggered_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_triggered&quot;. C++ signature :  bool is_triggered_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'is_triggered_has_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2656, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.playing_status_has_listener()', 'description': 'playing_status_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_status&quot;. C++ signature :  bool playing_status_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'playing_status_has_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2657, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_color_index_listener()', 'description': 'remove_color_index_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2658, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_color_listener()', 'description': 'remove_color_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2659, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_controls_other_clips_listener()', 'description': 'remove_controls_other_clips_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;controls_other_clips&quot;. C++ signature :  void remove_controls_other_clips_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_controls_other_clips_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2660, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_has_clip_listener()', 'description': 'remove_has_clip_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_clip&quot;. C++ signature :  void remove_has_clip_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_has_clip_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2661, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_has_stop_button_listener()', 'description': 'remove_has_stop_button_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_stop_button&quot;. C++ signature :  void remove_has_stop_button_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_has_stop_button_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2662, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_is_triggered_listener()', 'description': 'remove_is_triggered_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_triggered&quot;. C++ signature :  void remove_is_triggered_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2663, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_playing_status_listener()', 'description': 'remove_playing_status_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_status&quot;. C++ signature :  void remove_playing_status_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 2571, 'children': [], 'group': 'listener Method'},
{'ref': 2749, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_available_input_routing_channels_listener()', 'description': 'add_available_input_routing_channels_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_channels&quot; has changed. C++ signature :  void add_available_input_routing_channels_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2750, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_available_input_routing_types_listener()', 'description': 'add_available_input_routing_types_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_types&quot; has changed. C++ signature :  void add_available_input_routing_types_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2751, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_input_routing_channel_listener()', 'description': 'add_input_routing_channel_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_channel&quot; has changed. C++ signature :  void add_input_routing_channel_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2752, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_input_routing_type_listener()', 'description': 'add_input_routing_type_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_type&quot; has changed. C++ signature :  void add_input_routing_type_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2753, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2754, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2755, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2756, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2757, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2758, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.available_input_routing_channels_has_listener()', 'description': 'available_input_routing_channels_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_channels&quot;. C++ signature :  bool available_input_routing_channels_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'available_input_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2759, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.available_input_routing_types_has_listener()', 'description': 'available_input_routing_types_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_types&quot;. C++ signature :  bool available_input_routing_types_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'available_input_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2760, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.input_routing_channel_has_listener()', 'description': 'input_routing_channel_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_channel&quot;. C++ signature :  bool input_routing_channel_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'input_routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2761, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.input_routing_type_has_listener()', 'description': 'input_routing_type_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_type&quot;. C++ signature :  bool input_routing_type_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'input_routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2762, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2763, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2764, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2765, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2766, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2767, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_available_input_routing_channels_listener()', 'description': 'remove_available_input_routing_channels_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_channels&quot;. C++ signature :  void remove_available_input_routing_channels_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2768, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_available_input_routing_types_listener()', 'description': 'remove_available_input_routing_types_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_types&quot;. C++ signature :  void remove_available_input_routing_types_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2769, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_input_routing_channel_listener()', 'description': 'remove_input_routing_channel_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_channel&quot;. C++ signature :  void remove_input_routing_channel_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2770, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_input_routing_type_listener()', 'description': 'remove_input_routing_type_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_type&quot;. C++ signature :  void remove_input_routing_type_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2771, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2772, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2773, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2774, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2775, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2806, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_available_input_routing_channels_listener()', 'description': 'add_available_input_routing_channels_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_channels&quot; has changed. C++ signature :  void add_available_input_routing_channels_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2807, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_available_input_routing_types_listener()', 'description': 'add_available_input_routing_types_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_types&quot; has changed. C++ signature :  void add_available_input_routing_types_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2808, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_input_routing_channel_listener()', 'description': 'add_input_routing_channel_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_channel&quot; has changed. C++ signature :  void add_input_routing_channel_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2809, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_input_routing_type_listener()', 'description': 'add_input_routing_type_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_type&quot; has changed. C++ signature :  void add_input_routing_type_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2810, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2811, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2812, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2813, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2814, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2816, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.available_input_routing_channels_has_listener()', 'description': 'available_input_routing_channels_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_channels&quot;. C++ signature :  bool available_input_routing_channels_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'available_input_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2818, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.available_input_routing_types_has_listener()', 'description': 'available_input_routing_types_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_types&quot;. C++ signature :  bool available_input_routing_types_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'available_input_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2825, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.input_routing_channel_has_listener()', 'description': 'input_routing_channel_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_channel&quot;. C++ signature :  bool input_routing_channel_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'input_routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2827, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.input_routing_type_has_listener()', 'description': 'input_routing_type_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_type&quot;. C++ signature :  bool input_routing_type_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'input_routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2829, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2831, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2833, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2835, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2837, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2838, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_available_input_routing_channels_listener()', 'description': 'remove_available_input_routing_channels_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_channels&quot;. C++ signature :  void remove_available_input_routing_channels_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2839, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_available_input_routing_types_listener()', 'description': 'remove_available_input_routing_types_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_types&quot;. C++ signature :  void remove_available_input_routing_types_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2840, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_input_routing_channel_listener()', 'description': 'remove_input_routing_channel_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_channel&quot;. C++ signature :  void remove_input_routing_channel_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2841, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_input_routing_type_listener()', 'description': 'remove_input_routing_type_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_type&quot;. C++ signature :  void remove_input_routing_type_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2842, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2843, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2844, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2845, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2846, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 2748, 'children': [], 'group': 'listener Method'},
{'ref': 2851, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2777, 'children': [], 'group': 'listener Method'},
{'ref': 2852, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 2777, 'children': [], 'group': 'listener Method'},
{'ref': 2853, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2777, 'children': [], 'group': 'listener Method'},
{'ref': 2882, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2777, 'children': [], 'group': 'listener Method'},
{'ref': 2885, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 2777, 'children': [], 'group': 'listener Method'},
{'ref': 2886, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2777, 'children': [], 'group': 'listener Method'},
{'ref': 3015, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3016, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3017, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3018, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3019, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3020, 'tag': 'listener Method', 'name': 'Live.Device.Device.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3021, 'tag': 'listener Method', 'name': 'Live.Device.Device.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3022, 'tag': 'listener Method', 'name': 'Live.Device.Device.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3023, 'tag': 'listener Method', 'name': 'Live.Device.Device.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3024, 'tag': 'listener Method', 'name': 'Live.Device.Device.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3025, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3026, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3027, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3028, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3029, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3060, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3061, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3062, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3063, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3064, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3071, 'tag': 'listener Method', 'name': 'Live.Device.Device.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3073, 'tag': 'listener Method', 'name': 'Live.Device.Device.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3075, 'tag': 'listener Method', 'name': 'Live.Device.Device.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3077, 'tag': 'listener Method', 'name': 'Live.Device.Device.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3079, 'tag': 'listener Method', 'name': 'Live.Device.Device.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3080, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3081, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3082, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3083, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3084, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3014, 'children': [], 'group': 'listener Method'},
{'ref': 3089, 'tag': 'listener Method', 'name': 'Live.Device.Device.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3031, 'children': [], 'group': 'listener Method'},
{'ref': 3090, 'tag': 'listener Method', 'name': 'Live.Device.Device.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 3031, 'children': [], 'group': 'listener Method'},
{'ref': 3091, 'tag': 'listener Method', 'name': 'Live.Device.Device.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3031, 'children': [], 'group': 'listener Method'},
{'ref': 3120, 'tag': 'listener Method', 'name': 'Live.Device.Device.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3031, 'children': [], 'group': 'listener Method'},
{'ref': 3123, 'tag': 'listener Method', 'name': 'Live.Device.Device.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 3031, 'children': [], 'group': 'listener Method'},
{'ref': 3124, 'tag': 'listener Method', 'name': 'Live.Device.Device.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3031, 'children': [], 'group': 'listener Method'},
{'ref': 3208, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_available_routing_channels_listener()', 'description': 'add_available_routing_channels_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_routing_channels&quot; has changed. C++ signature :  void add_available_routing_channels_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_available_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3209, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_available_routing_types_listener()', 'description': 'add_available_routing_types_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_routing_types&quot; has changed. C++ signature :  void add_available_routing_types_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_available_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3210, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_routing_channel_listener()', 'description': 'add_routing_channel_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;routing_channel&quot; has changed. C++ signature :  void add_routing_channel_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3211, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_routing_type_listener()', 'description': 'add_routing_type_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;routing_type&quot; has changed. C++ signature :  void add_routing_type_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3212, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.available_routing_channels_has_listener()', 'description': 'available_routing_channels_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_routing_channels&quot;. C++ signature :  bool available_routing_channels_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'available_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3213, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.available_routing_types_has_listener()', 'description': 'available_routing_types_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_routing_types&quot;. C++ signature :  bool available_routing_types_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'available_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3214, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_available_routing_channels_listener()', 'description': 'remove_available_routing_channels_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_routing_channels&quot;. C++ signature :  void remove_available_routing_channels_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_available_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3215, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_available_routing_types_listener()', 'description': 'remove_available_routing_types_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_routing_types&quot;. C++ signature :  void remove_available_routing_types_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_available_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3216, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_routing_channel_listener()', 'description': 'remove_routing_channel_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;routing_channel&quot;. C++ signature :  void remove_routing_channel_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3217, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_routing_type_listener()', 'description': 'remove_routing_type_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;routing_type&quot;. C++ signature :  void remove_routing_type_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3218, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.routing_channel_has_listener()', 'description': 'routing_channel_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;routing_channel&quot;. C++ signature :  bool routing_channel_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3219, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.routing_type_has_listener()', 'description': 'routing_type_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;routing_type&quot;. C++ signature :  bool routing_type_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3248, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_available_routing_channels_listener()', 'description': 'add_available_routing_channels_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_routing_channels&quot; has changed. C++ signature :  void add_available_routing_channels_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_available_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3249, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_available_routing_types_listener()', 'description': 'add_available_routing_types_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_routing_types&quot; has changed. C++ signature :  void add_available_routing_types_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_available_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3250, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_routing_channel_listener()', 'description': 'add_routing_channel_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;routing_channel&quot; has changed. C++ signature :  void add_routing_channel_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3251, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_routing_type_listener()', 'description': 'add_routing_type_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;routing_type&quot; has changed. C++ signature :  void add_routing_type_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3253, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.available_routing_channels_has_listener()', 'description': 'available_routing_channels_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_routing_channels&quot;. C++ signature :  bool available_routing_channels_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'available_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3255, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.available_routing_types_has_listener()', 'description': 'available_routing_types_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_routing_types&quot;. C++ signature :  bool available_routing_types_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'available_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3258, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_available_routing_channels_listener()', 'description': 'remove_available_routing_channels_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_routing_channels&quot;. C++ signature :  void remove_available_routing_channels_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_available_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3259, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_available_routing_types_listener()', 'description': 'remove_available_routing_types_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_routing_types&quot;. C++ signature :  void remove_available_routing_types_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_available_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3260, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_routing_channel_listener()', 'description': 'remove_routing_channel_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;routing_channel&quot;. C++ signature :  void remove_routing_channel_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3261, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_routing_type_listener()', 'description': 'remove_routing_type_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;routing_type&quot;. C++ signature :  void remove_routing_type_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3263, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.routing_channel_has_listener()', 'description': 'routing_channel_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;routing_channel&quot;. C++ signature :  bool routing_channel_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3265, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.routing_type_has_listener()', 'description': 'routing_type_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;routing_type&quot;. C++ signature :  bool routing_type_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 3207, 'children': [], 'group': 'listener Method'},
{'ref': 3348, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_automation_state_listener()', 'description': 'add_automation_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;automation_state&quot; has changed. C++ signature :  void add_automation_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_automation_state_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3349, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_name_listener()', 'description': 'add_name_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3350, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_state_listener()', 'description': 'add_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;state&quot; has changed. C++ signature :  void add_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_state_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3351, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_value_listener()', 'description': 'add_value_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;value&quot; has changed. C++ signature :  void add_value_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_value_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3352, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.automation_state_has_listener()', 'description': 'automation_state_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;automation_state&quot;. C++ signature :  bool automation_state_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'automation_state_has_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3355, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.name_has_listener()', 'description': 'name_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3357, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_automation_state_listener()', 'description': 'remove_automation_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;automation_state&quot;. C++ signature :  void remove_automation_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_automation_state_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3358, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_name_listener()', 'description': 'remove_name_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3359, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_state_listener()', 'description': 'remove_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;state&quot;. C++ signature :  void remove_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_state_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3360, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_value_listener()', 'description': 'remove_value_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;value&quot;. C++ signature :  void remove_value_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_value_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3361, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.state_has_listener()', 'description': 'state_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;state&quot;. C++ signature :  bool state_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'state_has_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3363, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.value_has_listener()', 'description': 'value_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;value&quot;. C++ signature :  bool value_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'value_has_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3392, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_automation_state_listener()', 'description': 'add_automation_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;automation_state&quot; has changed. C++ signature :  void add_automation_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_automation_state_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3393, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_name_listener()', 'description': 'add_name_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3394, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_state_listener()', 'description': 'add_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;state&quot; has changed. C++ signature :  void add_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_state_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3395, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_value_listener()', 'description': 'add_value_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;value&quot; has changed. C++ signature :  void add_value_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_value_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3397, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.automation_state_has_listener()', 'description': 'automation_state_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;automation_state&quot;. C++ signature :  bool automation_state_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'automation_state_has_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3407, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.name_has_listener()', 'description': 'name_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3410, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_automation_state_listener()', 'description': 'remove_automation_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;automation_state&quot;. C++ signature :  void remove_automation_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_automation_state_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3411, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_name_listener()', 'description': 'remove_name_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3412, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_state_listener()', 'description': 'remove_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;state&quot;. C++ signature :  void remove_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_state_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3413, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_value_listener()', 'description': 'remove_value_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;value&quot;. C++ signature :  void remove_value_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_value_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3416, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.state_has_listener()', 'description': 'state_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;state&quot;. C++ signature :  bool state_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'state_has_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3419, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.value_has_listener()', 'description': 'value_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;value&quot;. C++ signature :  bool value_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'value_has_listener()'], 'hierarchy': 3, 'ref_parent': 3347, 'children': [], 'group': 'listener Method'},
{'ref': 3503, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3504, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3505, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3506, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_filter_source_1_index_listener()', 'description': 'add_mod_matrix_filter_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_filter_source_1_index&quot; has changed. C++ signature :  void add_mod_matrix_filter_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_filter_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3507, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_filter_source_2_index_listener()', 'description': 'add_mod_matrix_filter_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_filter_source_2_index&quot; has changed. C++ signature :  void add_mod_matrix_filter_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_filter_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3508, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_lfo_source_index_listener()', 'description': 'add_mod_matrix_lfo_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_lfo_source_index&quot; has changed. C++ signature :  void add_mod_matrix_lfo_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_lfo_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3509, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_pitch_source_1_index_listener()', 'description': 'add_mod_matrix_pitch_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_pitch_source_1_index&quot; has changed. C++ signature :  void add_mod_matrix_pitch_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_pitch_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3510, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_pitch_source_2_index_listener()', 'description': 'add_mod_matrix_pitch_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_pitch_source_2_index&quot; has changed. C++ signature :  void add_mod_matrix_pitch_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_pitch_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3511, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_shape_source_index_listener()', 'description': 'add_mod_matrix_shape_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_shape_source_index&quot; has changed. C++ signature :  void add_mod_matrix_shape_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_shape_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3512, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_source_1_index_listener()', 'description': 'add_mod_matrix_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_source_1_index&quot; has changed. C++ signature :  void add_mod_matrix_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3513, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_source_2_index_listener()', 'description': 'add_mod_matrix_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_source_2_index&quot; has changed. C++ signature :  void add_mod_matrix_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3514, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_source_3_index_listener()', 'description': 'add_mod_matrix_source_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_source_3_index&quot; has changed. C++ signature :  void add_mod_matrix_source_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_source_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3515, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_target_1_index_listener()', 'description': 'add_mod_matrix_target_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_target_1_index&quot; has changed. C++ signature :  void add_mod_matrix_target_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_target_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3516, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_target_2_index_listener()', 'description': 'add_mod_matrix_target_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_target_2_index&quot; has changed. C++ signature :  void add_mod_matrix_target_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_target_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3517, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_target_3_index_listener()', 'description': 'add_mod_matrix_target_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_target_3_index&quot; has changed. C++ signature :  void add_mod_matrix_target_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_target_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3518, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3519, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3520, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_pitch_bend_range_listener()', 'description': 'add_pitch_bend_range_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_bend_range&quot; has changed. C++ signature :  void add_pitch_bend_range_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3521, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_voice_count_index_listener()', 'description': 'add_voice_count_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;voice_count_index&quot; has changed. C++ signature :  void add_voice_count_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_voice_count_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3522, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_voice_mode_index_listener()', 'description': 'add_voice_mode_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;voice_mode_index&quot; has changed. C++ signature :  void add_voice_mode_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_voice_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3523, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3524, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3525, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3526, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_filter_source_1_index_has_listener()', 'description': 'mod_matrix_filter_source_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_filter_source_1_index&quot;. C++ signature :  bool mod_matrix_filter_source_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_filter_source_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3527, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_filter_source_2_index_has_listener()', 'description': 'mod_matrix_filter_source_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_filter_source_2_index&quot;. C++ signature :  bool mod_matrix_filter_source_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_filter_source_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3528, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_lfo_source_index_has_listener()', 'description': 'mod_matrix_lfo_source_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_lfo_source_index&quot;. C++ signature :  bool mod_matrix_lfo_source_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_lfo_source_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3529, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_pitch_source_1_index_has_listener()', 'description': 'mod_matrix_pitch_source_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_pitch_source_1_index&quot;. C++ signature :  bool mod_matrix_pitch_source_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_pitch_source_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3530, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_pitch_source_2_index_has_listener()', 'description': 'mod_matrix_pitch_source_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_pitch_source_2_index&quot;. C++ signature :  bool mod_matrix_pitch_source_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_pitch_source_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3531, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_shape_source_index_has_listener()', 'description': 'mod_matrix_shape_source_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_shape_source_index&quot;. C++ signature :  bool mod_matrix_shape_source_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_shape_source_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3532, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_source_1_index_has_listener()', 'description': 'mod_matrix_source_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_source_1_index&quot;. C++ signature :  bool mod_matrix_source_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_source_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3533, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_source_2_index_has_listener()', 'description': 'mod_matrix_source_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_source_2_index&quot;. C++ signature :  bool mod_matrix_source_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_source_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3534, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_source_3_index_has_listener()', 'description': 'mod_matrix_source_3_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_source_3_index&quot;. C++ signature :  bool mod_matrix_source_3_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_source_3_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3535, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_target_1_index_has_listener()', 'description': 'mod_matrix_target_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_target_1_index&quot;. C++ signature :  bool mod_matrix_target_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_target_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3536, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_target_2_index_has_listener()', 'description': 'mod_matrix_target_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_target_2_index&quot;. C++ signature :  bool mod_matrix_target_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_target_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3537, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_target_3_index_has_listener()', 'description': 'mod_matrix_target_3_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_target_3_index&quot;. C++ signature :  bool mod_matrix_target_3_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_target_3_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3538, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3539, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3540, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.pitch_bend_range_has_listener()', 'description': 'pitch_bend_range_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_bend_range&quot;. C++ signature :  bool pitch_bend_range_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3541, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3542, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3543, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3544, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_filter_source_1_index_listener()', 'description': 'remove_mod_matrix_filter_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_filter_source_1_index&quot;. C++ signature :  void remove_mod_matrix_filter_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_filter_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3545, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_filter_source_2_index_listener()', 'description': 'remove_mod_matrix_filter_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_filter_source_2_index&quot;. C++ signature :  void remove_mod_matrix_filter_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_filter_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3546, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_lfo_source_index_listener()', 'description': 'remove_mod_matrix_lfo_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_lfo_source_index&quot;. C++ signature :  void remove_mod_matrix_lfo_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_lfo_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3547, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_pitch_source_1_index_listener()', 'description': 'remove_mod_matrix_pitch_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_pitch_source_1_index&quot;. C++ signature :  void remove_mod_matrix_pitch_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_pitch_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3548, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_pitch_source_2_index_listener()', 'description': 'remove_mod_matrix_pitch_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_pitch_source_2_index&quot;. C++ signature :  void remove_mod_matrix_pitch_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_pitch_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3549, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_shape_source_index_listener()', 'description': 'remove_mod_matrix_shape_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_shape_source_index&quot;. C++ signature :  void remove_mod_matrix_shape_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_shape_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3550, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_source_1_index_listener()', 'description': 'remove_mod_matrix_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_source_1_index&quot;. C++ signature :  void remove_mod_matrix_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3551, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_source_2_index_listener()', 'description': 'remove_mod_matrix_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_source_2_index&quot;. C++ signature :  void remove_mod_matrix_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3552, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_source_3_index_listener()', 'description': 'remove_mod_matrix_source_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_source_3_index&quot;. C++ signature :  void remove_mod_matrix_source_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_source_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3553, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_target_1_index_listener()', 'description': 'remove_mod_matrix_target_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_target_1_index&quot;. C++ signature :  void remove_mod_matrix_target_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_target_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3554, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_target_2_index_listener()', 'description': 'remove_mod_matrix_target_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_target_2_index&quot;. C++ signature :  void remove_mod_matrix_target_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_target_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3555, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_target_3_index_listener()', 'description': 'remove_mod_matrix_target_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_target_3_index&quot;. C++ signature :  void remove_mod_matrix_target_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_target_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3556, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3557, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3558, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_pitch_bend_range_listener()', 'description': 'remove_pitch_bend_range_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_bend_range&quot;. C++ signature :  void remove_pitch_bend_range_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3559, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_voice_count_index_listener()', 'description': 'remove_voice_count_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;voice_count_index&quot;. C++ signature :  void remove_voice_count_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_voice_count_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3560, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_voice_mode_index_listener()', 'description': 'remove_voice_mode_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;voice_mode_index&quot;. C++ signature :  void remove_voice_mode_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_voice_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3562, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.voice_count_index_has_listener()', 'description': 'voice_count_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;voice_count_index&quot;. C++ signature :  bool voice_count_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'voice_count_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3563, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.voice_mode_index_has_listener()', 'description': 'voice_mode_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;voice_mode_index&quot;. C++ signature :  bool voice_mode_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'voice_mode_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3593, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3594, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3595, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3596, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_filter_source_1_index_listener()', 'description': 'add_mod_matrix_filter_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_filter_source_1_index&quot; has changed. C++ signature :  void add_mod_matrix_filter_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_filter_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3597, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_filter_source_2_index_listener()', 'description': 'add_mod_matrix_filter_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_filter_source_2_index&quot; has changed. C++ signature :  void add_mod_matrix_filter_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_filter_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3598, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_lfo_source_index_listener()', 'description': 'add_mod_matrix_lfo_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_lfo_source_index&quot; has changed. C++ signature :  void add_mod_matrix_lfo_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_lfo_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3599, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_pitch_source_1_index_listener()', 'description': 'add_mod_matrix_pitch_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_pitch_source_1_index&quot; has changed. C++ signature :  void add_mod_matrix_pitch_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_pitch_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3600, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_pitch_source_2_index_listener()', 'description': 'add_mod_matrix_pitch_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_pitch_source_2_index&quot; has changed. C++ signature :  void add_mod_matrix_pitch_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_pitch_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3601, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_shape_source_index_listener()', 'description': 'add_mod_matrix_shape_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_shape_source_index&quot; has changed. C++ signature :  void add_mod_matrix_shape_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_shape_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3602, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_source_1_index_listener()', 'description': 'add_mod_matrix_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_source_1_index&quot; has changed. C++ signature :  void add_mod_matrix_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3603, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_source_2_index_listener()', 'description': 'add_mod_matrix_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_source_2_index&quot; has changed. C++ signature :  void add_mod_matrix_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3604, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_source_3_index_listener()', 'description': 'add_mod_matrix_source_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_source_3_index&quot; has changed. C++ signature :  void add_mod_matrix_source_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_source_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3605, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_target_1_index_listener()', 'description': 'add_mod_matrix_target_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_target_1_index&quot; has changed. C++ signature :  void add_mod_matrix_target_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_target_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3606, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_target_2_index_listener()', 'description': 'add_mod_matrix_target_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_target_2_index&quot; has changed. C++ signature :  void add_mod_matrix_target_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_target_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3607, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_target_3_index_listener()', 'description': 'add_mod_matrix_target_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_target_3_index&quot; has changed. C++ signature :  void add_mod_matrix_target_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_target_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3608, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3609, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3610, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_pitch_bend_range_listener()', 'description': 'add_pitch_bend_range_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_bend_range&quot; has changed. C++ signature :  void add_pitch_bend_range_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3611, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_voice_count_index_listener()', 'description': 'add_voice_count_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;voice_count_index&quot; has changed. C++ signature :  void add_voice_count_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_voice_count_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3612, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_voice_mode_index_listener()', 'description': 'add_voice_mode_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;voice_mode_index&quot; has changed. C++ signature :  void add_voice_mode_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_voice_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3619, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3621, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3623, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3625, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_filter_source_1_index_has_listener()', 'description': 'mod_matrix_filter_source_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_filter_source_1_index&quot;. C++ signature :  bool mod_matrix_filter_source_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_filter_source_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3628, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_filter_source_2_index_has_listener()', 'description': 'mod_matrix_filter_source_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_filter_source_2_index&quot;. C++ signature :  bool mod_matrix_filter_source_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_filter_source_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3631, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_lfo_source_index_has_listener()', 'description': 'mod_matrix_lfo_source_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_lfo_source_index&quot;. C++ signature :  bool mod_matrix_lfo_source_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_lfo_source_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3634, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_pitch_source_1_index_has_listener()', 'description': 'mod_matrix_pitch_source_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_pitch_source_1_index&quot;. C++ signature :  bool mod_matrix_pitch_source_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_pitch_source_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3637, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_pitch_source_2_index_has_listener()', 'description': 'mod_matrix_pitch_source_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_pitch_source_2_index&quot;. C++ signature :  bool mod_matrix_pitch_source_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_pitch_source_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3640, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_shape_source_index_has_listener()', 'description': 'mod_matrix_shape_source_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_shape_source_index&quot;. C++ signature :  bool mod_matrix_shape_source_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_shape_source_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3643, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_source_1_index_has_listener()', 'description': 'mod_matrix_source_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_source_1_index&quot;. C++ signature :  bool mod_matrix_source_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_source_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3646, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_source_2_index_has_listener()', 'description': 'mod_matrix_source_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_source_2_index&quot;. C++ signature :  bool mod_matrix_source_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_source_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3649, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_source_3_index_has_listener()', 'description': 'mod_matrix_source_3_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_source_3_index&quot;. C++ signature :  bool mod_matrix_source_3_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_source_3_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3652, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_target_1_index_has_listener()', 'description': 'mod_matrix_target_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_target_1_index&quot;. C++ signature :  bool mod_matrix_target_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_target_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3655, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_target_2_index_has_listener()', 'description': 'mod_matrix_target_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_target_2_index&quot;. C++ signature :  bool mod_matrix_target_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_target_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3658, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_target_3_index_has_listener()', 'description': 'mod_matrix_target_3_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_target_3_index&quot;. C++ signature :  bool mod_matrix_target_3_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_target_3_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3661, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3663, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3665, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.pitch_bend_range_has_listener()', 'description': 'pitch_bend_range_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_bend_range&quot;. C++ signature :  bool pitch_bend_range_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3666, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3667, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3668, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3669, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_filter_source_1_index_listener()', 'description': 'remove_mod_matrix_filter_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_filter_source_1_index&quot;. C++ signature :  void remove_mod_matrix_filter_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_filter_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3670, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_filter_source_2_index_listener()', 'description': 'remove_mod_matrix_filter_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_filter_source_2_index&quot;. C++ signature :  void remove_mod_matrix_filter_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_filter_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3671, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_lfo_source_index_listener()', 'description': 'remove_mod_matrix_lfo_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_lfo_source_index&quot;. C++ signature :  void remove_mod_matrix_lfo_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_lfo_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3672, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_pitch_source_1_index_listener()', 'description': 'remove_mod_matrix_pitch_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_pitch_source_1_index&quot;. C++ signature :  void remove_mod_matrix_pitch_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_pitch_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3673, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_pitch_source_2_index_listener()', 'description': 'remove_mod_matrix_pitch_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_pitch_source_2_index&quot;. C++ signature :  void remove_mod_matrix_pitch_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_pitch_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3674, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_shape_source_index_listener()', 'description': 'remove_mod_matrix_shape_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_shape_source_index&quot;. C++ signature :  void remove_mod_matrix_shape_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_shape_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3675, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_source_1_index_listener()', 'description': 'remove_mod_matrix_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_source_1_index&quot;. C++ signature :  void remove_mod_matrix_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3676, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_source_2_index_listener()', 'description': 'remove_mod_matrix_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_source_2_index&quot;. C++ signature :  void remove_mod_matrix_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3677, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_source_3_index_listener()', 'description': 'remove_mod_matrix_source_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_source_3_index&quot;. C++ signature :  void remove_mod_matrix_source_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_source_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3678, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_target_1_index_listener()', 'description': 'remove_mod_matrix_target_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_target_1_index&quot;. C++ signature :  void remove_mod_matrix_target_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_target_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3679, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_target_2_index_listener()', 'description': 'remove_mod_matrix_target_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_target_2_index&quot;. C++ signature :  void remove_mod_matrix_target_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_target_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3680, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_target_3_index_listener()', 'description': 'remove_mod_matrix_target_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_target_3_index&quot;. C++ signature :  void remove_mod_matrix_target_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_target_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3681, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3682, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3683, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_pitch_bend_range_listener()', 'description': 'remove_pitch_bend_range_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_bend_range&quot;. C++ signature :  void remove_pitch_bend_range_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3684, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_voice_count_index_listener()', 'description': 'remove_voice_count_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;voice_count_index&quot;. C++ signature :  void remove_voice_count_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_voice_count_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3685, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_voice_mode_index_listener()', 'description': 'remove_voice_mode_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;voice_mode_index&quot;. C++ signature :  void remove_voice_mode_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_voice_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3690, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.voice_count_index_has_listener()', 'description': 'voice_count_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;voice_count_index&quot;. C++ signature :  bool voice_count_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'voice_count_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3693, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.voice_mode_index_has_listener()', 'description': 'voice_mode_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;voice_mode_index&quot;. C++ signature :  bool voice_mode_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'voice_mode_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3502, 'children': [], 'group': 'listener Method'},
{'ref': 3696, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3564, 'children': [], 'group': 'listener Method'},
{'ref': 3697, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 3564, 'children': [], 'group': 'listener Method'},
{'ref': 3698, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3564, 'children': [], 'group': 'listener Method'},
{'ref': 3727, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3564, 'children': [], 'group': 'listener Method'},
{'ref': 3730, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 3564, 'children': [], 'group': 'listener Method'},
{'ref': 3731, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3564, 'children': [], 'group': 'listener Method'},
{'ref': 3734, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_choke_group_listener()', 'description': 'add_choke_group_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;choke_group&quot; has changed. C++ signature :  void add_choke_group_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_choke_group_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3735, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_color_index_listener()', 'description': 'add_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3736, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_color_listener()', 'description': 'add_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3737, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_devices_listener()', 'description': 'add_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;devices&quot; has changed. C++ signature :  void add_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_devices_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3738, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_is_auto_colored_listener()', 'description': 'add_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_auto_colored&quot; has changed. C++ signature :  void add_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3739, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_mute_listener()', 'description': 'add_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3740, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_muted_via_solo_listener()', 'description': 'add_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted_via_solo&quot; has changed. C++ signature :  void add_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3741, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_name_listener()', 'description': 'add_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3742, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_out_note_listener()', 'description': 'add_out_note_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;out_note&quot; has changed. C++ signature :  void add_out_note_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_out_note_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3743, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_solo_listener()', 'description': 'add_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3744, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.choke_group_has_listener()', 'description': 'choke_group_has_listener( (DrumChain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;choke_group&quot;. C++ signature :  bool choke_group_has_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'choke_group_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3745, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.color_has_listener()', 'description': 'color_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3746, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.color_index_has_listener()', 'description': 'color_index_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3748, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.devices_has_listener()', 'description': 'devices_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;devices&quot;. C++ signature :  bool devices_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'devices_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3749, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.is_auto_colored_has_listener()', 'description': 'is_auto_colored_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_auto_colored&quot;. C++ signature :  bool is_auto_colored_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'is_auto_colored_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3750, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.mute_has_listener()', 'description': 'mute_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3751, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.muted_via_solo_has_listener()', 'description': 'muted_via_solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted_via_solo&quot;. C++ signature :  bool muted_via_solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'muted_via_solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3752, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.name_has_listener()', 'description': 'name_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3753, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.out_note_has_listener()', 'description': 'out_note_has_listener( (DrumChain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;out_note&quot;. C++ signature :  bool out_note_has_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'out_note_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3754, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_choke_group_listener()', 'description': 'remove_choke_group_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;choke_group&quot;. C++ signature :  void remove_choke_group_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_choke_group_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3755, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3756, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_color_listener()', 'description': 'remove_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3757, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_devices_listener()', 'description': 'remove_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;devices&quot;. C++ signature :  void remove_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_devices_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3758, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_is_auto_colored_listener()', 'description': 'remove_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_auto_colored&quot;. C++ signature :  void remove_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3759, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_mute_listener()', 'description': 'remove_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3760, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_muted_via_solo_listener()', 'description': 'remove_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted_via_solo&quot;. C++ signature :  void remove_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3761, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_name_listener()', 'description': 'remove_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3762, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_out_note_listener()', 'description': 'remove_out_note_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;out_note&quot;. C++ signature :  void remove_out_note_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_out_note_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3763, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_solo_listener()', 'description': 'remove_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3764, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.solo_has_listener()', 'description': 'solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3793, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_choke_group_listener()', 'description': 'add_choke_group_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;choke_group&quot; has changed. C++ signature :  void add_choke_group_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_choke_group_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3794, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_color_index_listener()', 'description': 'add_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3795, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_color_listener()', 'description': 'add_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3796, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_devices_listener()', 'description': 'add_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;devices&quot; has changed. C++ signature :  void add_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_devices_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3797, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_is_auto_colored_listener()', 'description': 'add_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_auto_colored&quot; has changed. C++ signature :  void add_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3798, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_mute_listener()', 'description': 'add_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3799, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_muted_via_solo_listener()', 'description': 'add_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted_via_solo&quot; has changed. C++ signature :  void add_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3800, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_name_listener()', 'description': 'add_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3801, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_out_note_listener()', 'description': 'add_out_note_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;out_note&quot; has changed. C++ signature :  void add_out_note_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_out_note_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3802, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_solo_listener()', 'description': 'add_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3805, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.choke_group_has_listener()', 'description': 'choke_group_has_listener( (DrumChain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;choke_group&quot;. C++ signature :  bool choke_group_has_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'choke_group_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3807, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.color_has_listener()', 'description': 'color_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3809, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.color_index_has_listener()', 'description': 'color_index_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3812, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.devices_has_listener()', 'description': 'devices_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;devices&quot;. C++ signature :  bool devices_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'devices_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3818, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.is_auto_colored_has_listener()', 'description': 'is_auto_colored_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_auto_colored&quot;. C++ signature :  bool is_auto_colored_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'is_auto_colored_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3821, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.mute_has_listener()', 'description': 'mute_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3823, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.muted_via_solo_has_listener()', 'description': 'muted_via_solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted_via_solo&quot;. C++ signature :  bool muted_via_solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'muted_via_solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3825, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.name_has_listener()', 'description': 'name_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3827, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.out_note_has_listener()', 'description': 'out_note_has_listener( (DrumChain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;out_note&quot;. C++ signature :  bool out_note_has_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'out_note_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3828, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_choke_group_listener()', 'description': 'remove_choke_group_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;choke_group&quot;. C++ signature :  void remove_choke_group_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_choke_group_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3829, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3830, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_color_listener()', 'description': 'remove_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3831, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_devices_listener()', 'description': 'remove_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;devices&quot;. C++ signature :  void remove_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_devices_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3832, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_is_auto_colored_listener()', 'description': 'remove_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_auto_colored&quot;. C++ signature :  void remove_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3833, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_mute_listener()', 'description': 'remove_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3834, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_muted_via_solo_listener()', 'description': 'remove_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted_via_solo&quot;. C++ signature :  void remove_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3835, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_name_listener()', 'description': 'remove_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3836, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_out_note_listener()', 'description': 'remove_out_note_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;out_note&quot;. C++ signature :  void remove_out_note_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_out_note_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3837, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_solo_listener()', 'description': 'remove_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3839, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.solo_has_listener()', 'description': 'solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 3733, 'children': [], 'group': 'listener Method'},
{'ref': 3842, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_chains_listener()', 'description': 'add_chains_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;chains&quot; has changed. C++ signature :  void add_chains_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_chains_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3843, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_mute_listener()', 'description': 'add_mute_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3844, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_name_listener()', 'description': 'add_name_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3845, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_solo_listener()', 'description': 'add_solo_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3846, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.chains_has_listener()', 'description': 'chains_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;chains&quot;. C++ signature :  bool chains_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3848, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.mute_has_listener()', 'description': 'mute_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3849, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.name_has_listener()', 'description': 'name_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3850, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_chains_listener()', 'description': 'remove_chains_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;chains&quot;. C++ signature :  void remove_chains_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_chains_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3851, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_mute_listener()', 'description': 'remove_mute_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3852, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_name_listener()', 'description': 'remove_name_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3853, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_solo_listener()', 'description': 'remove_solo_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3854, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.solo_has_listener()', 'description': 'solo_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3883, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_chains_listener()', 'description': 'add_chains_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;chains&quot; has changed. C++ signature :  void add_chains_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_chains_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3884, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_mute_listener()', 'description': 'add_mute_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3885, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_name_listener()', 'description': 'add_name_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3886, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_solo_listener()', 'description': 'add_solo_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3889, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.chains_has_listener()', 'description': 'chains_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;chains&quot;. C++ signature :  bool chains_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3892, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.mute_has_listener()', 'description': 'mute_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3894, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.name_has_listener()', 'description': 'name_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3896, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_chains_listener()', 'description': 'remove_chains_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;chains&quot;. C++ signature :  void remove_chains_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_chains_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3897, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_mute_listener()', 'description': 'remove_mute_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3898, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_name_listener()', 'description': 'remove_name_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3899, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_solo_listener()', 'description': 'remove_solo_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3901, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.solo_has_listener()', 'description': 'solo_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 3841, 'children': [], 'group': 'listener Method'},
{'ref': 3983, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_edit_mode_listener()', 'description': 'add_edit_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;edit_mode&quot; has changed. C++ signature :  void add_edit_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_edit_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3984, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_global_mode_listener()', 'description': 'add_global_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;global_mode&quot; has changed. C++ signature :  void add_global_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_global_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3985, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3986, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3987, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3988, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3989, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_oversample_listener()', 'description': 'add_oversample_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oversample&quot; has changed. C++ signature :  void add_oversample_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_oversample_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3990, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3991, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.edit_mode_has_listener()', 'description': 'edit_mode_has_listener( (Eq8Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;edit_mode&quot;. C++ signature :  bool edit_mode_has_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'edit_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3992, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.global_mode_has_listener()', 'description': 'global_mode_has_listener( (Eq8Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;global_mode&quot;. C++ signature :  bool global_mode_has_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'global_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3993, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3994, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3995, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3996, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3997, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.oversample_has_listener()', 'description': 'oversample_has_listener( (Eq8Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oversample&quot;. C++ signature :  bool oversample_has_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'oversample_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3998, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3999, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_edit_mode_listener()', 'description': 'remove_edit_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;edit_mode&quot;. C++ signature :  void remove_edit_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_edit_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4000, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_global_mode_listener()', 'description': 'remove_global_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;global_mode&quot;. C++ signature :  void remove_global_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_global_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4001, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4002, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4003, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4004, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4005, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_oversample_listener()', 'description': 'remove_oversample_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oversample&quot;. C++ signature :  void remove_oversample_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_oversample_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4006, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4037, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_edit_mode_listener()', 'description': 'add_edit_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;edit_mode&quot; has changed. C++ signature :  void add_edit_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_edit_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4038, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_global_mode_listener()', 'description': 'add_global_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;global_mode&quot; has changed. C++ signature :  void add_global_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_global_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4039, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4040, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4041, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4042, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4043, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_oversample_listener()', 'description': 'add_oversample_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oversample&quot; has changed. C++ signature :  void add_oversample_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_oversample_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4044, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4051, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.edit_mode_has_listener()', 'description': 'edit_mode_has_listener( (Eq8Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;edit_mode&quot;. C++ signature :  bool edit_mode_has_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'edit_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4053, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.global_mode_has_listener()', 'description': 'global_mode_has_listener( (Eq8Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;global_mode&quot;. C++ signature :  bool global_mode_has_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'global_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4055, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4057, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4059, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4061, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4063, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.oversample_has_listener()', 'description': 'oversample_has_listener( (Eq8Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oversample&quot;. C++ signature :  bool oversample_has_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'oversample_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4065, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4066, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_edit_mode_listener()', 'description': 'remove_edit_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;edit_mode&quot;. C++ signature :  void remove_edit_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_edit_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4067, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_global_mode_listener()', 'description': 'remove_global_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;global_mode&quot;. C++ signature :  void remove_global_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_global_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4068, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4069, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4070, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4071, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4072, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_oversample_listener()', 'description': 'remove_oversample_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oversample&quot;. C++ signature :  void remove_oversample_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_oversample_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4073, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4078, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4008, 'children': [], 'group': 'listener Method'},
{'ref': 4079, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.add_selected_band_listener()', 'description': 'add_selected_band_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_band&quot; has changed. C++ signature :  void add_selected_band_listener(TEq8DevicePyViewData,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'add_selected_band_listener()'], 'hierarchy': 4, 'ref_parent': 4008, 'children': [], 'group': 'listener Method'},
{'ref': 4080, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 4008, 'children': [], 'group': 'listener Method'},
{'ref': 4081, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4008, 'children': [], 'group': 'listener Method'},
{'ref': 4082, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.remove_selected_band_listener()', 'description': 'remove_selected_band_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_band&quot;. C++ signature :  void remove_selected_band_listener(TEq8DevicePyViewData,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'remove_selected_band_listener()'], 'hierarchy': 4, 'ref_parent': 4008, 'children': [], 'group': 'listener Method'},
{'ref': 4083, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.selected_band_has_listener()', 'description': 'selected_band_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_band&quot;. C++ signature :  bool selected_band_has_listener(TEq8DevicePyViewData,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'selected_band_has_listener()'], 'hierarchy': 4, 'ref_parent': 4008, 'children': [], 'group': 'listener Method'},
{'ref': 4112, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4008, 'children': [], 'group': 'listener Method'},
{'ref': 4113, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.add_selected_band_listener()', 'description': 'add_selected_band_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_band&quot; has changed. C++ signature :  void add_selected_band_listener(TEq8DevicePyViewData,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'add_selected_band_listener()'], 'hierarchy': 4, 'ref_parent': 4008, 'children': [], 'group': 'listener Method'},
{'ref': 4116, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 4008, 'children': [], 'group': 'listener Method'},
{'ref': 4117, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4008, 'children': [], 'group': 'listener Method'},
{'ref': 4118, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.remove_selected_band_listener()', 'description': 'remove_selected_band_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_band&quot;. C++ signature :  void remove_selected_band_listener(TEq8DevicePyViewData,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'remove_selected_band_listener()'], 'hierarchy': 4, 'ref_parent': 4008, 'children': [], 'group': 'listener Method'},
{'ref': 4120, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.selected_band_has_listener()', 'description': 'selected_band_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_band&quot;. C++ signature :  bool selected_band_has_listener(TEq8DevicePyViewData,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'selected_band_has_listener()'], 'hierarchy': 4, 'ref_parent': 4008, 'children': [], 'group': 'listener Method'},
{'ref': 4287, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_name_listener()', 'description': 'add_name_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4288, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_quantization_amount_listener()', 'description': 'add_quantization_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;quantization_amount&quot; has changed. C++ signature :  void add_quantization_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_quantization_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4289, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_random_amount_listener()', 'description': 'add_random_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;random_amount&quot; has changed. C++ signature :  void add_random_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_random_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4290, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_timing_amount_listener()', 'description': 'add_timing_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;timing_amount&quot; has changed. C++ signature :  void add_timing_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_timing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4291, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_velocity_amount_listener()', 'description': 'add_velocity_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;velocity_amount&quot; has changed. C++ signature :  void add_velocity_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4292, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.name_has_listener()', 'description': 'name_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4293, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.quantization_amount_has_listener()', 'description': 'quantization_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;quantization_amount&quot;. C++ signature :  bool quantization_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'quantization_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4294, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.random_amount_has_listener()', 'description': 'random_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;random_amount&quot;. C++ signature :  bool random_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'random_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4295, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_name_listener()', 'description': 'remove_name_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4296, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_quantization_amount_listener()', 'description': 'remove_quantization_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;quantization_amount&quot;. C++ signature :  void remove_quantization_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_quantization_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4297, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_random_amount_listener()', 'description': 'remove_random_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;random_amount&quot;. C++ signature :  void remove_random_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_random_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4298, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_timing_amount_listener()', 'description': 'remove_timing_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;timing_amount&quot;. C++ signature :  void remove_timing_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_timing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4299, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_velocity_amount_listener()', 'description': 'remove_velocity_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;velocity_amount&quot;. C++ signature :  void remove_velocity_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4300, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.timing_amount_has_listener()', 'description': 'timing_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;timing_amount&quot;. C++ signature :  bool timing_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'timing_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4301, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.velocity_amount_has_listener()', 'description': 'velocity_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;velocity_amount&quot;. C++ signature :  bool velocity_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'velocity_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4330, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_name_listener()', 'description': 'add_name_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4331, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_quantization_amount_listener()', 'description': 'add_quantization_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;quantization_amount&quot; has changed. C++ signature :  void add_quantization_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_quantization_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4332, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_random_amount_listener()', 'description': 'add_random_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;random_amount&quot; has changed. C++ signature :  void add_random_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_random_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4333, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_timing_amount_listener()', 'description': 'add_timing_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;timing_amount&quot; has changed. C++ signature :  void add_timing_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_timing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4334, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_velocity_amount_listener()', 'description': 'add_velocity_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;velocity_amount&quot; has changed. C++ signature :  void add_velocity_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4338, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.name_has_listener()', 'description': 'name_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4340, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.quantization_amount_has_listener()', 'description': 'quantization_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;quantization_amount&quot;. C++ signature :  bool quantization_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'quantization_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4342, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.random_amount_has_listener()', 'description': 'random_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;random_amount&quot;. C++ signature :  bool random_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'random_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4343, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_name_listener()', 'description': 'remove_name_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4344, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_quantization_amount_listener()', 'description': 'remove_quantization_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;quantization_amount&quot;. C++ signature :  void remove_quantization_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_quantization_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4345, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_random_amount_listener()', 'description': 'remove_random_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;random_amount&quot;. C++ signature :  void remove_random_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_random_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4346, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_timing_amount_listener()', 'description': 'remove_timing_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;timing_amount&quot;. C++ signature :  void remove_timing_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_timing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4347, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_velocity_amount_listener()', 'description': 'remove_velocity_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;velocity_amount&quot;. C++ signature :  void remove_velocity_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4349, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.timing_amount_has_listener()', 'description': 'timing_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;timing_amount&quot;. C++ signature :  bool timing_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'timing_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4351, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.velocity_amount_has_listener()', 'description': 'velocity_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;velocity_amount&quot;. C++ signature :  bool velocity_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'velocity_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 4286, 'children': [], 'group': 'listener Method'},
{'ref': 4354, 'tag': 'listener Method', 'name': 'Live.GroovePool.GroovePool.add_grooves_listener()', 'description': 'add_grooves_listener( (GroovePool)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;grooves&quot; has changed. C++ signature :  void add_grooves_listener(TPyHandle&lt;AGroovePool&gt;,boost::python::api::object)', 'path': ['Live', 'GroovePool', 'GroovePool', 'add_grooves_listener()'], 'hierarchy': 3, 'ref_parent': 4353, 'children': [], 'group': 'listener Method'},
{'ref': 4355, 'tag': 'listener Method', 'name': 'Live.GroovePool.GroovePool.grooves_has_listener()', 'description': 'grooves_has_listener( (GroovePool)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;grooves&quot;. C++ signature :  bool grooves_has_listener(TPyHandle&lt;AGroovePool&gt;,boost::python::api::object)', 'path': ['Live', 'GroovePool', 'GroovePool', 'grooves_has_listener()'], 'hierarchy': 3, 'ref_parent': 4353, 'children': [], 'group': 'listener Method'},
{'ref': 4356, 'tag': 'listener Method', 'name': 'Live.GroovePool.GroovePool.remove_grooves_listener()', 'description': 'remove_grooves_listener( (GroovePool)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;grooves&quot;. C++ signature :  void remove_grooves_listener(TPyHandle&lt;AGroovePool&gt;,boost::python::api::object)', 'path': ['Live', 'GroovePool', 'GroovePool', 'remove_grooves_listener()'], 'hierarchy': 3, 'ref_parent': 4353, 'children': [], 'group': 'listener Method'},
{'ref': 4385, 'tag': 'listener Method', 'name': 'Live.GroovePool.GroovePool.add_grooves_listener()', 'description': 'add_grooves_listener( (GroovePool)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;grooves&quot; has changed. C++ signature :  void add_grooves_listener(TPyHandle&lt;AGroovePool&gt;,boost::python::api::object)', 'path': ['Live', 'GroovePool', 'GroovePool', 'add_grooves_listener()'], 'hierarchy': 3, 'ref_parent': 4353, 'children': [], 'group': 'listener Method'},
{'ref': 4388, 'tag': 'listener Method', 'name': 'Live.GroovePool.GroovePool.grooves_has_listener()', 'description': 'grooves_has_listener( (GroovePool)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;grooves&quot;. C++ signature :  bool grooves_has_listener(TPyHandle&lt;AGroovePool&gt;,boost::python::api::object)', 'path': ['Live', 'GroovePool', 'GroovePool', 'grooves_has_listener()'], 'hierarchy': 3, 'ref_parent': 4353, 'children': [], 'group': 'listener Method'},
{'ref': 4389, 'tag': 'listener Method', 'name': 'Live.GroovePool.GroovePool.remove_grooves_listener()', 'description': 'remove_grooves_listener( (GroovePool)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;grooves&quot;. C++ signature :  void remove_grooves_listener(TPyHandle&lt;AGroovePool&gt;,boost::python::api::object)', 'path': ['Live', 'GroovePool', 'GroovePool', 'remove_grooves_listener()'], 'hierarchy': 3, 'ref_parent': 4353, 'children': [], 'group': 'listener Method'},
{'ref': 4392, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_attack_time_listener()', 'description': 'add_ir_attack_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_attack_time&quot; has changed. C++ signature :  void add_ir_attack_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_attack_time_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4393, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_category_index_listener()', 'description': 'add_ir_category_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_category_index&quot; has changed. C++ signature :  void add_ir_category_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_category_index_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4394, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_decay_time_listener()', 'description': 'add_ir_decay_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_decay_time&quot; has changed. C++ signature :  void add_ir_decay_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_decay_time_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4395, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_file_index_listener()', 'description': 'add_ir_file_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_file_index&quot; has changed. C++ signature :  void add_ir_file_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_file_index_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4396, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_file_list_listener()', 'description': 'add_ir_file_list_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_file_list&quot; has changed. C++ signature :  void add_ir_file_list_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_file_list_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4397, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_size_factor_listener()', 'description': 'add_ir_size_factor_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_size_factor&quot; has changed. C++ signature :  void add_ir_size_factor_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_size_factor_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4398, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_time_shaping_on_listener()', 'description': 'add_ir_time_shaping_on_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_time_shaping_on&quot; has changed. C++ signature :  void add_ir_time_shaping_on_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_time_shaping_on_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4399, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4400, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4401, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4402, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4403, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4404, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_attack_time_has_listener()', 'description': 'ir_attack_time_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_attack_time&quot;. C++ signature :  bool ir_attack_time_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_attack_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4405, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_category_index_has_listener()', 'description': 'ir_category_index_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_category_index&quot;. C++ signature :  bool ir_category_index_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_category_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4406, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_decay_time_has_listener()', 'description': 'ir_decay_time_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_decay_time&quot;. C++ signature :  bool ir_decay_time_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_decay_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4407, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_file_index_has_listener()', 'description': 'ir_file_index_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_file_index&quot;. C++ signature :  bool ir_file_index_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_file_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4408, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_file_list_has_listener()', 'description': 'ir_file_list_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_file_list&quot;. C++ signature :  bool ir_file_list_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_file_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4409, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_size_factor_has_listener()', 'description': 'ir_size_factor_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_size_factor&quot;. C++ signature :  bool ir_size_factor_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_size_factor_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4410, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_time_shaping_on_has_listener()', 'description': 'ir_time_shaping_on_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_time_shaping_on&quot;. C++ signature :  bool ir_time_shaping_on_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_time_shaping_on_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4411, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4412, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4413, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4414, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4415, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4416, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_attack_time_listener()', 'description': 'remove_ir_attack_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_attack_time&quot;. C++ signature :  void remove_ir_attack_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_attack_time_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4417, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_category_index_listener()', 'description': 'remove_ir_category_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_category_index&quot;. C++ signature :  void remove_ir_category_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_category_index_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4418, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_decay_time_listener()', 'description': 'remove_ir_decay_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_decay_time&quot;. C++ signature :  void remove_ir_decay_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_decay_time_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4419, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_file_index_listener()', 'description': 'remove_ir_file_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_file_index&quot;. C++ signature :  void remove_ir_file_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_file_index_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4420, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_file_list_listener()', 'description': 'remove_ir_file_list_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_file_list&quot;. C++ signature :  void remove_ir_file_list_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_file_list_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4421, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_size_factor_listener()', 'description': 'remove_ir_size_factor_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_size_factor&quot;. C++ signature :  void remove_ir_size_factor_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_size_factor_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4422, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_time_shaping_on_listener()', 'description': 'remove_ir_time_shaping_on_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_time_shaping_on&quot;. C++ signature :  void remove_ir_time_shaping_on_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_time_shaping_on_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4423, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4424, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4425, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4426, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4427, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4458, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_attack_time_listener()', 'description': 'add_ir_attack_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_attack_time&quot; has changed. C++ signature :  void add_ir_attack_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_attack_time_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4459, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_category_index_listener()', 'description': 'add_ir_category_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_category_index&quot; has changed. C++ signature :  void add_ir_category_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_category_index_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4460, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_decay_time_listener()', 'description': 'add_ir_decay_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_decay_time&quot; has changed. C++ signature :  void add_ir_decay_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_decay_time_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4461, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_file_index_listener()', 'description': 'add_ir_file_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_file_index&quot; has changed. C++ signature :  void add_ir_file_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_file_index_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4462, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_file_list_listener()', 'description': 'add_ir_file_list_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_file_list&quot; has changed. C++ signature :  void add_ir_file_list_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_file_list_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4463, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_size_factor_listener()', 'description': 'add_ir_size_factor_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_size_factor&quot; has changed. C++ signature :  void add_ir_size_factor_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_size_factor_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4464, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_time_shaping_on_listener()', 'description': 'add_ir_time_shaping_on_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_time_shaping_on&quot; has changed. C++ signature :  void add_ir_time_shaping_on_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_time_shaping_on_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4465, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4466, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4467, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4468, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4469, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4476, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_attack_time_has_listener()', 'description': 'ir_attack_time_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_attack_time&quot;. C++ signature :  bool ir_attack_time_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_attack_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4478, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_category_index_has_listener()', 'description': 'ir_category_index_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_category_index&quot;. C++ signature :  bool ir_category_index_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_category_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4481, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_decay_time_has_listener()', 'description': 'ir_decay_time_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_decay_time&quot;. C++ signature :  bool ir_decay_time_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_decay_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4483, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_file_index_has_listener()', 'description': 'ir_file_index_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_file_index&quot;. C++ signature :  bool ir_file_index_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_file_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4485, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_file_list_has_listener()', 'description': 'ir_file_list_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_file_list&quot;. C++ signature :  bool ir_file_list_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_file_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4487, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_size_factor_has_listener()', 'description': 'ir_size_factor_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_size_factor&quot;. C++ signature :  bool ir_size_factor_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_size_factor_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4489, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_time_shaping_on_has_listener()', 'description': 'ir_time_shaping_on_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_time_shaping_on&quot;. C++ signature :  bool ir_time_shaping_on_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_time_shaping_on_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4491, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4493, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4495, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4497, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4499, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4500, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_attack_time_listener()', 'description': 'remove_ir_attack_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_attack_time&quot;. C++ signature :  void remove_ir_attack_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_attack_time_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4501, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_category_index_listener()', 'description': 'remove_ir_category_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_category_index&quot;. C++ signature :  void remove_ir_category_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_category_index_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4502, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_decay_time_listener()', 'description': 'remove_ir_decay_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_decay_time&quot;. C++ signature :  void remove_ir_decay_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_decay_time_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4503, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_file_index_listener()', 'description': 'remove_ir_file_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_file_index&quot;. C++ signature :  void remove_ir_file_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_file_index_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4504, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_file_list_listener()', 'description': 'remove_ir_file_list_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_file_list&quot;. C++ signature :  void remove_ir_file_list_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_file_list_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4505, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_size_factor_listener()', 'description': 'remove_ir_size_factor_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_size_factor&quot;. C++ signature :  void remove_ir_size_factor_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_size_factor_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4506, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_time_shaping_on_listener()', 'description': 'remove_ir_time_shaping_on_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_time_shaping_on&quot;. C++ signature :  void remove_ir_time_shaping_on_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_time_shaping_on_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4507, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4508, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4509, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4510, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4511, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4391, 'children': [], 'group': 'listener Method'},
{'ref': 4516, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4429, 'children': [], 'group': 'listener Method'},
{'ref': 4517, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 4429, 'children': [], 'group': 'listener Method'},
{'ref': 4518, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4429, 'children': [], 'group': 'listener Method'},
{'ref': 4547, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4429, 'children': [], 'group': 'listener Method'},
{'ref': 4550, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 4429, 'children': [], 'group': 'listener Method'},
{'ref': 4551, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4429, 'children': [], 'group': 'listener Method'},
{'ref': 4656, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_audio_inputs_listener()', 'description': 'add_audio_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;audio_inputs&quot; has changed. C++ signature :  void add_audio_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_audio_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4657, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_audio_outputs_listener()', 'description': 'add_audio_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;audio_outputs&quot; has changed. C++ signature :  void add_audio_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_audio_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4658, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_bank_parameters_changed_listener()', 'description': 'add_bank_parameters_changed_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;bank_parameters_changed&quot; has changed. C++ signature :  void add_bank_parameters_changed_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_bank_parameters_changed_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4659, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4660, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4661, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4662, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_midi_inputs_listener()', 'description': 'add_midi_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_inputs&quot; has changed. C++ signature :  void add_midi_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_midi_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4663, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_midi_outputs_listener()', 'description': 'add_midi_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_outputs&quot; has changed. C++ signature :  void add_midi_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_midi_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4664, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4665, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4666, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.audio_inputs_has_listener()', 'description': 'audio_inputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;audio_inputs&quot;. C++ signature :  bool audio_inputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'audio_inputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4667, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.audio_outputs_has_listener()', 'description': 'audio_outputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;audio_outputs&quot;. C++ signature :  bool audio_outputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'audio_outputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4668, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.bank_parameters_changed_has_listener()', 'description': 'bank_parameters_changed_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;bank_parameters_changed&quot;. C++ signature :  bool bank_parameters_changed_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'bank_parameters_changed_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4673, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4674, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4675, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4676, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.midi_inputs_has_listener()', 'description': 'midi_inputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_inputs&quot;. C++ signature :  bool midi_inputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'midi_inputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4677, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.midi_outputs_has_listener()', 'description': 'midi_outputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_outputs&quot;. C++ signature :  bool midi_outputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'midi_outputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4678, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4679, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4680, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_audio_inputs_listener()', 'description': 'remove_audio_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;audio_inputs&quot;. C++ signature :  void remove_audio_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_audio_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4681, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_audio_outputs_listener()', 'description': 'remove_audio_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;audio_outputs&quot;. C++ signature :  void remove_audio_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_audio_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4682, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_bank_parameters_changed_listener()', 'description': 'remove_bank_parameters_changed_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;bank_parameters_changed&quot;. C++ signature :  void remove_bank_parameters_changed_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_bank_parameters_changed_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4683, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4684, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4685, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4686, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_midi_inputs_listener()', 'description': 'remove_midi_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_inputs&quot;. C++ signature :  void remove_midi_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_midi_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4687, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_midi_outputs_listener()', 'description': 'remove_midi_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_outputs&quot;. C++ signature :  void remove_midi_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_midi_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4688, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4689, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4720, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_audio_inputs_listener()', 'description': 'add_audio_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;audio_inputs&quot; has changed. C++ signature :  void add_audio_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_audio_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4721, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_audio_outputs_listener()', 'description': 'add_audio_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;audio_outputs&quot; has changed. C++ signature :  void add_audio_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_audio_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4722, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_bank_parameters_changed_listener()', 'description': 'add_bank_parameters_changed_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;bank_parameters_changed&quot; has changed. C++ signature :  void add_bank_parameters_changed_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_bank_parameters_changed_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4723, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4724, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4725, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4726, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_midi_inputs_listener()', 'description': 'add_midi_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_inputs&quot; has changed. C++ signature :  void add_midi_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_midi_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4727, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_midi_outputs_listener()', 'description': 'add_midi_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_outputs&quot; has changed. C++ signature :  void add_midi_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_midi_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4728, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4729, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4731, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.audio_inputs_has_listener()', 'description': 'audio_inputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;audio_inputs&quot;. C++ signature :  bool audio_inputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'audio_inputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4733, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.audio_outputs_has_listener()', 'description': 'audio_outputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;audio_outputs&quot;. C++ signature :  bool audio_outputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'audio_outputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4734, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.bank_parameters_changed_has_listener()', 'description': 'bank_parameters_changed_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;bank_parameters_changed&quot;. C++ signature :  bool bank_parameters_changed_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'bank_parameters_changed_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4745, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4747, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4749, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4751, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.midi_inputs_has_listener()', 'description': 'midi_inputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_inputs&quot;. C++ signature :  bool midi_inputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'midi_inputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4753, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.midi_outputs_has_listener()', 'description': 'midi_outputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_outputs&quot;. C++ signature :  bool midi_outputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'midi_outputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4755, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4757, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4758, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_audio_inputs_listener()', 'description': 'remove_audio_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;audio_inputs&quot;. C++ signature :  void remove_audio_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_audio_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4759, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_audio_outputs_listener()', 'description': 'remove_audio_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;audio_outputs&quot;. C++ signature :  void remove_audio_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_audio_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4760, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_bank_parameters_changed_listener()', 'description': 'remove_bank_parameters_changed_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;bank_parameters_changed&quot;. C++ signature :  void remove_bank_parameters_changed_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_bank_parameters_changed_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4761, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4762, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4763, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4764, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_midi_inputs_listener()', 'description': 'remove_midi_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_inputs&quot;. C++ signature :  void remove_midi_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_midi_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4765, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_midi_outputs_listener()', 'description': 'remove_midi_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_outputs&quot;. C++ signature :  void remove_midi_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_midi_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4766, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4767, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4655, 'children': [], 'group': 'listener Method'},
{'ref': 4772, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4691, 'children': [], 'group': 'listener Method'},
{'ref': 4773, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 4691, 'children': [], 'group': 'listener Method'},
{'ref': 4774, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4691, 'children': [], 'group': 'listener Method'},
{'ref': 4803, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4691, 'children': [], 'group': 'listener Method'},
{'ref': 4806, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 4691, 'children': [], 'group': 'listener Method'},
{'ref': 4807, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4691, 'children': [], 'group': 'listener Method'},
{'ref': 4810, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4811, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4812, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4813, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_mono_poly_listener()', 'description': 'add_mono_poly_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly&quot; has changed. C++ signature :  void add_mono_poly_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4814, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4815, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4816, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_poly_voices_listener()', 'description': 'add_poly_voices_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;poly_voices&quot; has changed. C++ signature :  void add_poly_voices_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_poly_voices_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4817, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_selected_engine_listener()', 'description': 'add_selected_engine_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_engine&quot; has changed. C++ signature :  void add_selected_engine_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_selected_engine_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4818, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_unison_voices_listener()', 'description': 'add_unison_voices_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;unison_voices&quot; has changed. C++ signature :  void add_unison_voices_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_unison_voices_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4819, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4820, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4821, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4822, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.mono_poly_has_listener()', 'description': 'mono_poly_has_listener( (MeldDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly&quot;. C++ signature :  bool mono_poly_has_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'mono_poly_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4823, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4824, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4825, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.poly_voices_has_listener()', 'description': 'poly_voices_has_listener( (MeldDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;poly_voices&quot;. C++ signature :  bool poly_voices_has_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'poly_voices_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4826, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4827, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4828, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4829, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_mono_poly_listener()', 'description': 'remove_mono_poly_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mono_poly&quot;. C++ signature :  void remove_mono_poly_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4830, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4831, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4832, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_poly_voices_listener()', 'description': 'remove_poly_voices_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;poly_voices&quot;. C++ signature :  void remove_poly_voices_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_poly_voices_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4833, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_selected_engine_listener()', 'description': 'remove_selected_engine_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_engine&quot;. C++ signature :  void remove_selected_engine_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_selected_engine_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4834, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_unison_voices_listener()', 'description': 'remove_unison_voices_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;unison_voices&quot;. C++ signature :  void remove_unison_voices_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_unison_voices_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4835, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.selected_engine_has_listener()', 'description': 'selected_engine_has_listener( (MeldDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_engine&quot;. C++ signature :  bool selected_engine_has_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'selected_engine_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4837, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.unison_voices_has_listener()', 'description': 'unison_voices_has_listener( (MeldDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;unison_voices&quot;. C++ signature :  bool unison_voices_has_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'unison_voices_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4867, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4868, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4869, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4870, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_mono_poly_listener()', 'description': 'add_mono_poly_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly&quot; has changed. C++ signature :  void add_mono_poly_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4871, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4872, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4873, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_poly_voices_listener()', 'description': 'add_poly_voices_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;poly_voices&quot; has changed. C++ signature :  void add_poly_voices_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_poly_voices_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4874, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_selected_engine_listener()', 'description': 'add_selected_engine_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_engine&quot; has changed. C++ signature :  void add_selected_engine_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_selected_engine_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4875, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.add_unison_voices_listener()', 'description': 'add_unison_voices_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;unison_voices&quot; has changed. C++ signature :  void add_unison_voices_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'add_unison_voices_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4882, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4884, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4886, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4888, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.mono_poly_has_listener()', 'description': 'mono_poly_has_listener( (MeldDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly&quot;. C++ signature :  bool mono_poly_has_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'mono_poly_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4890, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4892, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4894, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.poly_voices_has_listener()', 'description': 'poly_voices_has_listener( (MeldDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;poly_voices&quot;. C++ signature :  bool poly_voices_has_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'poly_voices_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4895, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4896, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4897, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4898, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_mono_poly_listener()', 'description': 'remove_mono_poly_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mono_poly&quot;. C++ signature :  void remove_mono_poly_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4899, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4900, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4901, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_poly_voices_listener()', 'description': 'remove_poly_voices_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;poly_voices&quot;. C++ signature :  void remove_poly_voices_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_poly_voices_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4902, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_selected_engine_listener()', 'description': 'remove_selected_engine_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_engine&quot;. C++ signature :  void remove_selected_engine_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_selected_engine_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4903, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.remove_unison_voices_listener()', 'description': 'remove_unison_voices_listener( (MeldDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;unison_voices&quot;. C++ signature :  void remove_unison_voices_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'remove_unison_voices_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4905, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.selected_engine_has_listener()', 'description': 'selected_engine_has_listener( (MeldDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_engine&quot;. C++ signature :  bool selected_engine_has_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'selected_engine_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4909, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.unison_voices_has_listener()', 'description': 'unison_voices_has_listener( (MeldDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;unison_voices&quot;. C++ signature :  bool unison_voices_has_listener(TMeldDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'unison_voices_has_listener()'], 'hierarchy': 3, 'ref_parent': 4809, 'children': [], 'group': 'listener Method'},
{'ref': 4912, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4838, 'children': [], 'group': 'listener Method'},
{'ref': 4913, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 4838, 'children': [], 'group': 'listener Method'},
{'ref': 4914, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4838, 'children': [], 'group': 'listener Method'},
{'ref': 4943, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4838, 'children': [], 'group': 'listener Method'},
{'ref': 4946, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 4838, 'children': [], 'group': 'listener Method'},
{'ref': 4947, 'tag': 'listener Method', 'name': 'Live.MeldDevice.MeldDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MeldDevice', 'MeldDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4838, 'children': [], 'group': 'listener Method'},
{'ref': 5146, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.add_crossfade_assign_listener()', 'description': 'add_crossfade_assign_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;crossfade_assign&quot; has changed. C++ signature :  void add_crossfade_assign_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'add_crossfade_assign_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5147, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.add_panning_mode_listener()', 'description': 'add_panning_mode_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;panning_mode&quot; has changed. C++ signature :  void add_panning_mode_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'add_panning_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5148, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.add_sends_listener()', 'description': 'add_sends_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sends&quot; has changed. C++ signature :  void add_sends_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'add_sends_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5149, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.crossfade_assign_has_listener()', 'description': 'crossfade_assign_has_listener( (MixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;crossfade_assign&quot;. C++ signature :  bool crossfade_assign_has_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'crossfade_assign_has_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5150, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.panning_mode_has_listener()', 'description': 'panning_mode_has_listener( (MixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;panning_mode&quot;. C++ signature :  bool panning_mode_has_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'panning_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5151, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.remove_crossfade_assign_listener()', 'description': 'remove_crossfade_assign_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;crossfade_assign&quot;. C++ signature :  void remove_crossfade_assign_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'remove_crossfade_assign_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5152, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.remove_panning_mode_listener()', 'description': 'remove_panning_mode_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;panning_mode&quot;. C++ signature :  void remove_panning_mode_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'remove_panning_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5153, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.remove_sends_listener()', 'description': 'remove_sends_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sends&quot;. C++ signature :  void remove_sends_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'remove_sends_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5154, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.sends_has_listener()', 'description': 'sends_has_listener( (MixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sends&quot;. C++ signature :  bool sends_has_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'sends_has_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5183, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.add_crossfade_assign_listener()', 'description': 'add_crossfade_assign_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;crossfade_assign&quot; has changed. C++ signature :  void add_crossfade_assign_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'add_crossfade_assign_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5184, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.add_panning_mode_listener()', 'description': 'add_panning_mode_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;panning_mode&quot; has changed. C++ signature :  void add_panning_mode_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'add_panning_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5185, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.add_sends_listener()', 'description': 'add_sends_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sends&quot; has changed. C++ signature :  void add_sends_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'add_sends_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5188, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.crossfade_assign_has_listener()', 'description': 'crossfade_assign_has_listener( (MixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;crossfade_assign&quot;. C++ signature :  bool crossfade_assign_has_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'crossfade_assign_has_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5195, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.panning_mode_has_listener()', 'description': 'panning_mode_has_listener( (MixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;panning_mode&quot;. C++ signature :  bool panning_mode_has_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'panning_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5197, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.remove_crossfade_assign_listener()', 'description': 'remove_crossfade_assign_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;crossfade_assign&quot;. C++ signature :  void remove_crossfade_assign_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'remove_crossfade_assign_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5198, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.remove_panning_mode_listener()', 'description': 'remove_panning_mode_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;panning_mode&quot;. C++ signature :  void remove_panning_mode_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'remove_panning_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5199, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.remove_sends_listener()', 'description': 'remove_sends_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sends&quot;. C++ signature :  void remove_sends_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'remove_sends_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5202, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.sends_has_listener()', 'description': 'sends_has_listener( (MixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sends&quot;. C++ signature :  bool sends_has_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'sends_has_listener()'], 'hierarchy': 3, 'ref_parent': 5145, 'children': [], 'group': 'listener Method'},
{'ref': 5367, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5368, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5369, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5370, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5371, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5372, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_presets_listener()', 'description': 'add_presets_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;presets&quot; has changed. C++ signature :  void add_presets_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_presets_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5373, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_selected_preset_index_listener()', 'description': 'add_selected_preset_index_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_preset_index&quot; has changed. C++ signature :  void add_selected_preset_index_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_selected_preset_index_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5375, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5376, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5377, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5378, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5379, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5380, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.presets_has_listener()', 'description': 'presets_has_listener( (PluginDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;presets&quot;. C++ signature :  bool presets_has_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'presets_has_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5381, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5382, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5383, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5384, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5385, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5386, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_presets_listener()', 'description': 'remove_presets_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;presets&quot;. C++ signature :  void remove_presets_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_presets_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5387, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_selected_preset_index_listener()', 'description': 'remove_selected_preset_index_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_preset_index&quot;. C++ signature :  void remove_selected_preset_index_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_selected_preset_index_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5388, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.selected_preset_index_has_listener()', 'description': 'selected_preset_index_has_listener( (PluginDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_preset_index&quot;. C++ signature :  bool selected_preset_index_has_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'selected_preset_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5419, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5420, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5421, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5422, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5423, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5424, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_presets_listener()', 'description': 'add_presets_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;presets&quot; has changed. C++ signature :  void add_presets_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_presets_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5425, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_selected_preset_index_listener()', 'description': 'add_selected_preset_index_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_preset_index&quot; has changed. C++ signature :  void add_selected_preset_index_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_selected_preset_index_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5433, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5435, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5437, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5439, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5441, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5443, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.presets_has_listener()', 'description': 'presets_has_listener( (PluginDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;presets&quot;. C++ signature :  bool presets_has_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'presets_has_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5444, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5445, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5446, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5447, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5448, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5449, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_presets_listener()', 'description': 'remove_presets_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;presets&quot;. C++ signature :  void remove_presets_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_presets_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5450, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_selected_preset_index_listener()', 'description': 'remove_selected_preset_index_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_preset_index&quot;. C++ signature :  void remove_selected_preset_index_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_selected_preset_index_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5452, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.selected_preset_index_has_listener()', 'description': 'selected_preset_index_has_listener( (PluginDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_preset_index&quot;. C++ signature :  bool selected_preset_index_has_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'selected_preset_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 5366, 'children': [], 'group': 'listener Method'},
{'ref': 5457, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5390, 'children': [], 'group': 'listener Method'},
{'ref': 5458, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 5390, 'children': [], 'group': 'listener Method'},
{'ref': 5459, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5390, 'children': [], 'group': 'listener Method'},
{'ref': 5488, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5390, 'children': [], 'group': 'listener Method'},
{'ref': 5491, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 5390, 'children': [], 'group': 'listener Method'},
{'ref': 5492, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5390, 'children': [], 'group': 'listener Method'},
{'ref': 5495, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_chains_listener()', 'description': 'add_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;chains&quot; has changed. C++ signature :  void add_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_chains_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5496, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_drum_pads_listener()', 'description': 'add_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;drum_pads&quot; has changed. C++ signature :  void add_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5497, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_has_drum_pads_listener()', 'description': 'add_has_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_drum_pads&quot; has changed. C++ signature :  void add_has_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_has_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5498, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_has_macro_mappings_listener()', 'description': 'add_has_macro_mappings_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_macro_mappings&quot; has changed. C++ signature :  void add_has_macro_mappings_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_has_macro_mappings_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5499, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5500, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_is_showing_chains_listener()', 'description': 'add_is_showing_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_showing_chains&quot; has changed. C++ signature :  void add_is_showing_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5501, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5502, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5504, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_macros_mapped_listener()', 'description': 'add_macros_mapped_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;macros_mapped&quot; has changed. C++ signature :  void add_macros_mapped_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_macros_mapped_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5505, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5506, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5507, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_return_chains_listener()', 'description': 'add_return_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;return_chains&quot; has changed. C++ signature :  void add_return_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_return_chains_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5508, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_variation_count_listener()', 'description': 'add_variation_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;variation_count&quot; has changed. C++ signature :  void add_variation_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_variation_count_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5509, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_visible_drum_pads_listener()', 'description': 'add_visible_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_drum_pads&quot; has changed. C++ signature :  void add_visible_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_visible_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5510, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_visible_macro_count_listener()', 'description': 'add_visible_macro_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_macro_count&quot; has changed. C++ signature :  void add_visible_macro_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_visible_macro_count_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5511, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.chains_has_listener()', 'description': 'chains_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;chains&quot;. C++ signature :  bool chains_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5514, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.drum_pads_has_listener()', 'description': 'drum_pads_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;drum_pads&quot;. C++ signature :  bool drum_pads_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'drum_pads_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5515, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.has_drum_pads_has_listener()', 'description': 'has_drum_pads_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_drum_pads&quot;. C++ signature :  bool has_drum_pads_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'has_drum_pads_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5516, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.has_macro_mappings_has_listener()', 'description': 'has_macro_mappings_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_macro_mappings&quot;. C++ signature :  bool has_macro_mappings_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'has_macro_mappings_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5517, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5518, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.is_showing_chains_has_listener()', 'description': 'is_showing_chains_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_showing_chains&quot;. C++ signature :  bool is_showing_chains_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'is_showing_chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5519, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5520, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5521, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.macros_mapped_has_listener()', 'description': 'macros_mapped_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;macros_mapped&quot;. C++ signature :  bool macros_mapped_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'macros_mapped_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5522, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5523, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5527, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_chains_listener()', 'description': 'remove_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;chains&quot;. C++ signature :  void remove_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_chains_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5528, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_drum_pads_listener()', 'description': 'remove_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;drum_pads&quot;. C++ signature :  void remove_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5529, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_has_drum_pads_listener()', 'description': 'remove_has_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_drum_pads&quot;. C++ signature :  void remove_has_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_has_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5530, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_has_macro_mappings_listener()', 'description': 'remove_has_macro_mappings_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_macro_mappings&quot;. C++ signature :  void remove_has_macro_mappings_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_has_macro_mappings_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5531, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5532, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_is_showing_chains_listener()', 'description': 'remove_is_showing_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_showing_chains&quot;. C++ signature :  void remove_is_showing_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5533, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5534, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5536, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_macros_mapped_listener()', 'description': 'remove_macros_mapped_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;macros_mapped&quot;. C++ signature :  void remove_macros_mapped_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_macros_mapped_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5537, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5538, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5539, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_return_chains_listener()', 'description': 'remove_return_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;return_chains&quot;. C++ signature :  void remove_return_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_return_chains_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5540, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_variation_count_listener()', 'description': 'remove_variation_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;variation_count&quot;. C++ signature :  void remove_variation_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_variation_count_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5541, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_visible_drum_pads_listener()', 'description': 'remove_visible_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_drum_pads&quot;. C++ signature :  void remove_visible_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_visible_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5542, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_visible_macro_count_listener()', 'description': 'remove_visible_macro_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_macro_count&quot;. C++ signature :  void remove_visible_macro_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_visible_macro_count_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5543, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.return_chains_has_listener()', 'description': 'return_chains_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;return_chains&quot;. C++ signature :  bool return_chains_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'return_chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5546, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.variation_count_has_listener()', 'description': 'variation_count_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;variation_count&quot;. C++ signature :  bool variation_count_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'variation_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5547, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.visible_drum_pads_has_listener()', 'description': 'visible_drum_pads_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_drum_pads&quot;. C++ signature :  bool visible_drum_pads_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'visible_drum_pads_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5548, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.visible_macro_count_has_listener()', 'description': 'visible_macro_count_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_macro_count&quot;. C++ signature :  bool visible_macro_count_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'visible_macro_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5578, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_chains_listener()', 'description': 'add_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;chains&quot; has changed. C++ signature :  void add_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_chains_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5579, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_drum_pads_listener()', 'description': 'add_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;drum_pads&quot; has changed. C++ signature :  void add_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5580, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_has_drum_pads_listener()', 'description': 'add_has_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_drum_pads&quot; has changed. C++ signature :  void add_has_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_has_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5581, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_has_macro_mappings_listener()', 'description': 'add_has_macro_mappings_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_macro_mappings&quot; has changed. C++ signature :  void add_has_macro_mappings_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_has_macro_mappings_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5582, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5583, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_is_showing_chains_listener()', 'description': 'add_is_showing_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_showing_chains&quot; has changed. C++ signature :  void add_is_showing_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5584, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5585, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5587, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_macros_mapped_listener()', 'description': 'add_macros_mapped_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;macros_mapped&quot; has changed. C++ signature :  void add_macros_mapped_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_macros_mapped_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5588, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5589, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5590, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_return_chains_listener()', 'description': 'add_return_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;return_chains&quot; has changed. C++ signature :  void add_return_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_return_chains_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5591, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_variation_count_listener()', 'description': 'add_variation_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;variation_count&quot; has changed. C++ signature :  void add_variation_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_variation_count_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5592, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_visible_drum_pads_listener()', 'description': 'add_visible_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_drum_pads&quot; has changed. C++ signature :  void add_visible_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_visible_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5593, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_visible_macro_count_listener()', 'description': 'add_visible_macro_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_macro_count&quot; has changed. C++ signature :  void add_visible_macro_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_visible_macro_count_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5600, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.chains_has_listener()', 'description': 'chains_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;chains&quot;. C++ signature :  bool chains_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5606, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.drum_pads_has_listener()', 'description': 'drum_pads_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;drum_pads&quot;. C++ signature :  bool drum_pads_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'drum_pads_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5608, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.has_drum_pads_has_listener()', 'description': 'has_drum_pads_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_drum_pads&quot;. C++ signature :  bool has_drum_pads_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'has_drum_pads_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5610, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.has_macro_mappings_has_listener()', 'description': 'has_macro_mappings_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_macro_mappings&quot;. C++ signature :  bool has_macro_mappings_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'has_macro_mappings_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5612, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5614, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.is_showing_chains_has_listener()', 'description': 'is_showing_chains_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_showing_chains&quot;. C++ signature :  bool is_showing_chains_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'is_showing_chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5616, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5618, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5620, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.macros_mapped_has_listener()', 'description': 'macros_mapped_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;macros_mapped&quot;. C++ signature :  bool macros_mapped_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'macros_mapped_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5622, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5624, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5628, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_chains_listener()', 'description': 'remove_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;chains&quot;. C++ signature :  void remove_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_chains_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5629, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_drum_pads_listener()', 'description': 'remove_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;drum_pads&quot;. C++ signature :  void remove_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5630, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_has_drum_pads_listener()', 'description': 'remove_has_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_drum_pads&quot;. C++ signature :  void remove_has_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_has_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5631, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_has_macro_mappings_listener()', 'description': 'remove_has_macro_mappings_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_macro_mappings&quot;. C++ signature :  void remove_has_macro_mappings_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_has_macro_mappings_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5632, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5633, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_is_showing_chains_listener()', 'description': 'remove_is_showing_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_showing_chains&quot;. C++ signature :  void remove_is_showing_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5634, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5635, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5637, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_macros_mapped_listener()', 'description': 'remove_macros_mapped_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;macros_mapped&quot;. C++ signature :  void remove_macros_mapped_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_macros_mapped_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5638, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5639, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5640, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_return_chains_listener()', 'description': 'remove_return_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;return_chains&quot;. C++ signature :  void remove_return_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_return_chains_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5641, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_variation_count_listener()', 'description': 'remove_variation_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;variation_count&quot;. C++ signature :  void remove_variation_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_variation_count_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5642, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_visible_drum_pads_listener()', 'description': 'remove_visible_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_drum_pads&quot;. C++ signature :  void remove_visible_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_visible_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5643, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_visible_macro_count_listener()', 'description': 'remove_visible_macro_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_macro_count&quot;. C++ signature :  void remove_visible_macro_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_visible_macro_count_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5645, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.return_chains_has_listener()', 'description': 'return_chains_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;return_chains&quot;. C++ signature :  bool return_chains_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'return_chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5651, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.variation_count_has_listener()', 'description': 'variation_count_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;variation_count&quot;. C++ signature :  bool variation_count_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'variation_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5654, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.visible_drum_pads_has_listener()', 'description': 'visible_drum_pads_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_drum_pads&quot;. C++ signature :  bool visible_drum_pads_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'visible_drum_pads_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5656, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.visible_macro_count_has_listener()', 'description': 'visible_macro_count_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_macro_count&quot;. C++ signature :  bool visible_macro_count_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'visible_macro_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 5494, 'children': [], 'group': 'listener Method'},
{'ref': 5658, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_drum_pads_scroll_position_listener()', 'description': 'add_drum_pads_scroll_position_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;drum_pads_scroll_position&quot; has changed. C++ signature :  void add_drum_pads_scroll_position_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_drum_pads_scroll_position_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5659, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5660, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_is_showing_chain_devices_listener()', 'description': 'add_is_showing_chain_devices_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_showing_chain_devices&quot; has changed. C++ signature :  void add_is_showing_chain_devices_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_is_showing_chain_devices_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5661, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_selected_chain_listener()', 'description': 'add_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_chain&quot; has changed. C++ signature :  void add_selected_chain_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5662, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_selected_drum_pad_listener()', 'description': 'add_selected_drum_pad_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_drum_pad&quot; has changed. C++ signature :  void add_selected_drum_pad_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_selected_drum_pad_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5663, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.drum_pads_scroll_position_has_listener()', 'description': 'drum_pads_scroll_position_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;drum_pads_scroll_position&quot;. C++ signature :  bool drum_pads_scroll_position_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'drum_pads_scroll_position_has_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5664, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5665, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.is_showing_chain_devices_has_listener()', 'description': 'is_showing_chain_devices_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_showing_chain_devices&quot;. C++ signature :  bool is_showing_chain_devices_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'is_showing_chain_devices_has_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5666, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_drum_pads_scroll_position_listener()', 'description': 'remove_drum_pads_scroll_position_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;drum_pads_scroll_position&quot;. C++ signature :  void remove_drum_pads_scroll_position_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_drum_pads_scroll_position_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5667, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5668, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_is_showing_chain_devices_listener()', 'description': 'remove_is_showing_chain_devices_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_showing_chain_devices&quot;. C++ signature :  void remove_is_showing_chain_devices_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_is_showing_chain_devices_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5669, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_selected_chain_listener()', 'description': 'remove_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_chain&quot;. C++ signature :  void remove_selected_chain_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5670, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_selected_drum_pad_listener()', 'description': 'remove_selected_drum_pad_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_drum_pad&quot;. C++ signature :  void remove_selected_drum_pad_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_selected_drum_pad_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5671, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.selected_chain_has_listener()', 'description': 'selected_chain_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_chain&quot;. C++ signature :  bool selected_chain_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'selected_chain_has_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5672, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.selected_drum_pad_has_listener()', 'description': 'selected_drum_pad_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_drum_pad&quot;. C++ signature :  bool selected_drum_pad_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'selected_drum_pad_has_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5701, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_drum_pads_scroll_position_listener()', 'description': 'add_drum_pads_scroll_position_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;drum_pads_scroll_position&quot; has changed. C++ signature :  void add_drum_pads_scroll_position_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_drum_pads_scroll_position_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5702, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5703, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_is_showing_chain_devices_listener()', 'description': 'add_is_showing_chain_devices_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_showing_chain_devices&quot; has changed. C++ signature :  void add_is_showing_chain_devices_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_is_showing_chain_devices_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5704, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_selected_chain_listener()', 'description': 'add_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_chain&quot; has changed. C++ signature :  void add_selected_chain_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5705, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_selected_drum_pad_listener()', 'description': 'add_selected_drum_pad_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_drum_pad&quot; has changed. C++ signature :  void add_selected_drum_pad_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_selected_drum_pad_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5708, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.drum_pads_scroll_position_has_listener()', 'description': 'drum_pads_scroll_position_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;drum_pads_scroll_position&quot;. C++ signature :  bool drum_pads_scroll_position_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'drum_pads_scroll_position_has_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5710, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5712, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.is_showing_chain_devices_has_listener()', 'description': 'is_showing_chain_devices_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_showing_chain_devices&quot;. C++ signature :  bool is_showing_chain_devices_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'is_showing_chain_devices_has_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5713, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_drum_pads_scroll_position_listener()', 'description': 'remove_drum_pads_scroll_position_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;drum_pads_scroll_position&quot;. C++ signature :  void remove_drum_pads_scroll_position_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_drum_pads_scroll_position_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5714, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5715, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_is_showing_chain_devices_listener()', 'description': 'remove_is_showing_chain_devices_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_showing_chain_devices&quot;. C++ signature :  void remove_is_showing_chain_devices_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_is_showing_chain_devices_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5716, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_selected_chain_listener()', 'description': 'remove_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_chain&quot;. C++ signature :  void remove_selected_chain_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5717, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_selected_drum_pad_listener()', 'description': 'remove_selected_drum_pad_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_drum_pad&quot;. C++ signature :  void remove_selected_drum_pad_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_selected_drum_pad_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5719, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.selected_chain_has_listener()', 'description': 'selected_chain_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_chain&quot;. C++ signature :  bool selected_chain_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'selected_chain_has_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5721, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.selected_drum_pad_has_listener()', 'description': 'selected_drum_pad_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_drum_pad&quot;. C++ signature :  bool selected_drum_pad_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'selected_drum_pad_has_listener()'], 'hierarchy': 4, 'ref_parent': 5549, 'children': [], 'group': 'listener Method'},
{'ref': 5724, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.add_env_listen_listener()', 'description': 'add_env_listen_listener( (RoarDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;env_listen&quot; has changed. C++ signature :  void add_env_listen_listener(TRoarDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'add_env_listen_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5725, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5726, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5727, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5728, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5729, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5730, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.add_routing_mode_index_listener()', 'description': 'add_routing_mode_index_listener( (RoarDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;routing_mode_index&quot; has changed. C++ signature :  void add_routing_mode_index_listener(TRoarDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'add_routing_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5731, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.env_listen_has_listener()', 'description': 'env_listen_has_listener( (RoarDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;env_listen&quot;. C++ signature :  bool env_listen_has_listener(TRoarDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'env_listen_has_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5732, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5733, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5734, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5735, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5736, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5737, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.remove_env_listen_listener()', 'description': 'remove_env_listen_listener( (RoarDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;env_listen&quot;. C++ signature :  void remove_env_listen_listener(TRoarDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'remove_env_listen_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5738, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5739, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5740, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5741, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5742, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5743, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.remove_routing_mode_index_listener()', 'description': 'remove_routing_mode_index_listener( (RoarDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;routing_mode_index&quot;. C++ signature :  void remove_routing_mode_index_listener(TRoarDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'remove_routing_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5744, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.routing_mode_index_has_listener()', 'description': 'routing_mode_index_has_listener( (RoarDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;routing_mode_index&quot;. C++ signature :  bool routing_mode_index_has_listener(TRoarDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'routing_mode_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5775, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.add_env_listen_listener()', 'description': 'add_env_listen_listener( (RoarDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;env_listen&quot; has changed. C++ signature :  void add_env_listen_listener(TRoarDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'add_env_listen_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5776, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5777, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5778, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5779, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5780, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5781, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.add_routing_mode_index_listener()', 'description': 'add_routing_mode_index_listener( (RoarDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;routing_mode_index&quot; has changed. C++ signature :  void add_routing_mode_index_listener(TRoarDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'add_routing_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5788, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.env_listen_has_listener()', 'description': 'env_listen_has_listener( (RoarDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;env_listen&quot;. C++ signature :  bool env_listen_has_listener(TRoarDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'env_listen_has_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5790, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5792, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5794, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5796, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5798, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5799, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.remove_env_listen_listener()', 'description': 'remove_env_listen_listener( (RoarDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;env_listen&quot;. C++ signature :  void remove_env_listen_listener(TRoarDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'remove_env_listen_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5800, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5801, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5802, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5803, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5804, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5805, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.remove_routing_mode_index_listener()', 'description': 'remove_routing_mode_index_listener( (RoarDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;routing_mode_index&quot;. C++ signature :  void remove_routing_mode_index_listener(TRoarDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'remove_routing_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5807, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.routing_mode_index_has_listener()', 'description': 'routing_mode_index_has_listener( (RoarDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;routing_mode_index&quot;. C++ signature :  bool routing_mode_index_has_listener(TRoarDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'routing_mode_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 5723, 'children': [], 'group': 'listener Method'},
{'ref': 5813, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5746, 'children': [], 'group': 'listener Method'},
{'ref': 5814, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 5746, 'children': [], 'group': 'listener Method'},
{'ref': 5815, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5746, 'children': [], 'group': 'listener Method'},
{'ref': 5844, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5746, 'children': [], 'group': 'listener Method'},
{'ref': 5847, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 5746, 'children': [], 'group': 'listener Method'},
{'ref': 5848, 'tag': 'listener Method', 'name': 'Live.RoarDevice.RoarDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RoarDevice', 'RoarDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5746, 'children': [], 'group': 'listener Method'},
{'ref': 5851, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_beats_granulation_resolution_listener()', 'description': 'add_beats_granulation_resolution_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;beats_granulation_resolution&quot; has changed. C++ signature :  void add_beats_granulation_resolution_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_beats_granulation_resolution_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5852, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_beats_transient_envelope_listener()', 'description': 'add_beats_transient_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;beats_transient_envelope&quot; has changed. C++ signature :  void add_beats_transient_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_beats_transient_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5853, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_beats_transient_loop_mode_listener()', 'description': 'add_beats_transient_loop_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;beats_transient_loop_mode&quot; has changed. C++ signature :  void add_beats_transient_loop_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_beats_transient_loop_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5854, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_complex_pro_envelope_listener()', 'description': 'add_complex_pro_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;complex_pro_envelope&quot; has changed. C++ signature :  void add_complex_pro_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_complex_pro_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5855, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_complex_pro_formants_listener()', 'description': 'add_complex_pro_formants_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;complex_pro_formants&quot; has changed. C++ signature :  void add_complex_pro_formants_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_complex_pro_formants_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5856, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_end_marker_listener()', 'description': 'add_end_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;end_marker&quot; has changed. C++ signature :  void add_end_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5857, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_file_path_listener()', 'description': 'add_file_path_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;file_path&quot; has changed. C++ signature :  void add_file_path_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5858, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_gain_listener()', 'description': 'add_gain_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;gain&quot; has changed. C++ signature :  void add_gain_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_gain_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5859, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slices_listener()', 'description': 'add_slices_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slices&quot; has changed. C++ signature :  void add_slices_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slices_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5860, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_beat_division_listener()', 'description': 'add_slicing_beat_division_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_beat_division&quot; has changed. C++ signature :  void add_slicing_beat_division_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_beat_division_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5861, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_region_count_listener()', 'description': 'add_slicing_region_count_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_region_count&quot; has changed. C++ signature :  void add_slicing_region_count_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_region_count_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5862, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_sensitivity_listener()', 'description': 'add_slicing_sensitivity_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_sensitivity&quot; has changed. C++ signature :  void add_slicing_sensitivity_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_sensitivity_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5863, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_style_listener()', 'description': 'add_slicing_style_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_style&quot; has changed. C++ signature :  void add_slicing_style_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_style_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5864, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_start_marker_listener()', 'description': 'add_start_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;start_marker&quot; has changed. C++ signature :  void add_start_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5865, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_texture_flux_listener()', 'description': 'add_texture_flux_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;texture_flux&quot; has changed. C++ signature :  void add_texture_flux_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_texture_flux_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5866, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_texture_grain_size_listener()', 'description': 'add_texture_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;texture_grain_size&quot; has changed. C++ signature :  void add_texture_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_texture_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5867, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_tones_grain_size_listener()', 'description': 'add_tones_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tones_grain_size&quot; has changed. C++ signature :  void add_tones_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_tones_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5868, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_warp_markers_listener()', 'description': 'add_warp_markers_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_markers&quot; has changed. C++ signature :  void add_warp_markers_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5869, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_warp_mode_listener()', 'description': 'add_warp_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_mode&quot; has changed. C++ signature :  void add_warp_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5870, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_warping_listener()', 'description': 'add_warping_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warping&quot; has changed. C++ signature :  void add_warping_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_warping_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5872, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.beats_granulation_resolution_has_listener()', 'description': 'beats_granulation_resolution_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;beats_granulation_resolution&quot;. C++ signature :  bool beats_granulation_resolution_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'beats_granulation_resolution_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5873, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.beats_transient_envelope_has_listener()', 'description': 'beats_transient_envelope_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;beats_transient_envelope&quot;. C++ signature :  bool beats_transient_envelope_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'beats_transient_envelope_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5874, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.beats_transient_loop_mode_has_listener()', 'description': 'beats_transient_loop_mode_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;beats_transient_loop_mode&quot;. C++ signature :  bool beats_transient_loop_mode_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'beats_transient_loop_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5876, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.complex_pro_envelope_has_listener()', 'description': 'complex_pro_envelope_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;complex_pro_envelope&quot;. C++ signature :  bool complex_pro_envelope_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'complex_pro_envelope_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5877, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.complex_pro_formants_has_listener()', 'description': 'complex_pro_formants_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;complex_pro_formants&quot;. C++ signature :  bool complex_pro_formants_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'complex_pro_formants_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5878, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.end_marker_has_listener()', 'description': 'end_marker_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;end_marker&quot;. C++ signature :  bool end_marker_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'end_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5879, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.file_path_has_listener()', 'description': 'file_path_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;file_path&quot;. C++ signature :  bool file_path_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'file_path_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5881, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.gain_has_listener()', 'description': 'gain_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;gain&quot;. C++ signature :  bool gain_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'gain_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5884, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_beats_granulation_resolution_listener()', 'description': 'remove_beats_granulation_resolution_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;beats_granulation_resolution&quot;. C++ signature :  void remove_beats_granulation_resolution_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_beats_granulation_resolution_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5885, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_beats_transient_envelope_listener()', 'description': 'remove_beats_transient_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;beats_transient_envelope&quot;. C++ signature :  void remove_beats_transient_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_beats_transient_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5886, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_beats_transient_loop_mode_listener()', 'description': 'remove_beats_transient_loop_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;beats_transient_loop_mode&quot;. C++ signature :  void remove_beats_transient_loop_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_beats_transient_loop_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5887, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_complex_pro_envelope_listener()', 'description': 'remove_complex_pro_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;complex_pro_envelope&quot;. C++ signature :  void remove_complex_pro_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_complex_pro_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5888, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_complex_pro_formants_listener()', 'description': 'remove_complex_pro_formants_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;complex_pro_formants&quot;. C++ signature :  void remove_complex_pro_formants_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_complex_pro_formants_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5889, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_end_marker_listener()', 'description': 'remove_end_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;end_marker&quot;. C++ signature :  void remove_end_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5890, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_file_path_listener()', 'description': 'remove_file_path_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;file_path&quot;. C++ signature :  void remove_file_path_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5891, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_gain_listener()', 'description': 'remove_gain_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;gain&quot;. C++ signature :  void remove_gain_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_gain_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5893, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slices_listener()', 'description': 'remove_slices_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slices&quot;. C++ signature :  void remove_slices_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slices_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5894, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_beat_division_listener()', 'description': 'remove_slicing_beat_division_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_beat_division&quot;. C++ signature :  void remove_slicing_beat_division_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_beat_division_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5895, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_region_count_listener()', 'description': 'remove_slicing_region_count_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_region_count&quot;. C++ signature :  void remove_slicing_region_count_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_region_count_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5896, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_sensitivity_listener()', 'description': 'remove_slicing_sensitivity_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_sensitivity&quot;. C++ signature :  void remove_slicing_sensitivity_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_sensitivity_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5897, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_style_listener()', 'description': 'remove_slicing_style_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_style&quot;. C++ signature :  void remove_slicing_style_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_style_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5898, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_start_marker_listener()', 'description': 'remove_start_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;start_marker&quot;. C++ signature :  void remove_start_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5899, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_texture_flux_listener()', 'description': 'remove_texture_flux_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;texture_flux&quot;. C++ signature :  void remove_texture_flux_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_texture_flux_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5900, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_texture_grain_size_listener()', 'description': 'remove_texture_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;texture_grain_size&quot;. C++ signature :  void remove_texture_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_texture_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5901, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_tones_grain_size_listener()', 'description': 'remove_tones_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tones_grain_size&quot;. C++ signature :  void remove_tones_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_tones_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5902, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_warp_markers_listener()', 'description': 'remove_warp_markers_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_markers&quot;. C++ signature :  void remove_warp_markers_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5903, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_warp_mode_listener()', 'description': 'remove_warp_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_mode&quot;. C++ signature :  void remove_warp_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5904, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_warping_listener()', 'description': 'remove_warping_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warping&quot;. C++ signature :  void remove_warping_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_warping_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5907, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slices_has_listener()', 'description': 'slices_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slices&quot;. C++ signature :  bool slices_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slices_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5908, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_beat_division_has_listener()', 'description': 'slicing_beat_division_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_beat_division&quot;. C++ signature :  bool slicing_beat_division_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_beat_division_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5909, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_region_count_has_listener()', 'description': 'slicing_region_count_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_region_count&quot;. C++ signature :  bool slicing_region_count_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_region_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5910, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_sensitivity_has_listener()', 'description': 'slicing_sensitivity_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_sensitivity&quot;. C++ signature :  bool slicing_sensitivity_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_sensitivity_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5911, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_style_has_listener()', 'description': 'slicing_style_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_style&quot;. C++ signature :  bool slicing_style_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_style_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5912, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.start_marker_has_listener()', 'description': 'start_marker_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;start_marker&quot;. C++ signature :  bool start_marker_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'start_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5913, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.texture_flux_has_listener()', 'description': 'texture_flux_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;texture_flux&quot;. C++ signature :  bool texture_flux_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'texture_flux_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5914, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.texture_grain_size_has_listener()', 'description': 'texture_grain_size_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;texture_grain_size&quot;. C++ signature :  bool texture_grain_size_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'texture_grain_size_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5915, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.tones_grain_size_has_listener()', 'description': 'tones_grain_size_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tones_grain_size&quot;. C++ signature :  bool tones_grain_size_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'tones_grain_size_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5916, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.warp_markers_has_listener()', 'description': 'warp_markers_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_markers&quot;. C++ signature :  bool warp_markers_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'warp_markers_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5917, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.warp_mode_has_listener()', 'description': 'warp_mode_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_mode&quot;. C++ signature :  bool warp_mode_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'warp_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5918, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.warping_has_listener()', 'description': 'warping_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warping&quot;. C++ signature :  bool warping_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'warping_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5947, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_beats_granulation_resolution_listener()', 'description': 'add_beats_granulation_resolution_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;beats_granulation_resolution&quot; has changed. C++ signature :  void add_beats_granulation_resolution_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_beats_granulation_resolution_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5948, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_beats_transient_envelope_listener()', 'description': 'add_beats_transient_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;beats_transient_envelope&quot; has changed. C++ signature :  void add_beats_transient_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_beats_transient_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5949, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_beats_transient_loop_mode_listener()', 'description': 'add_beats_transient_loop_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;beats_transient_loop_mode&quot; has changed. C++ signature :  void add_beats_transient_loop_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_beats_transient_loop_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5950, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_complex_pro_envelope_listener()', 'description': 'add_complex_pro_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;complex_pro_envelope&quot; has changed. C++ signature :  void add_complex_pro_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_complex_pro_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5951, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_complex_pro_formants_listener()', 'description': 'add_complex_pro_formants_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;complex_pro_formants&quot; has changed. C++ signature :  void add_complex_pro_formants_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_complex_pro_formants_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5952, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_end_marker_listener()', 'description': 'add_end_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;end_marker&quot; has changed. C++ signature :  void add_end_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5953, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_file_path_listener()', 'description': 'add_file_path_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;file_path&quot; has changed. C++ signature :  void add_file_path_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5954, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_gain_listener()', 'description': 'add_gain_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;gain&quot; has changed. C++ signature :  void add_gain_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_gain_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5955, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slices_listener()', 'description': 'add_slices_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slices&quot; has changed. C++ signature :  void add_slices_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slices_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5956, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_beat_division_listener()', 'description': 'add_slicing_beat_division_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_beat_division&quot; has changed. C++ signature :  void add_slicing_beat_division_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_beat_division_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5957, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_region_count_listener()', 'description': 'add_slicing_region_count_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_region_count&quot; has changed. C++ signature :  void add_slicing_region_count_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_region_count_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5958, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_sensitivity_listener()', 'description': 'add_slicing_sensitivity_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_sensitivity&quot; has changed. C++ signature :  void add_slicing_sensitivity_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_sensitivity_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5959, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_style_listener()', 'description': 'add_slicing_style_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_style&quot; has changed. C++ signature :  void add_slicing_style_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_style_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5960, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_start_marker_listener()', 'description': 'add_start_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;start_marker&quot; has changed. C++ signature :  void add_start_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5961, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_texture_flux_listener()', 'description': 'add_texture_flux_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;texture_flux&quot; has changed. C++ signature :  void add_texture_flux_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_texture_flux_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5962, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_texture_grain_size_listener()', 'description': 'add_texture_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;texture_grain_size&quot; has changed. C++ signature :  void add_texture_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_texture_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5963, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_tones_grain_size_listener()', 'description': 'add_tones_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tones_grain_size&quot; has changed. C++ signature :  void add_tones_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_tones_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5964, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_warp_markers_listener()', 'description': 'add_warp_markers_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_markers&quot; has changed. C++ signature :  void add_warp_markers_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5965, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_warp_mode_listener()', 'description': 'add_warp_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_mode&quot; has changed. C++ signature :  void add_warp_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5966, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_warping_listener()', 'description': 'add_warping_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warping&quot; has changed. C++ signature :  void add_warping_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_warping_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5969, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.beats_granulation_resolution_has_listener()', 'description': 'beats_granulation_resolution_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;beats_granulation_resolution&quot;. C++ signature :  bool beats_granulation_resolution_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'beats_granulation_resolution_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5971, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.beats_transient_envelope_has_listener()', 'description': 'beats_transient_envelope_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;beats_transient_envelope&quot;. C++ signature :  bool beats_transient_envelope_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'beats_transient_envelope_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5973, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.beats_transient_loop_mode_has_listener()', 'description': 'beats_transient_loop_mode_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;beats_transient_loop_mode&quot;. C++ signature :  bool beats_transient_loop_mode_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'beats_transient_loop_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5977, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.complex_pro_envelope_has_listener()', 'description': 'complex_pro_envelope_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;complex_pro_envelope&quot;. C++ signature :  bool complex_pro_envelope_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'complex_pro_envelope_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5979, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.complex_pro_formants_has_listener()', 'description': 'complex_pro_formants_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;complex_pro_formants&quot;. C++ signature :  bool complex_pro_formants_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'complex_pro_formants_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5981, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.end_marker_has_listener()', 'description': 'end_marker_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;end_marker&quot;. C++ signature :  bool end_marker_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'end_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5983, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.file_path_has_listener()', 'description': 'file_path_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;file_path&quot;. C++ signature :  bool file_path_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'file_path_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5986, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.gain_has_listener()', 'description': 'gain_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;gain&quot;. C++ signature :  bool gain_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'gain_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5990, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_beats_granulation_resolution_listener()', 'description': 'remove_beats_granulation_resolution_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;beats_granulation_resolution&quot;. C++ signature :  void remove_beats_granulation_resolution_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_beats_granulation_resolution_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5991, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_beats_transient_envelope_listener()', 'description': 'remove_beats_transient_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;beats_transient_envelope&quot;. C++ signature :  void remove_beats_transient_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_beats_transient_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5992, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_beats_transient_loop_mode_listener()', 'description': 'remove_beats_transient_loop_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;beats_transient_loop_mode&quot;. C++ signature :  void remove_beats_transient_loop_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_beats_transient_loop_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5993, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_complex_pro_envelope_listener()', 'description': 'remove_complex_pro_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;complex_pro_envelope&quot;. C++ signature :  void remove_complex_pro_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_complex_pro_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5994, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_complex_pro_formants_listener()', 'description': 'remove_complex_pro_formants_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;complex_pro_formants&quot;. C++ signature :  void remove_complex_pro_formants_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_complex_pro_formants_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5995, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_end_marker_listener()', 'description': 'remove_end_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;end_marker&quot;. C++ signature :  void remove_end_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5996, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_file_path_listener()', 'description': 'remove_file_path_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;file_path&quot;. C++ signature :  void remove_file_path_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5997, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_gain_listener()', 'description': 'remove_gain_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;gain&quot;. C++ signature :  void remove_gain_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_gain_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 5999, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slices_listener()', 'description': 'remove_slices_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slices&quot;. C++ signature :  void remove_slices_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slices_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6000, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_beat_division_listener()', 'description': 'remove_slicing_beat_division_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_beat_division&quot;. C++ signature :  void remove_slicing_beat_division_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_beat_division_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6001, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_region_count_listener()', 'description': 'remove_slicing_region_count_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_region_count&quot;. C++ signature :  void remove_slicing_region_count_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_region_count_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6002, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_sensitivity_listener()', 'description': 'remove_slicing_sensitivity_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_sensitivity&quot;. C++ signature :  void remove_slicing_sensitivity_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_sensitivity_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6003, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_style_listener()', 'description': 'remove_slicing_style_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_style&quot;. C++ signature :  void remove_slicing_style_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_style_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6004, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_start_marker_listener()', 'description': 'remove_start_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;start_marker&quot;. C++ signature :  void remove_start_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6005, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_texture_flux_listener()', 'description': 'remove_texture_flux_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;texture_flux&quot;. C++ signature :  void remove_texture_flux_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_texture_flux_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6006, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_texture_grain_size_listener()', 'description': 'remove_texture_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;texture_grain_size&quot;. C++ signature :  void remove_texture_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_texture_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6007, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_tones_grain_size_listener()', 'description': 'remove_tones_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tones_grain_size&quot;. C++ signature :  void remove_tones_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_tones_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6008, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_warp_markers_listener()', 'description': 'remove_warp_markers_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_markers&quot;. C++ signature :  void remove_warp_markers_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6009, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_warp_mode_listener()', 'description': 'remove_warp_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_mode&quot;. C++ signature :  void remove_warp_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6010, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_warping_listener()', 'description': 'remove_warping_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warping&quot;. C++ signature :  void remove_warping_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_warping_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6015, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slices_has_listener()', 'description': 'slices_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slices&quot;. C++ signature :  bool slices_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slices_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6017, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_beat_division_has_listener()', 'description': 'slicing_beat_division_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_beat_division&quot;. C++ signature :  bool slicing_beat_division_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_beat_division_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6019, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_region_count_has_listener()', 'description': 'slicing_region_count_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_region_count&quot;. C++ signature :  bool slicing_region_count_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_region_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6021, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_sensitivity_has_listener()', 'description': 'slicing_sensitivity_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_sensitivity&quot;. C++ signature :  bool slicing_sensitivity_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_sensitivity_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6023, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_style_has_listener()', 'description': 'slicing_style_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_style&quot;. C++ signature :  bool slicing_style_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_style_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6025, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.start_marker_has_listener()', 'description': 'start_marker_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;start_marker&quot;. C++ signature :  bool start_marker_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'start_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6027, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.texture_flux_has_listener()', 'description': 'texture_flux_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;texture_flux&quot;. C++ signature :  bool texture_flux_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'texture_flux_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6029, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.texture_grain_size_has_listener()', 'description': 'texture_grain_size_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;texture_grain_size&quot;. C++ signature :  bool texture_grain_size_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'texture_grain_size_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6031, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.tones_grain_size_has_listener()', 'description': 'tones_grain_size_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tones_grain_size&quot;. C++ signature :  bool tones_grain_size_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'tones_grain_size_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6033, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.warp_markers_has_listener()', 'description': 'warp_markers_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_markers&quot;. C++ signature :  bool warp_markers_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'warp_markers_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6035, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.warp_mode_has_listener()', 'description': 'warp_mode_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_mode&quot;. C++ signature :  bool warp_mode_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'warp_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6037, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.warping_has_listener()', 'description': 'warping_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warping&quot;. C++ signature :  bool warping_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'warping_has_listener()'], 'hierarchy': 3, 'ref_parent': 5850, 'children': [], 'group': 'listener Method'},
{'ref': 6289, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_clip_slots_listener()', 'description': 'add_clip_slots_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;clip_slots&quot; has changed. C++ signature :  void add_clip_slots_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6290, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_color_index_listener()', 'description': 'add_color_index_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6291, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_color_listener()', 'description': 'add_color_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6292, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_is_triggered_listener()', 'description': 'add_is_triggered_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_triggered&quot; has changed. C++ signature :  void add_is_triggered_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6293, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_name_listener()', 'description': 'add_name_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6294, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_tempo_enabled_listener()', 'description': 'add_tempo_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo_enabled&quot; has changed. C++ signature :  void add_tempo_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_tempo_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6295, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_tempo_listener()', 'description': 'add_tempo_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo&quot; has changed. C++ signature :  void add_tempo_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6296, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_time_signature_denominator_listener()', 'description': 'add_time_signature_denominator_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time_signature_denominator&quot; has changed. C++ signature :  void add_time_signature_denominator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_time_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6297, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_time_signature_enabled_listener()', 'description': 'add_time_signature_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time_signature_enabled&quot; has changed. C++ signature :  void add_time_signature_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_time_signature_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6298, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_time_signature_numerator_listener()', 'description': 'add_time_signature_numerator_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time_signature_numerator&quot; has changed. C++ signature :  void add_time_signature_numerator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_time_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6299, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.clip_slots_has_listener()', 'description': 'clip_slots_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;clip_slots&quot;. C++ signature :  bool clip_slots_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'clip_slots_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6300, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.color_has_listener()', 'description': 'color_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6301, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.color_index_has_listener()', 'description': 'color_index_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6304, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.is_triggered_has_listener()', 'description': 'is_triggered_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_triggered&quot;. C++ signature :  bool is_triggered_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'is_triggered_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6305, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.name_has_listener()', 'description': 'name_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6306, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_clip_slots_listener()', 'description': 'remove_clip_slots_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;clip_slots&quot;. C++ signature :  void remove_clip_slots_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6307, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6308, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_color_listener()', 'description': 'remove_color_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6309, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_is_triggered_listener()', 'description': 'remove_is_triggered_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_triggered&quot;. C++ signature :  void remove_is_triggered_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6310, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_name_listener()', 'description': 'remove_name_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6311, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_tempo_enabled_listener()', 'description': 'remove_tempo_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo_enabled&quot;. C++ signature :  void remove_tempo_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_tempo_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6312, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_tempo_listener()', 'description': 'remove_tempo_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo&quot;. C++ signature :  void remove_tempo_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6313, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_time_signature_denominator_listener()', 'description': 'remove_time_signature_denominator_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time_signature_denominator&quot;. C++ signature :  void remove_time_signature_denominator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_time_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6314, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_time_signature_enabled_listener()', 'description': 'remove_time_signature_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time_signature_enabled&quot;. C++ signature :  void remove_time_signature_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_time_signature_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6315, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_time_signature_numerator_listener()', 'description': 'remove_time_signature_numerator_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time_signature_numerator&quot;. C++ signature :  void remove_time_signature_numerator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_time_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6317, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.tempo_enabled_has_listener()', 'description': 'tempo_enabled_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo_enabled&quot;. C++ signature :  bool tempo_enabled_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'tempo_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6318, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.tempo_has_listener()', 'description': 'tempo_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo&quot;. C++ signature :  bool tempo_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'tempo_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6319, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.time_signature_denominator_has_listener()', 'description': 'time_signature_denominator_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time_signature_denominator&quot;. C++ signature :  bool time_signature_denominator_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'time_signature_denominator_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6320, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.time_signature_enabled_has_listener()', 'description': 'time_signature_enabled_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time_signature_enabled&quot;. C++ signature :  bool time_signature_enabled_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'time_signature_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6321, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.time_signature_numerator_has_listener()', 'description': 'time_signature_numerator_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time_signature_numerator&quot;. C++ signature :  bool time_signature_numerator_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'time_signature_numerator_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6350, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_clip_slots_listener()', 'description': 'add_clip_slots_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;clip_slots&quot; has changed. C++ signature :  void add_clip_slots_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6351, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_color_index_listener()', 'description': 'add_color_index_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6352, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_color_listener()', 'description': 'add_color_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6353, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_is_triggered_listener()', 'description': 'add_is_triggered_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_triggered&quot; has changed. C++ signature :  void add_is_triggered_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6354, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_name_listener()', 'description': 'add_name_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6355, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_tempo_enabled_listener()', 'description': 'add_tempo_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo_enabled&quot; has changed. C++ signature :  void add_tempo_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_tempo_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6356, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_tempo_listener()', 'description': 'add_tempo_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo&quot; has changed. C++ signature :  void add_tempo_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6357, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_time_signature_denominator_listener()', 'description': 'add_time_signature_denominator_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time_signature_denominator&quot; has changed. C++ signature :  void add_time_signature_denominator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_time_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6358, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_time_signature_enabled_listener()', 'description': 'add_time_signature_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time_signature_enabled&quot; has changed. C++ signature :  void add_time_signature_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_time_signature_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6359, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_time_signature_numerator_listener()', 'description': 'add_time_signature_numerator_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time_signature_numerator&quot; has changed. C++ signature :  void add_time_signature_numerator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_time_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6362, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.clip_slots_has_listener()', 'description': 'clip_slots_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;clip_slots&quot;. C++ signature :  bool clip_slots_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'clip_slots_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6364, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.color_has_listener()', 'description': 'color_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6366, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.color_index_has_listener()', 'description': 'color_index_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6371, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.is_triggered_has_listener()', 'description': 'is_triggered_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_triggered&quot;. C++ signature :  bool is_triggered_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'is_triggered_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6373, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.name_has_listener()', 'description': 'name_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6374, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_clip_slots_listener()', 'description': 'remove_clip_slots_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;clip_slots&quot;. C++ signature :  void remove_clip_slots_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6375, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6376, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_color_listener()', 'description': 'remove_color_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6377, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_is_triggered_listener()', 'description': 'remove_is_triggered_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_triggered&quot;. C++ signature :  void remove_is_triggered_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6378, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_name_listener()', 'description': 'remove_name_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6379, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_tempo_enabled_listener()', 'description': 'remove_tempo_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo_enabled&quot;. C++ signature :  void remove_tempo_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_tempo_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6380, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_tempo_listener()', 'description': 'remove_tempo_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo&quot;. C++ signature :  void remove_tempo_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6381, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_time_signature_denominator_listener()', 'description': 'remove_time_signature_denominator_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time_signature_denominator&quot;. C++ signature :  void remove_time_signature_denominator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_time_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6382, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_time_signature_enabled_listener()', 'description': 'remove_time_signature_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time_signature_enabled&quot;. C++ signature :  void remove_time_signature_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_time_signature_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6383, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_time_signature_numerator_listener()', 'description': 'remove_time_signature_numerator_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time_signature_numerator&quot;. C++ signature :  void remove_time_signature_numerator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_time_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6387, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.tempo_enabled_has_listener()', 'description': 'tempo_enabled_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo_enabled&quot;. C++ signature :  bool tempo_enabled_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'tempo_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6388, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.tempo_has_listener()', 'description': 'tempo_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo&quot;. C++ signature :  bool tempo_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'tempo_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6390, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.time_signature_denominator_has_listener()', 'description': 'time_signature_denominator_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time_signature_denominator&quot;. C++ signature :  bool time_signature_denominator_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'time_signature_denominator_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6392, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.time_signature_enabled_has_listener()', 'description': 'time_signature_enabled_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time_signature_enabled&quot;. C++ signature :  bool time_signature_enabled_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'time_signature_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6394, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.time_signature_numerator_has_listener()', 'description': 'time_signature_numerator_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time_signature_numerator&quot;. C++ signature :  bool time_signature_numerator_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'time_signature_numerator_has_listener()'], 'hierarchy': 3, 'ref_parent': 6288, 'children': [], 'group': 'listener Method'},
{'ref': 6397, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6398, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6399, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6400, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6401, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6402, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_pitch_bend_range_listener()', 'description': 'add_pitch_bend_range_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_bend_range&quot; has changed. C++ signature :  void add_pitch_bend_range_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6403, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_pitch_mode_index_listener()', 'description': 'add_pitch_mode_index_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_mode_index&quot; has changed. C++ signature :  void add_pitch_mode_index_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_pitch_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6404, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6405, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6406, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6407, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6408, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6409, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.pitch_bend_range_has_listener()', 'description': 'pitch_bend_range_has_listener( (ShifterDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_bend_range&quot;. C++ signature :  bool pitch_bend_range_has_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6410, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.pitch_mode_index_has_listener()', 'description': 'pitch_mode_index_has_listener( (ShifterDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_mode_index&quot;. C++ signature :  bool pitch_mode_index_has_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'pitch_mode_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6411, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6412, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6413, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6414, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6415, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6416, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_pitch_bend_range_listener()', 'description': 'remove_pitch_bend_range_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_bend_range&quot;. C++ signature :  void remove_pitch_bend_range_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6417, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_pitch_mode_index_listener()', 'description': 'remove_pitch_mode_index_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_mode_index&quot;. C++ signature :  void remove_pitch_mode_index_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_pitch_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6448, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6449, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6450, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6451, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6452, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6453, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_pitch_bend_range_listener()', 'description': 'add_pitch_bend_range_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_bend_range&quot; has changed. C++ signature :  void add_pitch_bend_range_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6454, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_pitch_mode_index_listener()', 'description': 'add_pitch_mode_index_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_mode_index&quot; has changed. C++ signature :  void add_pitch_mode_index_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_pitch_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6461, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6463, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6465, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6467, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6469, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6471, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.pitch_bend_range_has_listener()', 'description': 'pitch_bend_range_has_listener( (ShifterDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_bend_range&quot;. C++ signature :  bool pitch_bend_range_has_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6473, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.pitch_mode_index_has_listener()', 'description': 'pitch_mode_index_has_listener( (ShifterDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_mode_index&quot;. C++ signature :  bool pitch_mode_index_has_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'pitch_mode_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6475, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6476, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6477, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6478, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6479, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6480, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_pitch_bend_range_listener()', 'description': 'remove_pitch_bend_range_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_bend_range&quot;. C++ signature :  void remove_pitch_bend_range_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6481, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_pitch_mode_index_listener()', 'description': 'remove_pitch_mode_index_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_mode_index&quot;. C++ signature :  void remove_pitch_mode_index_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_pitch_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 6396, 'children': [], 'group': 'listener Method'},
{'ref': 6486, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 6419, 'children': [], 'group': 'listener Method'},
{'ref': 6487, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 6419, 'children': [], 'group': 'listener Method'},
{'ref': 6488, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 6419, 'children': [], 'group': 'listener Method'},
{'ref': 6517, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 6419, 'children': [], 'group': 'listener Method'},
{'ref': 6520, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 6419, 'children': [], 'group': 'listener Method'},
{'ref': 6521, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 6419, 'children': [], 'group': 'listener Method'},
{'ref': 6605, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_can_warp_as_listener()', 'description': 'add_can_warp_as_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_warp_as&quot; has changed. C++ signature :  void add_can_warp_as_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_can_warp_as_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6606, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_can_warp_double_listener()', 'description': 'add_can_warp_double_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_warp_double&quot; has changed. C++ signature :  void add_can_warp_double_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_can_warp_double_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6607, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_can_warp_half_listener()', 'description': 'add_can_warp_half_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_warp_half&quot; has changed. C++ signature :  void add_can_warp_half_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_can_warp_half_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6608, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6609, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6610, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6611, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_multi_sample_mode_listener()', 'description': 'add_multi_sample_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;multi_sample_mode&quot; has changed. C++ signature :  void add_multi_sample_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_multi_sample_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6612, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6613, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_note_pitch_bend_range_listener()', 'description': 'add_note_pitch_bend_range_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;note_pitch_bend_range&quot; has changed. C++ signature :  void add_note_pitch_bend_range_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_note_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6614, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_pad_slicing_listener()', 'description': 'add_pad_slicing_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pad_slicing&quot; has changed. C++ signature :  void add_pad_slicing_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_pad_slicing_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6615, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6616, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_pitch_bend_range_listener()', 'description': 'add_pitch_bend_range_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_bend_range&quot; has changed. C++ signature :  void add_pitch_bend_range_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6617, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_playback_mode_listener()', 'description': 'add_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playback_mode&quot; has changed. C++ signature :  void add_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6618, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_playing_position_enabled_listener()', 'description': 'add_playing_position_enabled_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_position_enabled&quot; has changed. C++ signature :  void add_playing_position_enabled_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_playing_position_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6619, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_playing_position_listener()', 'description': 'add_playing_position_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_position&quot; has changed. C++ signature :  void add_playing_position_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6620, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_retrigger_listener()', 'description': 'add_retrigger_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;retrigger&quot; has changed. C++ signature :  void add_retrigger_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_retrigger_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6621, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_sample_listener()', 'description': 'add_sample_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample&quot; has changed. C++ signature :  void add_sample_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_sample_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6622, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_slicing_playback_mode_listener()', 'description': 'add_slicing_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_playback_mode&quot; has changed. C++ signature :  void add_slicing_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_slicing_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6623, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_voices_listener()', 'description': 'add_voices_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;voices&quot; has changed. C++ signature :  void add_voices_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_voices_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6624, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.can_warp_as_has_listener()', 'description': 'can_warp_as_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_warp_as&quot;. C++ signature :  bool can_warp_as_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'can_warp_as_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6625, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.can_warp_double_has_listener()', 'description': 'can_warp_double_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_warp_double&quot;. C++ signature :  bool can_warp_double_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'can_warp_double_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6626, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.can_warp_half_has_listener()', 'description': 'can_warp_half_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_warp_half&quot;. C++ signature :  bool can_warp_half_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'can_warp_half_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6629, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6630, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6631, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6632, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.multi_sample_mode_has_listener()', 'description': 'multi_sample_mode_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;multi_sample_mode&quot;. C++ signature :  bool multi_sample_mode_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'multi_sample_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6633, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6634, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.note_pitch_bend_range_has_listener()', 'description': 'note_pitch_bend_range_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;note_pitch_bend_range&quot;. C++ signature :  bool note_pitch_bend_range_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'note_pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6635, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.pad_slicing_has_listener()', 'description': 'pad_slicing_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pad_slicing&quot;. C++ signature :  bool pad_slicing_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'pad_slicing_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6636, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6637, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.pitch_bend_range_has_listener()', 'description': 'pitch_bend_range_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_bend_range&quot;. C++ signature :  bool pitch_bend_range_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6638, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.playback_mode_has_listener()', 'description': 'playback_mode_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playback_mode&quot;. C++ signature :  bool playback_mode_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'playback_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6639, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.playing_position_enabled_has_listener()', 'description': 'playing_position_enabled_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_position_enabled&quot;. C++ signature :  bool playing_position_enabled_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'playing_position_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6640, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.playing_position_has_listener()', 'description': 'playing_position_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_position&quot;. C++ signature :  bool playing_position_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'playing_position_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6641, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_can_warp_as_listener()', 'description': 'remove_can_warp_as_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_warp_as&quot;. C++ signature :  void remove_can_warp_as_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_can_warp_as_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6642, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_can_warp_double_listener()', 'description': 'remove_can_warp_double_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_warp_double&quot;. C++ signature :  void remove_can_warp_double_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_can_warp_double_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6643, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_can_warp_half_listener()', 'description': 'remove_can_warp_half_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_warp_half&quot;. C++ signature :  void remove_can_warp_half_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_can_warp_half_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6644, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6645, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6646, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6647, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_multi_sample_mode_listener()', 'description': 'remove_multi_sample_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;multi_sample_mode&quot;. C++ signature :  void remove_multi_sample_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_multi_sample_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6648, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6649, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_note_pitch_bend_range_listener()', 'description': 'remove_note_pitch_bend_range_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;note_pitch_bend_range&quot;. C++ signature :  void remove_note_pitch_bend_range_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_note_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6650, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_pad_slicing_listener()', 'description': 'remove_pad_slicing_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pad_slicing&quot;. C++ signature :  void remove_pad_slicing_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_pad_slicing_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6651, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6652, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_pitch_bend_range_listener()', 'description': 'remove_pitch_bend_range_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_bend_range&quot;. C++ signature :  void remove_pitch_bend_range_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6653, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_playback_mode_listener()', 'description': 'remove_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playback_mode&quot;. C++ signature :  void remove_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6654, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_playing_position_enabled_listener()', 'description': 'remove_playing_position_enabled_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_position_enabled&quot;. C++ signature :  void remove_playing_position_enabled_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_playing_position_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6655, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_playing_position_listener()', 'description': 'remove_playing_position_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_position&quot;. C++ signature :  void remove_playing_position_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6656, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_retrigger_listener()', 'description': 'remove_retrigger_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;retrigger&quot;. C++ signature :  void remove_retrigger_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_retrigger_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6657, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_sample_listener()', 'description': 'remove_sample_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample&quot;. C++ signature :  void remove_sample_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_sample_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6658, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_slicing_playback_mode_listener()', 'description': 'remove_slicing_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_playback_mode&quot;. C++ signature :  void remove_slicing_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_slicing_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6659, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_voices_listener()', 'description': 'remove_voices_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;voices&quot;. C++ signature :  void remove_voices_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_voices_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6660, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.retrigger_has_listener()', 'description': 'retrigger_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;retrigger&quot;. C++ signature :  bool retrigger_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'retrigger_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6662, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.sample_has_listener()', 'description': 'sample_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample&quot;. C++ signature :  bool sample_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'sample_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6663, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.slicing_playback_mode_has_listener()', 'description': 'slicing_playback_mode_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_playback_mode&quot;. C++ signature :  bool slicing_playback_mode_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'slicing_playback_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6665, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.voices_has_listener()', 'description': 'voices_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;voices&quot;. C++ signature :  bool voices_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'voices_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6698, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_can_warp_as_listener()', 'description': 'add_can_warp_as_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_warp_as&quot; has changed. C++ signature :  void add_can_warp_as_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_can_warp_as_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6699, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_can_warp_double_listener()', 'description': 'add_can_warp_double_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_warp_double&quot; has changed. C++ signature :  void add_can_warp_double_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_can_warp_double_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6700, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_can_warp_half_listener()', 'description': 'add_can_warp_half_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_warp_half&quot; has changed. C++ signature :  void add_can_warp_half_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_can_warp_half_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6701, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6702, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6703, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6704, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_multi_sample_mode_listener()', 'description': 'add_multi_sample_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;multi_sample_mode&quot; has changed. C++ signature :  void add_multi_sample_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_multi_sample_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6705, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6706, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_note_pitch_bend_range_listener()', 'description': 'add_note_pitch_bend_range_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;note_pitch_bend_range&quot; has changed. C++ signature :  void add_note_pitch_bend_range_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_note_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6707, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_pad_slicing_listener()', 'description': 'add_pad_slicing_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pad_slicing&quot; has changed. C++ signature :  void add_pad_slicing_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_pad_slicing_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6708, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6709, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_pitch_bend_range_listener()', 'description': 'add_pitch_bend_range_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_bend_range&quot; has changed. C++ signature :  void add_pitch_bend_range_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6710, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_playback_mode_listener()', 'description': 'add_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playback_mode&quot; has changed. C++ signature :  void add_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6711, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_playing_position_enabled_listener()', 'description': 'add_playing_position_enabled_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_position_enabled&quot; has changed. C++ signature :  void add_playing_position_enabled_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_playing_position_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6712, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_playing_position_listener()', 'description': 'add_playing_position_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_position&quot; has changed. C++ signature :  void add_playing_position_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6713, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_retrigger_listener()', 'description': 'add_retrigger_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;retrigger&quot; has changed. C++ signature :  void add_retrigger_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_retrigger_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6714, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_sample_listener()', 'description': 'add_sample_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample&quot; has changed. C++ signature :  void add_sample_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_sample_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6715, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_slicing_playback_mode_listener()', 'description': 'add_slicing_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_playback_mode&quot; has changed. C++ signature :  void add_slicing_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_slicing_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6716, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_voices_listener()', 'description': 'add_voices_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;voices&quot; has changed. C++ signature :  void add_voices_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_voices_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6720, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.can_warp_as_has_listener()', 'description': 'can_warp_as_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_warp_as&quot;. C++ signature :  bool can_warp_as_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'can_warp_as_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6722, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.can_warp_double_has_listener()', 'description': 'can_warp_double_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_warp_double&quot;. C++ signature :  bool can_warp_double_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'can_warp_double_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6724, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.can_warp_half_has_listener()', 'description': 'can_warp_half_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_warp_half&quot;. C++ signature :  bool can_warp_half_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'can_warp_half_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6731, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6733, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6735, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6737, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.multi_sample_mode_has_listener()', 'description': 'multi_sample_mode_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;multi_sample_mode&quot;. C++ signature :  bool multi_sample_mode_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'multi_sample_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6739, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6741, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.note_pitch_bend_range_has_listener()', 'description': 'note_pitch_bend_range_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;note_pitch_bend_range&quot;. C++ signature :  bool note_pitch_bend_range_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'note_pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6743, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.pad_slicing_has_listener()', 'description': 'pad_slicing_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pad_slicing&quot;. C++ signature :  bool pad_slicing_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'pad_slicing_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6745, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6747, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.pitch_bend_range_has_listener()', 'description': 'pitch_bend_range_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_bend_range&quot;. C++ signature :  bool pitch_bend_range_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6749, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.playback_mode_has_listener()', 'description': 'playback_mode_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playback_mode&quot;. C++ signature :  bool playback_mode_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'playback_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6752, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.playing_position_enabled_has_listener()', 'description': 'playing_position_enabled_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_position_enabled&quot;. C++ signature :  bool playing_position_enabled_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'playing_position_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6753, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.playing_position_has_listener()', 'description': 'playing_position_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_position&quot;. C++ signature :  bool playing_position_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'playing_position_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6754, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_can_warp_as_listener()', 'description': 'remove_can_warp_as_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_warp_as&quot;. C++ signature :  void remove_can_warp_as_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_can_warp_as_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6755, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_can_warp_double_listener()', 'description': 'remove_can_warp_double_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_warp_double&quot;. C++ signature :  void remove_can_warp_double_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_can_warp_double_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6756, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_can_warp_half_listener()', 'description': 'remove_can_warp_half_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_warp_half&quot;. C++ signature :  void remove_can_warp_half_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_can_warp_half_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6757, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6758, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6759, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6760, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_multi_sample_mode_listener()', 'description': 'remove_multi_sample_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;multi_sample_mode&quot;. C++ signature :  void remove_multi_sample_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_multi_sample_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6761, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6762, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_note_pitch_bend_range_listener()', 'description': 'remove_note_pitch_bend_range_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;note_pitch_bend_range&quot;. C++ signature :  void remove_note_pitch_bend_range_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_note_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6763, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_pad_slicing_listener()', 'description': 'remove_pad_slicing_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pad_slicing&quot;. C++ signature :  void remove_pad_slicing_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_pad_slicing_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6764, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6765, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_pitch_bend_range_listener()', 'description': 'remove_pitch_bend_range_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_bend_range&quot;. C++ signature :  void remove_pitch_bend_range_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6766, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_playback_mode_listener()', 'description': 'remove_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playback_mode&quot;. C++ signature :  void remove_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6767, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_playing_position_enabled_listener()', 'description': 'remove_playing_position_enabled_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_position_enabled&quot;. C++ signature :  void remove_playing_position_enabled_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_playing_position_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6768, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_playing_position_listener()', 'description': 'remove_playing_position_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_position&quot;. C++ signature :  void remove_playing_position_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6769, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_retrigger_listener()', 'description': 'remove_retrigger_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;retrigger&quot;. C++ signature :  void remove_retrigger_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_retrigger_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6770, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_sample_listener()', 'description': 'remove_sample_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample&quot;. C++ signature :  void remove_sample_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_sample_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6771, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_slicing_playback_mode_listener()', 'description': 'remove_slicing_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_playback_mode&quot;. C++ signature :  void remove_slicing_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_slicing_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6772, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_voices_listener()', 'description': 'remove_voices_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;voices&quot;. C++ signature :  void remove_voices_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_voices_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6774, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.retrigger_has_listener()', 'description': 'retrigger_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;retrigger&quot;. C++ signature :  bool retrigger_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'retrigger_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6777, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.sample_has_listener()', 'description': 'sample_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample&quot;. C++ signature :  bool sample_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'sample_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6779, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.slicing_playback_mode_has_listener()', 'description': 'slicing_playback_mode_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_playback_mode&quot;. C++ signature :  bool slicing_playback_mode_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'slicing_playback_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6784, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.voices_has_listener()', 'description': 'voices_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;voices&quot;. C++ signature :  bool voices_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'voices_has_listener()'], 'hierarchy': 3, 'ref_parent': 6604, 'children': [], 'group': 'listener Method'},
{'ref': 6789, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6790, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_end_listener()', 'description': 'add_sample_end_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_end&quot; has changed. C++ signature :  void add_sample_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_end_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6791, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_env_fade_in_listener()', 'description': 'add_sample_env_fade_in_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_env_fade_in&quot; has changed. C++ signature :  void add_sample_env_fade_in_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_env_fade_in_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6792, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_env_fade_out_listener()', 'description': 'add_sample_env_fade_out_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_env_fade_out&quot; has changed. C++ signature :  void add_sample_env_fade_out_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_env_fade_out_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6793, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_loop_end_listener()', 'description': 'add_sample_loop_end_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_loop_end&quot; has changed. C++ signature :  void add_sample_loop_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_loop_end_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6794, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_loop_fade_listener()', 'description': 'add_sample_loop_fade_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_loop_fade&quot; has changed. C++ signature :  void add_sample_loop_fade_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_loop_fade_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6795, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_loop_start_listener()', 'description': 'add_sample_loop_start_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_loop_start&quot; has changed. C++ signature :  void add_sample_loop_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_loop_start_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6796, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_start_listener()', 'description': 'add_sample_start_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_start&quot; has changed. C++ signature :  void add_sample_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_start_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6797, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_selected_slice_listener()', 'description': 'add_selected_slice_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_slice&quot; has changed. C++ signature :  void add_selected_slice_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_selected_slice_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6798, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6799, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6800, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_end_listener()', 'description': 'remove_sample_end_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_end&quot;. C++ signature :  void remove_sample_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_end_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6801, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_env_fade_in_listener()', 'description': 'remove_sample_env_fade_in_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_env_fade_in&quot;. C++ signature :  void remove_sample_env_fade_in_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_env_fade_in_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6802, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_env_fade_out_listener()', 'description': 'remove_sample_env_fade_out_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_env_fade_out&quot;. C++ signature :  void remove_sample_env_fade_out_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_env_fade_out_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6803, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_loop_end_listener()', 'description': 'remove_sample_loop_end_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_loop_end&quot;. C++ signature :  void remove_sample_loop_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_loop_end_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6804, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_loop_fade_listener()', 'description': 'remove_sample_loop_fade_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_loop_fade&quot;. C++ signature :  void remove_sample_loop_fade_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_loop_fade_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6805, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_loop_start_listener()', 'description': 'remove_sample_loop_start_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_loop_start&quot;. C++ signature :  void remove_sample_loop_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_loop_start_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6806, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_start_listener()', 'description': 'remove_sample_start_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_start&quot;. C++ signature :  void remove_sample_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_start_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6807, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_selected_slice_listener()', 'description': 'remove_selected_slice_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_slice&quot;. C++ signature :  void remove_selected_slice_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_selected_slice_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6808, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_end_has_listener()', 'description': 'sample_end_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_end&quot;. C++ signature :  bool sample_end_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_end_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6809, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_env_fade_in_has_listener()', 'description': 'sample_env_fade_in_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_env_fade_in&quot;. C++ signature :  bool sample_env_fade_in_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_env_fade_in_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6810, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_env_fade_out_has_listener()', 'description': 'sample_env_fade_out_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_env_fade_out&quot;. C++ signature :  bool sample_env_fade_out_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_env_fade_out_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6811, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_loop_end_has_listener()', 'description': 'sample_loop_end_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_loop_end&quot;. C++ signature :  bool sample_loop_end_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_loop_end_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6812, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_loop_fade_has_listener()', 'description': 'sample_loop_fade_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_loop_fade&quot;. C++ signature :  bool sample_loop_fade_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_loop_fade_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6813, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_loop_start_has_listener()', 'description': 'sample_loop_start_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_loop_start&quot;. C++ signature :  bool sample_loop_start_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_loop_start_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6814, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_start_has_listener()', 'description': 'sample_start_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_start&quot;. C++ signature :  bool sample_start_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_start_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6815, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.selected_slice_has_listener()', 'description': 'selected_slice_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_slice&quot;. C++ signature :  bool selected_slice_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'selected_slice_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6844, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6845, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_end_listener()', 'description': 'add_sample_end_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_end&quot; has changed. C++ signature :  void add_sample_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_end_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6846, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_env_fade_in_listener()', 'description': 'add_sample_env_fade_in_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_env_fade_in&quot; has changed. C++ signature :  void add_sample_env_fade_in_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_env_fade_in_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6847, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_env_fade_out_listener()', 'description': 'add_sample_env_fade_out_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_env_fade_out&quot; has changed. C++ signature :  void add_sample_env_fade_out_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_env_fade_out_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6848, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_loop_end_listener()', 'description': 'add_sample_loop_end_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_loop_end&quot; has changed. C++ signature :  void add_sample_loop_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_loop_end_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6849, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_loop_fade_listener()', 'description': 'add_sample_loop_fade_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_loop_fade&quot; has changed. C++ signature :  void add_sample_loop_fade_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_loop_fade_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6850, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_loop_start_listener()', 'description': 'add_sample_loop_start_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_loop_start&quot; has changed. C++ signature :  void add_sample_loop_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_loop_start_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6851, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_start_listener()', 'description': 'add_sample_start_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_start&quot; has changed. C++ signature :  void add_sample_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_start_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6852, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_selected_slice_listener()', 'description': 'add_selected_slice_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_slice&quot; has changed. C++ signature :  void add_selected_slice_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_selected_slice_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6855, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6856, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6857, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_end_listener()', 'description': 'remove_sample_end_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_end&quot;. C++ signature :  void remove_sample_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_end_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6858, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_env_fade_in_listener()', 'description': 'remove_sample_env_fade_in_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_env_fade_in&quot;. C++ signature :  void remove_sample_env_fade_in_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_env_fade_in_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6859, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_env_fade_out_listener()', 'description': 'remove_sample_env_fade_out_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_env_fade_out&quot;. C++ signature :  void remove_sample_env_fade_out_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_env_fade_out_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6860, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_loop_end_listener()', 'description': 'remove_sample_loop_end_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_loop_end&quot;. C++ signature :  void remove_sample_loop_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_loop_end_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6861, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_loop_fade_listener()', 'description': 'remove_sample_loop_fade_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_loop_fade&quot;. C++ signature :  void remove_sample_loop_fade_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_loop_fade_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6862, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_loop_start_listener()', 'description': 'remove_sample_loop_start_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_loop_start&quot;. C++ signature :  void remove_sample_loop_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_loop_start_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6863, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_start_listener()', 'description': 'remove_sample_start_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_start&quot;. C++ signature :  void remove_sample_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_start_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6864, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_selected_slice_listener()', 'description': 'remove_selected_slice_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_slice&quot;. C++ signature :  void remove_selected_slice_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_selected_slice_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6866, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_end_has_listener()', 'description': 'sample_end_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_end&quot;. C++ signature :  bool sample_end_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_end_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6868, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_env_fade_in_has_listener()', 'description': 'sample_env_fade_in_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_env_fade_in&quot;. C++ signature :  bool sample_env_fade_in_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_env_fade_in_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6870, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_env_fade_out_has_listener()', 'description': 'sample_env_fade_out_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_env_fade_out&quot;. C++ signature :  bool sample_env_fade_out_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_env_fade_out_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6872, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_loop_end_has_listener()', 'description': 'sample_loop_end_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_loop_end&quot;. C++ signature :  bool sample_loop_end_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_loop_end_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6874, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_loop_fade_has_listener()', 'description': 'sample_loop_fade_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_loop_fade&quot;. C++ signature :  bool sample_loop_fade_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_loop_fade_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6876, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_loop_start_has_listener()', 'description': 'sample_loop_start_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_loop_start&quot;. C++ signature :  bool sample_loop_start_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_loop_start_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6878, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_start_has_listener()', 'description': 'sample_start_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_start&quot;. C++ signature :  bool sample_start_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_start_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 6880, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.selected_slice_has_listener()', 'description': 'selected_slice_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_slice&quot;. C++ signature :  bool selected_slice_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'selected_slice_has_listener()'], 'hierarchy': 4, 'ref_parent': 6669, 'children': [], 'group': 'listener Method'},
{'ref': 7155, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.add_name_listener()', 'description': 'add_name_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 7154, 'children': [], 'group': 'listener Method'},
{'ref': 7156, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.add_time_listener()', 'description': 'add_time_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time&quot; has changed. C++ signature :  void add_time_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'add_time_listener()'], 'hierarchy': 3, 'ref_parent': 7154, 'children': [], 'group': 'listener Method'},
{'ref': 7158, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.name_has_listener()', 'description': 'name_has_listener( (CuePoint)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 7154, 'children': [], 'group': 'listener Method'},
{'ref': 7159, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.remove_name_listener()', 'description': 'remove_name_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 7154, 'children': [], 'group': 'listener Method'},
{'ref': 7160, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.remove_time_listener()', 'description': 'remove_time_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time&quot;. C++ signature :  void remove_time_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'remove_time_listener()'], 'hierarchy': 3, 'ref_parent': 7154, 'children': [], 'group': 'listener Method'},
{'ref': 7161, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.time_has_listener()', 'description': 'time_has_listener( (CuePoint)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time&quot;. C++ signature :  bool time_has_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'time_has_listener()'], 'hierarchy': 3, 'ref_parent': 7154, 'children': [], 'group': 'listener Method'},
{'ref': 7190, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.add_name_listener()', 'description': 'add_name_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 7154, 'children': [], 'group': 'listener Method'},
{'ref': 7191, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.add_time_listener()', 'description': 'add_time_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time&quot; has changed. C++ signature :  void add_time_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'add_time_listener()'], 'hierarchy': 3, 'ref_parent': 7154, 'children': [], 'group': 'listener Method'},
{'ref': 7195, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.name_has_listener()', 'description': 'name_has_listener( (CuePoint)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 7154, 'children': [], 'group': 'listener Method'},
{'ref': 7196, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.remove_name_listener()', 'description': 'remove_name_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 7154, 'children': [], 'group': 'listener Method'},
{'ref': 7197, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.remove_time_listener()', 'description': 'remove_time_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time&quot;. C++ signature :  void remove_time_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'remove_time_listener()'], 'hierarchy': 3, 'ref_parent': 7154, 'children': [], 'group': 'listener Method'},
{'ref': 7199, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.time_has_listener()', 'description': 'time_has_listener( (CuePoint)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time&quot;. C++ signature :  bool time_has_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'time_has_listener()'], 'hierarchy': 3, 'ref_parent': 7154, 'children': [], 'group': 'listener Method'},
{'ref': 7490, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_appointed_device_listener()', 'description': 'add_appointed_device_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;appointed_device&quot; has changed. C++ signature :  void add_appointed_device_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_appointed_device_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7491, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_arrangement_overdub_listener()', 'description': 'add_arrangement_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;arrangement_overdub&quot; has changed. C++ signature :  void add_arrangement_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_arrangement_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7492, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_back_to_arranger_listener()', 'description': 'add_back_to_arranger_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;back_to_arranger&quot; has changed. C++ signature :  void add_back_to_arranger_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_back_to_arranger_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7493, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_can_capture_midi_listener()', 'description': 'add_can_capture_midi_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_capture_midi&quot; has changed. C++ signature :  void add_can_capture_midi_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_can_capture_midi_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7494, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_can_jump_to_next_cue_listener()', 'description': 'add_can_jump_to_next_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_jump_to_next_cue&quot; has changed. C++ signature :  void add_can_jump_to_next_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_can_jump_to_next_cue_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7495, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_can_jump_to_prev_cue_listener()', 'description': 'add_can_jump_to_prev_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_jump_to_prev_cue&quot; has changed. C++ signature :  void add_can_jump_to_prev_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_can_jump_to_prev_cue_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7496, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_clip_trigger_quantization_listener()', 'description': 'add_clip_trigger_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;clip_trigger_quantization&quot; has changed. C++ signature :  void add_clip_trigger_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_clip_trigger_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7497, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_count_in_duration_listener()', 'description': 'add_count_in_duration_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;count_in_duration&quot; has changed. C++ signature :  void add_count_in_duration_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_count_in_duration_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7498, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_cue_points_listener()', 'description': 'add_cue_points_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;cue_points&quot; has changed. C++ signature :  void add_cue_points_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_cue_points_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7499, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_current_song_time_listener()', 'description': 'add_current_song_time_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_song_time&quot; has changed. C++ signature :  void add_current_song_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_current_song_time_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7500, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_data_listener()', 'description': 'add_data_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;data&quot; has changed. C++ signature :  void add_data_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_data_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7501, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_exclusive_arm_listener()', 'description': 'add_exclusive_arm_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;exclusive_arm&quot; has changed. C++ signature :  void add_exclusive_arm_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_exclusive_arm_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7502, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_groove_amount_listener()', 'description': 'add_groove_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;groove_amount&quot; has changed. C++ signature :  void add_groove_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_groove_amount_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7503, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_ableton_link_enabled_listener()', 'description': 'add_is_ableton_link_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_ableton_link_enabled&quot; has changed. C++ signature :  void add_is_ableton_link_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_ableton_link_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7504, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_ableton_link_start_stop_sync_enabled_listener()', 'description': 'add_is_ableton_link_start_stop_sync_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_ableton_link_start_stop_sync_enabled&quot; has changed. C++ signature :  void add_is_ableton_link_start_stop_sync_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_ableton_link_start_stop_sync_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7505, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_counting_in_listener()', 'description': 'add_is_counting_in_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_counting_in&quot; has changed. C++ signature :  void add_is_counting_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_counting_in_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7506, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_playing_listener()', 'description': 'add_is_playing_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_playing&quot; has changed. C++ signature :  void add_is_playing_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_playing_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7507, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_loop_length_listener()', 'description': 'add_loop_length_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_length&quot; has changed. C++ signature :  void add_loop_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_loop_length_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7508, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_loop_listener()', 'description': 'add_loop_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop&quot; has changed. C++ signature :  void add_loop_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_loop_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7509, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_loop_start_listener()', 'description': 'add_loop_start_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_start&quot; has changed. C++ signature :  void add_loop_start_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7510, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_metronome_listener()', 'description': 'add_metronome_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;metronome&quot; has changed. C++ signature :  void add_metronome_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_metronome_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7511, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_midi_recording_quantization_listener()', 'description': 'add_midi_recording_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_recording_quantization&quot; has changed. C++ signature :  void add_midi_recording_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_midi_recording_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7512, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_nudge_down_listener()', 'description': 'add_nudge_down_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;nudge_down&quot; has changed. C++ signature :  void add_nudge_down_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_nudge_down_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7513, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_nudge_up_listener()', 'description': 'add_nudge_up_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;nudge_up&quot; has changed. C++ signature :  void add_nudge_up_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_nudge_up_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7514, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_overdub_listener()', 'description': 'add_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;overdub&quot; has changed. C++ signature :  void add_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7515, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_punch_in_listener()', 'description': 'add_punch_in_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;punch_in&quot; has changed. C++ signature :  void add_punch_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_punch_in_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7516, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_punch_out_listener()', 'description': 'add_punch_out_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;punch_out&quot; has changed. C++ signature :  void add_punch_out_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_punch_out_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7517, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_re_enable_automation_enabled_listener()', 'description': 'add_re_enable_automation_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;re_enable_automation_enabled&quot; has changed. C++ signature :  void add_re_enable_automation_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_re_enable_automation_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7518, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_record_mode_listener()', 'description': 'add_record_mode_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;record_mode&quot; has changed. C++ signature :  void add_record_mode_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_record_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7519, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_return_tracks_listener()', 'description': 'add_return_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;return_tracks&quot; has changed. C++ signature :  void add_return_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_return_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7520, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_root_note_listener()', 'description': 'add_root_note_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;root_note&quot; has changed. C++ signature :  void add_root_note_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_root_note_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7521, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_scale_intervals_listener()', 'description': 'add_scale_intervals_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;scale_intervals&quot; has changed. C++ signature :  void add_scale_intervals_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_scale_intervals_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7522, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_scale_name_listener()', 'description': 'add_scale_name_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;scale_name&quot; has changed. C++ signature :  void add_scale_name_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_scale_name_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7523, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_scenes_listener()', 'description': 'add_scenes_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;scenes&quot; has changed. C++ signature :  void add_scenes_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_scenes_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7524, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_session_automation_record_listener()', 'description': 'add_session_automation_record_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;session_automation_record&quot; has changed. C++ signature :  void add_session_automation_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_session_automation_record_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7525, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_session_record_listener()', 'description': 'add_session_record_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;session_record&quot; has changed. C++ signature :  void add_session_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_session_record_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7526, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_session_record_status_listener()', 'description': 'add_session_record_status_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;session_record_status&quot; has changed. C++ signature :  void add_session_record_status_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_session_record_status_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7527, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_signature_denominator_listener()', 'description': 'add_signature_denominator_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_denominator&quot; has changed. C++ signature :  void add_signature_denominator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7528, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_signature_numerator_listener()', 'description': 'add_signature_numerator_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_numerator&quot; has changed. C++ signature :  void add_signature_numerator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7529, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_song_length_listener()', 'description': 'add_song_length_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;song_length&quot; has changed. C++ signature :  void add_song_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_song_length_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7530, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_start_time_listener()', 'description': 'add_start_time_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;start_time&quot; has changed. C++ signature :  void add_start_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_start_time_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7531, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_swing_amount_listener()', 'description': 'add_swing_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;swing_amount&quot; has changed. C++ signature :  void add_swing_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_swing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7532, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tempo_follower_enabled_listener()', 'description': 'add_tempo_follower_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo_follower_enabled&quot; has changed. C++ signature :  void add_tempo_follower_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tempo_follower_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7533, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tempo_listener()', 'description': 'add_tempo_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo&quot; has changed. C++ signature :  void add_tempo_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7534, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tracks_listener()', 'description': 'add_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tracks&quot; has changed. C++ signature :  void add_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7535, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tuning_system_listener()', 'description': 'add_tuning_system_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tuning_system&quot; has changed. C++ signature :  void add_tuning_system_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tuning_system_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7536, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_visible_tracks_listener()', 'description': 'add_visible_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_tracks&quot; has changed. C++ signature :  void add_visible_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_visible_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7537, 'tag': 'listener Method', 'name': 'Live.Song.Song.appointed_device_has_listener()', 'description': 'appointed_device_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;appointed_device&quot;. C++ signature :  bool appointed_device_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'appointed_device_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7538, 'tag': 'listener Method', 'name': 'Live.Song.Song.arrangement_overdub_has_listener()', 'description': 'arrangement_overdub_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;arrangement_overdub&quot;. C++ signature :  bool arrangement_overdub_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'arrangement_overdub_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7539, 'tag': 'listener Method', 'name': 'Live.Song.Song.back_to_arranger_has_listener()', 'description': 'back_to_arranger_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;back_to_arranger&quot;. C++ signature :  bool back_to_arranger_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'back_to_arranger_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7541, 'tag': 'listener Method', 'name': 'Live.Song.Song.can_capture_midi_has_listener()', 'description': 'can_capture_midi_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_capture_midi&quot;. C++ signature :  bool can_capture_midi_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'can_capture_midi_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7542, 'tag': 'listener Method', 'name': 'Live.Song.Song.can_jump_to_next_cue_has_listener()', 'description': 'can_jump_to_next_cue_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_jump_to_next_cue&quot;. C++ signature :  bool can_jump_to_next_cue_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'can_jump_to_next_cue_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7543, 'tag': 'listener Method', 'name': 'Live.Song.Song.can_jump_to_prev_cue_has_listener()', 'description': 'can_jump_to_prev_cue_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_jump_to_prev_cue&quot;. C++ signature :  bool can_jump_to_prev_cue_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'can_jump_to_prev_cue_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7546, 'tag': 'listener Method', 'name': 'Live.Song.Song.clip_trigger_quantization_has_listener()', 'description': 'clip_trigger_quantization_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;clip_trigger_quantization&quot;. C++ signature :  bool clip_trigger_quantization_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'clip_trigger_quantization_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7548, 'tag': 'listener Method', 'name': 'Live.Song.Song.count_in_duration_has_listener()', 'description': 'count_in_duration_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;count_in_duration&quot;. C++ signature :  bool count_in_duration_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'count_in_duration_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7553, 'tag': 'listener Method', 'name': 'Live.Song.Song.cue_points_has_listener()', 'description': 'cue_points_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;cue_points&quot;. C++ signature :  bool cue_points_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'cue_points_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7554, 'tag': 'listener Method', 'name': 'Live.Song.Song.current_song_time_has_listener()', 'description': 'current_song_time_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_song_time&quot;. C++ signature :  bool current_song_time_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'current_song_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7555, 'tag': 'listener Method', 'name': 'Live.Song.Song.data_has_listener()', 'description': 'data_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;data&quot;. C++ signature :  bool data_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'data_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7562, 'tag': 'listener Method', 'name': 'Live.Song.Song.exclusive_arm_has_listener()', 'description': 'exclusive_arm_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;exclusive_arm&quot;. C++ signature :  bool exclusive_arm_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'exclusive_arm_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7570, 'tag': 'listener Method', 'name': 'Live.Song.Song.groove_amount_has_listener()', 'description': 'groove_amount_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;groove_amount&quot;. C++ signature :  bool groove_amount_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'groove_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7571, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_ableton_link_enabled_has_listener()', 'description': 'is_ableton_link_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_ableton_link_enabled&quot;. C++ signature :  bool is_ableton_link_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_ableton_link_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7572, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_ableton_link_start_stop_sync_enabled_has_listener()', 'description': 'is_ableton_link_start_stop_sync_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_ableton_link_start_stop_sync_enabled&quot;. C++ signature :  bool is_ableton_link_start_stop_sync_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_ableton_link_start_stop_sync_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7573, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_counting_in_has_listener()', 'description': 'is_counting_in_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_counting_in&quot;. C++ signature :  bool is_counting_in_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_counting_in_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7575, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_playing_has_listener()', 'description': 'is_playing_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_playing&quot;. C++ signature :  bool is_playing_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_playing_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7579, 'tag': 'listener Method', 'name': 'Live.Song.Song.loop_has_listener()', 'description': 'loop_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop&quot;. C++ signature :  bool loop_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'loop_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7580, 'tag': 'listener Method', 'name': 'Live.Song.Song.loop_length_has_listener()', 'description': 'loop_length_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_length&quot;. C++ signature :  bool loop_length_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'loop_length_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7581, 'tag': 'listener Method', 'name': 'Live.Song.Song.loop_start_has_listener()', 'description': 'loop_start_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_start&quot;. C++ signature :  bool loop_start_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'loop_start_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7582, 'tag': 'listener Method', 'name': 'Live.Song.Song.metronome_has_listener()', 'description': 'metronome_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;metronome&quot;. C++ signature :  bool metronome_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'metronome_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7583, 'tag': 'listener Method', 'name': 'Live.Song.Song.midi_recording_quantization_has_listener()', 'description': 'midi_recording_quantization_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_recording_quantization&quot;. C++ signature :  bool midi_recording_quantization_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'midi_recording_quantization_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7585, 'tag': 'listener Method', 'name': 'Live.Song.Song.nudge_down_has_listener()', 'description': 'nudge_down_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;nudge_down&quot;. C++ signature :  bool nudge_down_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'nudge_down_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7586, 'tag': 'listener Method', 'name': 'Live.Song.Song.nudge_up_has_listener()', 'description': 'nudge_up_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;nudge_up&quot;. C++ signature :  bool nudge_up_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'nudge_up_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7587, 'tag': 'listener Method', 'name': 'Live.Song.Song.overdub_has_listener()', 'description': 'overdub_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;overdub&quot;. C++ signature :  bool overdub_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'overdub_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7589, 'tag': 'listener Method', 'name': 'Live.Song.Song.punch_in_has_listener()', 'description': 'punch_in_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;punch_in&quot;. C++ signature :  bool punch_in_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'punch_in_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7590, 'tag': 'listener Method', 'name': 'Live.Song.Song.punch_out_has_listener()', 'description': 'punch_out_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;punch_out&quot;. C++ signature :  bool punch_out_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'punch_out_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7592, 'tag': 'listener Method', 'name': 'Live.Song.Song.re_enable_automation_enabled_has_listener()', 'description': 're_enable_automation_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;re_enable_automation_enabled&quot;. C++ signature :  bool re_enable_automation_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 're_enable_automation_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7593, 'tag': 'listener Method', 'name': 'Live.Song.Song.record_mode_has_listener()', 'description': 'record_mode_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;record_mode&quot;. C++ signature :  bool record_mode_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'record_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7595, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_appointed_device_listener()', 'description': 'remove_appointed_device_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;appointed_device&quot;. C++ signature :  void remove_appointed_device_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_appointed_device_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7596, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_arrangement_overdub_listener()', 'description': 'remove_arrangement_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;arrangement_overdub&quot;. C++ signature :  void remove_arrangement_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_arrangement_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7597, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_back_to_arranger_listener()', 'description': 'remove_back_to_arranger_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;back_to_arranger&quot;. C++ signature :  void remove_back_to_arranger_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_back_to_arranger_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7598, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_can_capture_midi_listener()', 'description': 'remove_can_capture_midi_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_capture_midi&quot;. C++ signature :  void remove_can_capture_midi_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_can_capture_midi_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7599, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_can_jump_to_next_cue_listener()', 'description': 'remove_can_jump_to_next_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_jump_to_next_cue&quot;. C++ signature :  void remove_can_jump_to_next_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_can_jump_to_next_cue_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7600, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_can_jump_to_prev_cue_listener()', 'description': 'remove_can_jump_to_prev_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_jump_to_prev_cue&quot;. C++ signature :  void remove_can_jump_to_prev_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_can_jump_to_prev_cue_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7601, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_clip_trigger_quantization_listener()', 'description': 'remove_clip_trigger_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;clip_trigger_quantization&quot;. C++ signature :  void remove_clip_trigger_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_clip_trigger_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7602, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_count_in_duration_listener()', 'description': 'remove_count_in_duration_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;count_in_duration&quot;. C++ signature :  void remove_count_in_duration_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_count_in_duration_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7603, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_cue_points_listener()', 'description': 'remove_cue_points_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;cue_points&quot;. C++ signature :  void remove_cue_points_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_cue_points_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7604, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_current_song_time_listener()', 'description': 'remove_current_song_time_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_song_time&quot;. C++ signature :  void remove_current_song_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_current_song_time_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7605, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_data_listener()', 'description': 'remove_data_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;data&quot;. C++ signature :  void remove_data_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_data_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7606, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_exclusive_arm_listener()', 'description': 'remove_exclusive_arm_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;exclusive_arm&quot;. C++ signature :  void remove_exclusive_arm_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_exclusive_arm_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7607, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_groove_amount_listener()', 'description': 'remove_groove_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;groove_amount&quot;. C++ signature :  void remove_groove_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_groove_amount_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7608, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_ableton_link_enabled_listener()', 'description': 'remove_is_ableton_link_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_ableton_link_enabled&quot;. C++ signature :  void remove_is_ableton_link_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_ableton_link_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7609, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_ableton_link_start_stop_sync_enabled_listener()', 'description': 'remove_is_ableton_link_start_stop_sync_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_ableton_link_start_stop_sync_enabled&quot;. C++ signature :  void remove_is_ableton_link_start_stop_sync_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_ableton_link_start_stop_sync_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7610, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_counting_in_listener()', 'description': 'remove_is_counting_in_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_counting_in&quot;. C++ signature :  void remove_is_counting_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_counting_in_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7611, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_playing_listener()', 'description': 'remove_is_playing_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_playing&quot;. C++ signature :  void remove_is_playing_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_playing_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7612, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_loop_length_listener()', 'description': 'remove_loop_length_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_length&quot;. C++ signature :  void remove_loop_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_loop_length_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7613, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_loop_listener()', 'description': 'remove_loop_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop&quot;. C++ signature :  void remove_loop_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_loop_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7614, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_loop_start_listener()', 'description': 'remove_loop_start_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_start&quot;. C++ signature :  void remove_loop_start_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7615, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_metronome_listener()', 'description': 'remove_metronome_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;metronome&quot;. C++ signature :  void remove_metronome_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_metronome_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7616, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_midi_recording_quantization_listener()', 'description': 'remove_midi_recording_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_recording_quantization&quot;. C++ signature :  void remove_midi_recording_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_midi_recording_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7617, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_nudge_down_listener()', 'description': 'remove_nudge_down_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;nudge_down&quot;. C++ signature :  void remove_nudge_down_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_nudge_down_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7618, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_nudge_up_listener()', 'description': 'remove_nudge_up_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;nudge_up&quot;. C++ signature :  void remove_nudge_up_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_nudge_up_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7619, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_overdub_listener()', 'description': 'remove_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;overdub&quot;. C++ signature :  void remove_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7620, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_punch_in_listener()', 'description': 'remove_punch_in_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;punch_in&quot;. C++ signature :  void remove_punch_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_punch_in_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7621, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_punch_out_listener()', 'description': 'remove_punch_out_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;punch_out&quot;. C++ signature :  void remove_punch_out_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_punch_out_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7622, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_re_enable_automation_enabled_listener()', 'description': 'remove_re_enable_automation_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;re_enable_automation_enabled&quot;. C++ signature :  void remove_re_enable_automation_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_re_enable_automation_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7623, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_record_mode_listener()', 'description': 'remove_record_mode_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;record_mode&quot;. C++ signature :  void remove_record_mode_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_record_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7624, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_return_tracks_listener()', 'description': 'remove_return_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;return_tracks&quot;. C++ signature :  void remove_return_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_return_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7625, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_root_note_listener()', 'description': 'remove_root_note_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;root_note&quot;. C++ signature :  void remove_root_note_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_root_note_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7626, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_scale_intervals_listener()', 'description': 'remove_scale_intervals_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;scale_intervals&quot;. C++ signature :  void remove_scale_intervals_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_scale_intervals_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7627, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_scale_name_listener()', 'description': 'remove_scale_name_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;scale_name&quot;. C++ signature :  void remove_scale_name_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_scale_name_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7628, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_scenes_listener()', 'description': 'remove_scenes_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;scenes&quot;. C++ signature :  void remove_scenes_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_scenes_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7629, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_session_automation_record_listener()', 'description': 'remove_session_automation_record_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;session_automation_record&quot;. C++ signature :  void remove_session_automation_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_session_automation_record_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7630, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_session_record_listener()', 'description': 'remove_session_record_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;session_record&quot;. C++ signature :  void remove_session_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_session_record_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7631, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_session_record_status_listener()', 'description': 'remove_session_record_status_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;session_record_status&quot;. C++ signature :  void remove_session_record_status_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_session_record_status_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7632, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_signature_denominator_listener()', 'description': 'remove_signature_denominator_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_denominator&quot;. C++ signature :  void remove_signature_denominator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7633, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_signature_numerator_listener()', 'description': 'remove_signature_numerator_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_numerator&quot;. C++ signature :  void remove_signature_numerator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7634, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_song_length_listener()', 'description': 'remove_song_length_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;song_length&quot;. C++ signature :  void remove_song_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_song_length_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7635, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_start_time_listener()', 'description': 'remove_start_time_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;start_time&quot;. C++ signature :  void remove_start_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_start_time_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7636, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_swing_amount_listener()', 'description': 'remove_swing_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;swing_amount&quot;. C++ signature :  void remove_swing_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_swing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7637, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tempo_follower_enabled_listener()', 'description': 'remove_tempo_follower_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo_follower_enabled&quot;. C++ signature :  void remove_tempo_follower_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tempo_follower_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7638, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tempo_listener()', 'description': 'remove_tempo_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo&quot;. C++ signature :  void remove_tempo_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7639, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tracks_listener()', 'description': 'remove_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tracks&quot;. C++ signature :  void remove_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7640, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tuning_system_listener()', 'description': 'remove_tuning_system_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tuning_system&quot;. C++ signature :  void remove_tuning_system_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tuning_system_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7641, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_visible_tracks_listener()', 'description': 'remove_visible_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_tracks&quot;. C++ signature :  void remove_visible_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_visible_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7642, 'tag': 'listener Method', 'name': 'Live.Song.Song.return_tracks_has_listener()', 'description': 'return_tracks_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;return_tracks&quot;. C++ signature :  bool return_tracks_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'return_tracks_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7643, 'tag': 'listener Method', 'name': 'Live.Song.Song.root_note_has_listener()', 'description': 'root_note_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;root_note&quot;. C++ signature :  bool root_note_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'root_note_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7644, 'tag': 'listener Method', 'name': 'Live.Song.Song.scale_intervals_has_listener()', 'description': 'scale_intervals_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;scale_intervals&quot;. C++ signature :  bool scale_intervals_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'scale_intervals_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7645, 'tag': 'listener Method', 'name': 'Live.Song.Song.scale_name_has_listener()', 'description': 'scale_name_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;scale_name&quot;. C++ signature :  bool scale_name_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'scale_name_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7646, 'tag': 'listener Method', 'name': 'Live.Song.Song.scenes_has_listener()', 'description': 'scenes_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;scenes&quot;. C++ signature :  bool scenes_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'scenes_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7648, 'tag': 'listener Method', 'name': 'Live.Song.Song.session_automation_record_has_listener()', 'description': 'session_automation_record_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;session_automation_record&quot;. C++ signature :  bool session_automation_record_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'session_automation_record_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7649, 'tag': 'listener Method', 'name': 'Live.Song.Song.session_record_has_listener()', 'description': 'session_record_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;session_record&quot;. C++ signature :  bool session_record_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'session_record_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7650, 'tag': 'listener Method', 'name': 'Live.Song.Song.session_record_status_has_listener()', 'description': 'session_record_status_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;session_record_status&quot;. C++ signature :  bool session_record_status_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'session_record_status_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7653, 'tag': 'listener Method', 'name': 'Live.Song.Song.signature_denominator_has_listener()', 'description': 'signature_denominator_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_denominator&quot;. C++ signature :  bool signature_denominator_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'signature_denominator_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7654, 'tag': 'listener Method', 'name': 'Live.Song.Song.signature_numerator_has_listener()', 'description': 'signature_numerator_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_numerator&quot;. C++ signature :  bool signature_numerator_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'signature_numerator_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7655, 'tag': 'listener Method', 'name': 'Live.Song.Song.song_length_has_listener()', 'description': 'song_length_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;song_length&quot;. C++ signature :  bool song_length_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'song_length_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7657, 'tag': 'listener Method', 'name': 'Live.Song.Song.start_time_has_listener()', 'description': 'start_time_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;start_time&quot;. C++ signature :  bool start_time_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'start_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7660, 'tag': 'listener Method', 'name': 'Live.Song.Song.swing_amount_has_listener()', 'description': 'swing_amount_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;swing_amount&quot;. C++ signature :  bool swing_amount_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'swing_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7662, 'tag': 'listener Method', 'name': 'Live.Song.Song.tempo_follower_enabled_has_listener()', 'description': 'tempo_follower_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo_follower_enabled&quot;. C++ signature :  bool tempo_follower_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tempo_follower_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7663, 'tag': 'listener Method', 'name': 'Live.Song.Song.tempo_has_listener()', 'description': 'tempo_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo&quot;. C++ signature :  bool tempo_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tempo_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7664, 'tag': 'listener Method', 'name': 'Live.Song.Song.tracks_has_listener()', 'description': 'tracks_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tracks&quot;. C++ signature :  bool tracks_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tracks_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7666, 'tag': 'listener Method', 'name': 'Live.Song.Song.tuning_system_has_listener()', 'description': 'tuning_system_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tuning_system&quot;. C++ signature :  bool tuning_system_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tuning_system_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7668, 'tag': 'listener Method', 'name': 'Live.Song.Song.visible_tracks_has_listener()', 'description': 'visible_tracks_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_tracks&quot;. C++ signature :  bool visible_tracks_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'visible_tracks_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7698, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_appointed_device_listener()', 'description': 'add_appointed_device_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;appointed_device&quot; has changed. C++ signature :  void add_appointed_device_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_appointed_device_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7699, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_arrangement_overdub_listener()', 'description': 'add_arrangement_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;arrangement_overdub&quot; has changed. C++ signature :  void add_arrangement_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_arrangement_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7700, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_back_to_arranger_listener()', 'description': 'add_back_to_arranger_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;back_to_arranger&quot; has changed. C++ signature :  void add_back_to_arranger_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_back_to_arranger_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7701, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_can_capture_midi_listener()', 'description': 'add_can_capture_midi_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_capture_midi&quot; has changed. C++ signature :  void add_can_capture_midi_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_can_capture_midi_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7702, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_can_jump_to_next_cue_listener()', 'description': 'add_can_jump_to_next_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_jump_to_next_cue&quot; has changed. C++ signature :  void add_can_jump_to_next_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_can_jump_to_next_cue_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7703, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_can_jump_to_prev_cue_listener()', 'description': 'add_can_jump_to_prev_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_jump_to_prev_cue&quot; has changed. C++ signature :  void add_can_jump_to_prev_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_can_jump_to_prev_cue_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7704, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_clip_trigger_quantization_listener()', 'description': 'add_clip_trigger_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;clip_trigger_quantization&quot; has changed. C++ signature :  void add_clip_trigger_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_clip_trigger_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7705, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_count_in_duration_listener()', 'description': 'add_count_in_duration_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;count_in_duration&quot; has changed. C++ signature :  void add_count_in_duration_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_count_in_duration_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7706, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_cue_points_listener()', 'description': 'add_cue_points_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;cue_points&quot; has changed. C++ signature :  void add_cue_points_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_cue_points_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7707, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_current_song_time_listener()', 'description': 'add_current_song_time_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_song_time&quot; has changed. C++ signature :  void add_current_song_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_current_song_time_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7708, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_data_listener()', 'description': 'add_data_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;data&quot; has changed. C++ signature :  void add_data_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_data_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7709, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_exclusive_arm_listener()', 'description': 'add_exclusive_arm_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;exclusive_arm&quot; has changed. C++ signature :  void add_exclusive_arm_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_exclusive_arm_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7710, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_groove_amount_listener()', 'description': 'add_groove_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;groove_amount&quot; has changed. C++ signature :  void add_groove_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_groove_amount_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7711, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_ableton_link_enabled_listener()', 'description': 'add_is_ableton_link_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_ableton_link_enabled&quot; has changed. C++ signature :  void add_is_ableton_link_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_ableton_link_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7712, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_ableton_link_start_stop_sync_enabled_listener()', 'description': 'add_is_ableton_link_start_stop_sync_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_ableton_link_start_stop_sync_enabled&quot; has changed. C++ signature :  void add_is_ableton_link_start_stop_sync_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_ableton_link_start_stop_sync_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7713, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_counting_in_listener()', 'description': 'add_is_counting_in_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_counting_in&quot; has changed. C++ signature :  void add_is_counting_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_counting_in_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7714, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_playing_listener()', 'description': 'add_is_playing_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_playing&quot; has changed. C++ signature :  void add_is_playing_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_playing_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7715, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_loop_length_listener()', 'description': 'add_loop_length_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_length&quot; has changed. C++ signature :  void add_loop_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_loop_length_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7716, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_loop_listener()', 'description': 'add_loop_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop&quot; has changed. C++ signature :  void add_loop_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_loop_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7717, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_loop_start_listener()', 'description': 'add_loop_start_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_start&quot; has changed. C++ signature :  void add_loop_start_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7718, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_metronome_listener()', 'description': 'add_metronome_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;metronome&quot; has changed. C++ signature :  void add_metronome_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_metronome_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7719, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_midi_recording_quantization_listener()', 'description': 'add_midi_recording_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_recording_quantization&quot; has changed. C++ signature :  void add_midi_recording_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_midi_recording_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7720, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_nudge_down_listener()', 'description': 'add_nudge_down_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;nudge_down&quot; has changed. C++ signature :  void add_nudge_down_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_nudge_down_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7721, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_nudge_up_listener()', 'description': 'add_nudge_up_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;nudge_up&quot; has changed. C++ signature :  void add_nudge_up_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_nudge_up_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7722, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_overdub_listener()', 'description': 'add_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;overdub&quot; has changed. C++ signature :  void add_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7723, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_punch_in_listener()', 'description': 'add_punch_in_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;punch_in&quot; has changed. C++ signature :  void add_punch_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_punch_in_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7724, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_punch_out_listener()', 'description': 'add_punch_out_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;punch_out&quot; has changed. C++ signature :  void add_punch_out_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_punch_out_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7725, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_re_enable_automation_enabled_listener()', 'description': 'add_re_enable_automation_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;re_enable_automation_enabled&quot; has changed. C++ signature :  void add_re_enable_automation_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_re_enable_automation_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7726, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_record_mode_listener()', 'description': 'add_record_mode_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;record_mode&quot; has changed. C++ signature :  void add_record_mode_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_record_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7727, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_return_tracks_listener()', 'description': 'add_return_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;return_tracks&quot; has changed. C++ signature :  void add_return_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_return_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7728, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_root_note_listener()', 'description': 'add_root_note_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;root_note&quot; has changed. C++ signature :  void add_root_note_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_root_note_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7729, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_scale_intervals_listener()', 'description': 'add_scale_intervals_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;scale_intervals&quot; has changed. C++ signature :  void add_scale_intervals_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_scale_intervals_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7730, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_scale_name_listener()', 'description': 'add_scale_name_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;scale_name&quot; has changed. C++ signature :  void add_scale_name_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_scale_name_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7731, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_scenes_listener()', 'description': 'add_scenes_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;scenes&quot; has changed. C++ signature :  void add_scenes_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_scenes_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7732, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_session_automation_record_listener()', 'description': 'add_session_automation_record_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;session_automation_record&quot; has changed. C++ signature :  void add_session_automation_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_session_automation_record_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7733, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_session_record_listener()', 'description': 'add_session_record_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;session_record&quot; has changed. C++ signature :  void add_session_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_session_record_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7734, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_session_record_status_listener()', 'description': 'add_session_record_status_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;session_record_status&quot; has changed. C++ signature :  void add_session_record_status_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_session_record_status_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7735, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_signature_denominator_listener()', 'description': 'add_signature_denominator_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_denominator&quot; has changed. C++ signature :  void add_signature_denominator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7736, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_signature_numerator_listener()', 'description': 'add_signature_numerator_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_numerator&quot; has changed. C++ signature :  void add_signature_numerator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7737, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_song_length_listener()', 'description': 'add_song_length_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;song_length&quot; has changed. C++ signature :  void add_song_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_song_length_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7738, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_start_time_listener()', 'description': 'add_start_time_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;start_time&quot; has changed. C++ signature :  void add_start_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_start_time_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7739, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_swing_amount_listener()', 'description': 'add_swing_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;swing_amount&quot; has changed. C++ signature :  void add_swing_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_swing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7740, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tempo_follower_enabled_listener()', 'description': 'add_tempo_follower_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo_follower_enabled&quot; has changed. C++ signature :  void add_tempo_follower_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tempo_follower_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7741, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tempo_listener()', 'description': 'add_tempo_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo&quot; has changed. C++ signature :  void add_tempo_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7742, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tracks_listener()', 'description': 'add_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tracks&quot; has changed. C++ signature :  void add_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7743, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tuning_system_listener()', 'description': 'add_tuning_system_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tuning_system&quot; has changed. C++ signature :  void add_tuning_system_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tuning_system_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7744, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_visible_tracks_listener()', 'description': 'add_visible_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_tracks&quot; has changed. C++ signature :  void add_visible_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_visible_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7746, 'tag': 'listener Method', 'name': 'Live.Song.Song.appointed_device_has_listener()', 'description': 'appointed_device_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;appointed_device&quot;. C++ signature :  bool appointed_device_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'appointed_device_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7748, 'tag': 'listener Method', 'name': 'Live.Song.Song.arrangement_overdub_has_listener()', 'description': 'arrangement_overdub_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;arrangement_overdub&quot;. C++ signature :  bool arrangement_overdub_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'arrangement_overdub_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7750, 'tag': 'listener Method', 'name': 'Live.Song.Song.back_to_arranger_has_listener()', 'description': 'back_to_arranger_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;back_to_arranger&quot;. C++ signature :  bool back_to_arranger_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'back_to_arranger_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7753, 'tag': 'listener Method', 'name': 'Live.Song.Song.can_capture_midi_has_listener()', 'description': 'can_capture_midi_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_capture_midi&quot;. C++ signature :  bool can_capture_midi_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'can_capture_midi_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7755, 'tag': 'listener Method', 'name': 'Live.Song.Song.can_jump_to_next_cue_has_listener()', 'description': 'can_jump_to_next_cue_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_jump_to_next_cue&quot;. C++ signature :  bool can_jump_to_next_cue_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'can_jump_to_next_cue_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7757, 'tag': 'listener Method', 'name': 'Live.Song.Song.can_jump_to_prev_cue_has_listener()', 'description': 'can_jump_to_prev_cue_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_jump_to_prev_cue&quot;. C++ signature :  bool can_jump_to_prev_cue_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'can_jump_to_prev_cue_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7764, 'tag': 'listener Method', 'name': 'Live.Song.Song.clip_trigger_quantization_has_listener()', 'description': 'clip_trigger_quantization_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;clip_trigger_quantization&quot;. C++ signature :  bool clip_trigger_quantization_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'clip_trigger_quantization_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7767, 'tag': 'listener Method', 'name': 'Live.Song.Song.count_in_duration_has_listener()', 'description': 'count_in_duration_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;count_in_duration&quot;. C++ signature :  bool count_in_duration_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'count_in_duration_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7773, 'tag': 'listener Method', 'name': 'Live.Song.Song.cue_points_has_listener()', 'description': 'cue_points_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;cue_points&quot;. C++ signature :  bool cue_points_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'cue_points_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7775, 'tag': 'listener Method', 'name': 'Live.Song.Song.current_song_time_has_listener()', 'description': 'current_song_time_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_song_time&quot;. C++ signature :  bool current_song_time_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'current_song_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7776, 'tag': 'listener Method', 'name': 'Live.Song.Song.data_has_listener()', 'description': 'data_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;data&quot;. C++ signature :  bool data_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'data_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7784, 'tag': 'listener Method', 'name': 'Live.Song.Song.exclusive_arm_has_listener()', 'description': 'exclusive_arm_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;exclusive_arm&quot;. C++ signature :  bool exclusive_arm_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'exclusive_arm_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7794, 'tag': 'listener Method', 'name': 'Live.Song.Song.groove_amount_has_listener()', 'description': 'groove_amount_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;groove_amount&quot;. C++ signature :  bool groove_amount_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'groove_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7797, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_ableton_link_enabled_has_listener()', 'description': 'is_ableton_link_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_ableton_link_enabled&quot;. C++ signature :  bool is_ableton_link_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_ableton_link_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7799, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_ableton_link_start_stop_sync_enabled_has_listener()', 'description': 'is_ableton_link_start_stop_sync_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_ableton_link_start_stop_sync_enabled&quot;. C++ signature :  bool is_ableton_link_start_stop_sync_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_ableton_link_start_stop_sync_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7801, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_counting_in_has_listener()', 'description': 'is_counting_in_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_counting_in&quot;. C++ signature :  bool is_counting_in_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_counting_in_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7804, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_playing_has_listener()', 'description': 'is_playing_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_playing&quot;. C++ signature :  bool is_playing_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_playing_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7810, 'tag': 'listener Method', 'name': 'Live.Song.Song.loop_has_listener()', 'description': 'loop_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop&quot;. C++ signature :  bool loop_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'loop_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7812, 'tag': 'listener Method', 'name': 'Live.Song.Song.loop_length_has_listener()', 'description': 'loop_length_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_length&quot;. C++ signature :  bool loop_length_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'loop_length_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7814, 'tag': 'listener Method', 'name': 'Live.Song.Song.loop_start_has_listener()', 'description': 'loop_start_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_start&quot;. C++ signature :  bool loop_start_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'loop_start_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7817, 'tag': 'listener Method', 'name': 'Live.Song.Song.metronome_has_listener()', 'description': 'metronome_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;metronome&quot;. C++ signature :  bool metronome_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'metronome_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7819, 'tag': 'listener Method', 'name': 'Live.Song.Song.midi_recording_quantization_has_listener()', 'description': 'midi_recording_quantization_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_recording_quantization&quot;. C++ signature :  bool midi_recording_quantization_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'midi_recording_quantization_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7822, 'tag': 'listener Method', 'name': 'Live.Song.Song.nudge_down_has_listener()', 'description': 'nudge_down_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;nudge_down&quot;. C++ signature :  bool nudge_down_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'nudge_down_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7824, 'tag': 'listener Method', 'name': 'Live.Song.Song.nudge_up_has_listener()', 'description': 'nudge_up_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;nudge_up&quot;. C++ signature :  bool nudge_up_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'nudge_up_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7826, 'tag': 'listener Method', 'name': 'Live.Song.Song.overdub_has_listener()', 'description': 'overdub_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;overdub&quot;. C++ signature :  bool overdub_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'overdub_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7829, 'tag': 'listener Method', 'name': 'Live.Song.Song.punch_in_has_listener()', 'description': 'punch_in_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;punch_in&quot;. C++ signature :  bool punch_in_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'punch_in_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7831, 'tag': 'listener Method', 'name': 'Live.Song.Song.punch_out_has_listener()', 'description': 'punch_out_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;punch_out&quot;. C++ signature :  bool punch_out_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'punch_out_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7834, 'tag': 'listener Method', 'name': 'Live.Song.Song.re_enable_automation_enabled_has_listener()', 'description': 're_enable_automation_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;re_enable_automation_enabled&quot;. C++ signature :  bool re_enable_automation_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 're_enable_automation_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7836, 'tag': 'listener Method', 'name': 'Live.Song.Song.record_mode_has_listener()', 'description': 'record_mode_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;record_mode&quot;. C++ signature :  bool record_mode_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'record_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7838, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_appointed_device_listener()', 'description': 'remove_appointed_device_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;appointed_device&quot;. C++ signature :  void remove_appointed_device_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_appointed_device_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7839, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_arrangement_overdub_listener()', 'description': 'remove_arrangement_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;arrangement_overdub&quot;. C++ signature :  void remove_arrangement_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_arrangement_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7840, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_back_to_arranger_listener()', 'description': 'remove_back_to_arranger_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;back_to_arranger&quot;. C++ signature :  void remove_back_to_arranger_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_back_to_arranger_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7841, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_can_capture_midi_listener()', 'description': 'remove_can_capture_midi_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_capture_midi&quot;. C++ signature :  void remove_can_capture_midi_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_can_capture_midi_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7842, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_can_jump_to_next_cue_listener()', 'description': 'remove_can_jump_to_next_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_jump_to_next_cue&quot;. C++ signature :  void remove_can_jump_to_next_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_can_jump_to_next_cue_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7843, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_can_jump_to_prev_cue_listener()', 'description': 'remove_can_jump_to_prev_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_jump_to_prev_cue&quot;. C++ signature :  void remove_can_jump_to_prev_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_can_jump_to_prev_cue_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7844, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_clip_trigger_quantization_listener()', 'description': 'remove_clip_trigger_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;clip_trigger_quantization&quot;. C++ signature :  void remove_clip_trigger_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_clip_trigger_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7845, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_count_in_duration_listener()', 'description': 'remove_count_in_duration_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;count_in_duration&quot;. C++ signature :  void remove_count_in_duration_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_count_in_duration_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7846, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_cue_points_listener()', 'description': 'remove_cue_points_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;cue_points&quot;. C++ signature :  void remove_cue_points_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_cue_points_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7847, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_current_song_time_listener()', 'description': 'remove_current_song_time_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_song_time&quot;. C++ signature :  void remove_current_song_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_current_song_time_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7848, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_data_listener()', 'description': 'remove_data_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;data&quot;. C++ signature :  void remove_data_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_data_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7849, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_exclusive_arm_listener()', 'description': 'remove_exclusive_arm_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;exclusive_arm&quot;. C++ signature :  void remove_exclusive_arm_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_exclusive_arm_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7850, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_groove_amount_listener()', 'description': 'remove_groove_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;groove_amount&quot;. C++ signature :  void remove_groove_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_groove_amount_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7851, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_ableton_link_enabled_listener()', 'description': 'remove_is_ableton_link_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_ableton_link_enabled&quot;. C++ signature :  void remove_is_ableton_link_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_ableton_link_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7852, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_ableton_link_start_stop_sync_enabled_listener()', 'description': 'remove_is_ableton_link_start_stop_sync_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_ableton_link_start_stop_sync_enabled&quot;. C++ signature :  void remove_is_ableton_link_start_stop_sync_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_ableton_link_start_stop_sync_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7853, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_counting_in_listener()', 'description': 'remove_is_counting_in_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_counting_in&quot;. C++ signature :  void remove_is_counting_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_counting_in_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7854, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_playing_listener()', 'description': 'remove_is_playing_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_playing&quot;. C++ signature :  void remove_is_playing_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_playing_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7855, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_loop_length_listener()', 'description': 'remove_loop_length_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_length&quot;. C++ signature :  void remove_loop_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_loop_length_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7856, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_loop_listener()', 'description': 'remove_loop_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop&quot;. C++ signature :  void remove_loop_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_loop_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7857, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_loop_start_listener()', 'description': 'remove_loop_start_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_start&quot;. C++ signature :  void remove_loop_start_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7858, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_metronome_listener()', 'description': 'remove_metronome_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;metronome&quot;. C++ signature :  void remove_metronome_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_metronome_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7859, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_midi_recording_quantization_listener()', 'description': 'remove_midi_recording_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_recording_quantization&quot;. C++ signature :  void remove_midi_recording_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_midi_recording_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7860, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_nudge_down_listener()', 'description': 'remove_nudge_down_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;nudge_down&quot;. C++ signature :  void remove_nudge_down_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_nudge_down_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7861, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_nudge_up_listener()', 'description': 'remove_nudge_up_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;nudge_up&quot;. C++ signature :  void remove_nudge_up_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_nudge_up_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7862, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_overdub_listener()', 'description': 'remove_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;overdub&quot;. C++ signature :  void remove_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7863, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_punch_in_listener()', 'description': 'remove_punch_in_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;punch_in&quot;. C++ signature :  void remove_punch_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_punch_in_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7864, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_punch_out_listener()', 'description': 'remove_punch_out_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;punch_out&quot;. C++ signature :  void remove_punch_out_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_punch_out_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7865, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_re_enable_automation_enabled_listener()', 'description': 'remove_re_enable_automation_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;re_enable_automation_enabled&quot;. C++ signature :  void remove_re_enable_automation_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_re_enable_automation_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7866, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_record_mode_listener()', 'description': 'remove_record_mode_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;record_mode&quot;. C++ signature :  void remove_record_mode_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_record_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7867, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_return_tracks_listener()', 'description': 'remove_return_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;return_tracks&quot;. C++ signature :  void remove_return_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_return_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7868, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_root_note_listener()', 'description': 'remove_root_note_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;root_note&quot;. C++ signature :  void remove_root_note_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_root_note_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7869, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_scale_intervals_listener()', 'description': 'remove_scale_intervals_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;scale_intervals&quot;. C++ signature :  void remove_scale_intervals_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_scale_intervals_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7870, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_scale_name_listener()', 'description': 'remove_scale_name_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;scale_name&quot;. C++ signature :  void remove_scale_name_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_scale_name_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7871, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_scenes_listener()', 'description': 'remove_scenes_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;scenes&quot;. C++ signature :  void remove_scenes_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_scenes_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7872, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_session_automation_record_listener()', 'description': 'remove_session_automation_record_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;session_automation_record&quot;. C++ signature :  void remove_session_automation_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_session_automation_record_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7873, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_session_record_listener()', 'description': 'remove_session_record_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;session_record&quot;. C++ signature :  void remove_session_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_session_record_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7874, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_session_record_status_listener()', 'description': 'remove_session_record_status_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;session_record_status&quot;. C++ signature :  void remove_session_record_status_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_session_record_status_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7875, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_signature_denominator_listener()', 'description': 'remove_signature_denominator_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_denominator&quot;. C++ signature :  void remove_signature_denominator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7876, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_signature_numerator_listener()', 'description': 'remove_signature_numerator_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_numerator&quot;. C++ signature :  void remove_signature_numerator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7877, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_song_length_listener()', 'description': 'remove_song_length_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;song_length&quot;. C++ signature :  void remove_song_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_song_length_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7878, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_start_time_listener()', 'description': 'remove_start_time_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;start_time&quot;. C++ signature :  void remove_start_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_start_time_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7879, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_swing_amount_listener()', 'description': 'remove_swing_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;swing_amount&quot;. C++ signature :  void remove_swing_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_swing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7880, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tempo_follower_enabled_listener()', 'description': 'remove_tempo_follower_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo_follower_enabled&quot;. C++ signature :  void remove_tempo_follower_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tempo_follower_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7881, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tempo_listener()', 'description': 'remove_tempo_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo&quot;. C++ signature :  void remove_tempo_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7882, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tracks_listener()', 'description': 'remove_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tracks&quot;. C++ signature :  void remove_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7883, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tuning_system_listener()', 'description': 'remove_tuning_system_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tuning_system&quot;. C++ signature :  void remove_tuning_system_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tuning_system_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7884, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_visible_tracks_listener()', 'description': 'remove_visible_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_tracks&quot;. C++ signature :  void remove_visible_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_visible_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7886, 'tag': 'listener Method', 'name': 'Live.Song.Song.return_tracks_has_listener()', 'description': 'return_tracks_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;return_tracks&quot;. C++ signature :  bool return_tracks_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'return_tracks_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7888, 'tag': 'listener Method', 'name': 'Live.Song.Song.root_note_has_listener()', 'description': 'root_note_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;root_note&quot;. C++ signature :  bool root_note_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'root_note_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7890, 'tag': 'listener Method', 'name': 'Live.Song.Song.scale_intervals_has_listener()', 'description': 'scale_intervals_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;scale_intervals&quot;. C++ signature :  bool scale_intervals_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'scale_intervals_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7892, 'tag': 'listener Method', 'name': 'Live.Song.Song.scale_name_has_listener()', 'description': 'scale_name_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;scale_name&quot;. C++ signature :  bool scale_name_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'scale_name_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7894, 'tag': 'listener Method', 'name': 'Live.Song.Song.scenes_has_listener()', 'description': 'scenes_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;scenes&quot;. C++ signature :  bool scenes_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'scenes_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7898, 'tag': 'listener Method', 'name': 'Live.Song.Song.session_automation_record_has_listener()', 'description': 'session_automation_record_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;session_automation_record&quot;. C++ signature :  bool session_automation_record_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'session_automation_record_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7900, 'tag': 'listener Method', 'name': 'Live.Song.Song.session_record_has_listener()', 'description': 'session_record_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;session_record&quot;. C++ signature :  bool session_record_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'session_record_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7902, 'tag': 'listener Method', 'name': 'Live.Song.Song.session_record_status_has_listener()', 'description': 'session_record_status_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;session_record_status&quot;. C++ signature :  bool session_record_status_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'session_record_status_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7906, 'tag': 'listener Method', 'name': 'Live.Song.Song.signature_denominator_has_listener()', 'description': 'signature_denominator_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_denominator&quot;. C++ signature :  bool signature_denominator_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'signature_denominator_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7908, 'tag': 'listener Method', 'name': 'Live.Song.Song.signature_numerator_has_listener()', 'description': 'signature_numerator_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_numerator&quot;. C++ signature :  bool signature_numerator_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'signature_numerator_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7910, 'tag': 'listener Method', 'name': 'Live.Song.Song.song_length_has_listener()', 'description': 'song_length_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;song_length&quot;. C++ signature :  bool song_length_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'song_length_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7913, 'tag': 'listener Method', 'name': 'Live.Song.Song.start_time_has_listener()', 'description': 'start_time_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;start_time&quot;. C++ signature :  bool start_time_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'start_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7917, 'tag': 'listener Method', 'name': 'Live.Song.Song.swing_amount_has_listener()', 'description': 'swing_amount_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;swing_amount&quot;. C++ signature :  bool swing_amount_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'swing_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7921, 'tag': 'listener Method', 'name': 'Live.Song.Song.tempo_follower_enabled_has_listener()', 'description': 'tempo_follower_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo_follower_enabled&quot;. C++ signature :  bool tempo_follower_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tempo_follower_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7922, 'tag': 'listener Method', 'name': 'Live.Song.Song.tempo_has_listener()', 'description': 'tempo_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo&quot;. C++ signature :  bool tempo_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tempo_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7924, 'tag': 'listener Method', 'name': 'Live.Song.Song.tracks_has_listener()', 'description': 'tracks_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tracks&quot;. C++ signature :  bool tracks_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tracks_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7927, 'tag': 'listener Method', 'name': 'Live.Song.Song.tuning_system_has_listener()', 'description': 'tuning_system_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tuning_system&quot;. C++ signature :  bool tuning_system_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tuning_system_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7931, 'tag': 'listener Method', 'name': 'Live.Song.Song.visible_tracks_has_listener()', 'description': 'visible_tracks_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_tracks&quot;. C++ signature :  bool visible_tracks_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'visible_tracks_has_listener()'], 'hierarchy': 3, 'ref_parent': 7489, 'children': [], 'group': 'listener Method'},
{'ref': 7933, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_detail_clip_listener()', 'description': 'add_detail_clip_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;detail_clip&quot; has changed. C++ signature :  void add_detail_clip_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_detail_clip_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7934, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_draw_mode_listener()', 'description': 'add_draw_mode_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;draw_mode&quot; has changed. C++ signature :  void add_draw_mode_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_draw_mode_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7935, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_follow_song_listener()', 'description': 'add_follow_song_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;follow_song&quot; has changed. C++ signature :  void add_follow_song_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_follow_song_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7936, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_chain_listener()', 'description': 'add_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_chain&quot; has changed. C++ signature :  void add_selected_chain_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7937, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_parameter_listener()', 'description': 'add_selected_parameter_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_parameter&quot; has changed. C++ signature :  void add_selected_parameter_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_parameter_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7938, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_scene_listener()', 'description': 'add_selected_scene_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_scene&quot; has changed. C++ signature :  void add_selected_scene_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_scene_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7939, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_track_listener()', 'description': 'add_selected_track_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_track&quot; has changed. C++ signature :  void add_selected_track_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_track_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7940, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.detail_clip_has_listener()', 'description': 'detail_clip_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;detail_clip&quot;. C++ signature :  bool detail_clip_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'detail_clip_has_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7941, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.draw_mode_has_listener()', 'description': 'draw_mode_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;draw_mode&quot;. C++ signature :  bool draw_mode_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'draw_mode_has_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7942, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.follow_song_has_listener()', 'description': 'follow_song_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;follow_song&quot;. C++ signature :  bool follow_song_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'follow_song_has_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7943, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_detail_clip_listener()', 'description': 'remove_detail_clip_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;detail_clip&quot;. C++ signature :  void remove_detail_clip_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_detail_clip_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7944, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_draw_mode_listener()', 'description': 'remove_draw_mode_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;draw_mode&quot;. C++ signature :  void remove_draw_mode_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_draw_mode_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7945, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_follow_song_listener()', 'description': 'remove_follow_song_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;follow_song&quot;. C++ signature :  void remove_follow_song_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_follow_song_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7946, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_chain_listener()', 'description': 'remove_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_chain&quot;. C++ signature :  void remove_selected_chain_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7947, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_parameter_listener()', 'description': 'remove_selected_parameter_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_parameter&quot;. C++ signature :  void remove_selected_parameter_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_parameter_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7948, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_scene_listener()', 'description': 'remove_selected_scene_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_scene&quot;. C++ signature :  void remove_selected_scene_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_scene_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7949, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_track_listener()', 'description': 'remove_selected_track_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_track&quot;. C++ signature :  void remove_selected_track_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_track_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7951, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_chain_has_listener()', 'description': 'selected_chain_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_chain&quot;. C++ signature :  bool selected_chain_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_chain_has_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7952, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_parameter_has_listener()', 'description': 'selected_parameter_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_parameter&quot;. C++ signature :  bool selected_parameter_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_parameter_has_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7953, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_scene_has_listener()', 'description': 'selected_scene_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_scene&quot;. C++ signature :  bool selected_scene_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_scene_has_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7954, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_track_has_listener()', 'description': 'selected_track_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_track&quot;. C++ signature :  bool selected_track_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_track_has_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7983, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_detail_clip_listener()', 'description': 'add_detail_clip_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;detail_clip&quot; has changed. C++ signature :  void add_detail_clip_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_detail_clip_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7984, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_draw_mode_listener()', 'description': 'add_draw_mode_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;draw_mode&quot; has changed. C++ signature :  void add_draw_mode_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_draw_mode_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7985, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_follow_song_listener()', 'description': 'add_follow_song_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;follow_song&quot; has changed. C++ signature :  void add_follow_song_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_follow_song_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7986, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_chain_listener()', 'description': 'add_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_chain&quot; has changed. C++ signature :  void add_selected_chain_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7987, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_parameter_listener()', 'description': 'add_selected_parameter_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_parameter&quot; has changed. C++ signature :  void add_selected_parameter_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_parameter_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7988, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_scene_listener()', 'description': 'add_selected_scene_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_scene&quot; has changed. C++ signature :  void add_selected_scene_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_scene_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7989, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_track_listener()', 'description': 'add_selected_track_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_track&quot; has changed. C++ signature :  void add_selected_track_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_track_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7992, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.detail_clip_has_listener()', 'description': 'detail_clip_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;detail_clip&quot;. C++ signature :  bool detail_clip_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'detail_clip_has_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7994, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.draw_mode_has_listener()', 'description': 'draw_mode_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;draw_mode&quot;. C++ signature :  bool draw_mode_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'draw_mode_has_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7996, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.follow_song_has_listener()', 'description': 'follow_song_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;follow_song&quot;. C++ signature :  bool follow_song_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'follow_song_has_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7998, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_detail_clip_listener()', 'description': 'remove_detail_clip_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;detail_clip&quot;. C++ signature :  void remove_detail_clip_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_detail_clip_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 7999, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_draw_mode_listener()', 'description': 'remove_draw_mode_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;draw_mode&quot;. C++ signature :  void remove_draw_mode_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_draw_mode_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 8000, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_follow_song_listener()', 'description': 'remove_follow_song_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;follow_song&quot;. C++ signature :  void remove_follow_song_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_follow_song_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 8001, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_chain_listener()', 'description': 'remove_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_chain&quot;. C++ signature :  void remove_selected_chain_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 8002, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_parameter_listener()', 'description': 'remove_selected_parameter_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_parameter&quot;. C++ signature :  void remove_selected_parameter_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_parameter_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 8003, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_scene_listener()', 'description': 'remove_selected_scene_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_scene&quot;. C++ signature :  void remove_selected_scene_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_scene_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 8004, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_track_listener()', 'description': 'remove_selected_track_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_track&quot;. C++ signature :  void remove_selected_track_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_track_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 8007, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_chain_has_listener()', 'description': 'selected_chain_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_chain&quot;. C++ signature :  bool selected_chain_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_chain_has_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 8009, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_parameter_has_listener()', 'description': 'selected_parameter_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_parameter&quot;. C++ signature :  bool selected_parameter_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_parameter_has_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 8011, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_scene_has_listener()', 'description': 'selected_scene_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_scene&quot;. C++ signature :  bool selected_scene_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_scene_has_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 8013, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_track_has_listener()', 'description': 'selected_track_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_track&quot;. C++ signature :  bool selected_track_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_track_has_listener()'], 'hierarchy': 4, 'ref_parent': 7669, 'children': [], 'group': 'listener Method'},
{'ref': 8131, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_frequency_dial_mode_list_listener()', 'description': 'add_frequency_dial_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;frequency_dial_mode_list&quot; has changed. C++ signature :  void add_frequency_dial_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_frequency_dial_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8132, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_frequency_dial_mode_listener()', 'description': 'add_frequency_dial_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;frequency_dial_mode&quot; has changed. C++ signature :  void add_frequency_dial_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_frequency_dial_mode_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8133, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8134, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8135, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8136, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_midi_gate_list_listener()', 'description': 'add_midi_gate_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_gate_list&quot; has changed. C++ signature :  void add_midi_gate_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_midi_gate_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8137, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_midi_gate_listener()', 'description': 'add_midi_gate_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_gate&quot; has changed. C++ signature :  void add_midi_gate_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_midi_gate_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8138, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mod_mode_list_listener()', 'description': 'add_mod_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_mode_list&quot; has changed. C++ signature :  void add_mod_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mod_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8139, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mod_mode_listener()', 'description': 'add_mod_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_mode&quot; has changed. C++ signature :  void add_mod_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mod_mode_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8140, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mono_poly_list_listener()', 'description': 'add_mono_poly_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly_list&quot; has changed. C++ signature :  void add_mono_poly_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mono_poly_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8141, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mono_poly_listener()', 'description': 'add_mono_poly_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly&quot; has changed. C++ signature :  void add_mono_poly_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8142, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8143, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8144, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_pitch_bend_range_listener()', 'description': 'add_pitch_bend_range_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_bend_range&quot; has changed. C++ signature :  void add_pitch_bend_range_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8145, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_pitch_mode_list_listener()', 'description': 'add_pitch_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_mode_list&quot; has changed. C++ signature :  void add_pitch_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_pitch_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8146, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_pitch_mode_listener()', 'description': 'add_pitch_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_mode&quot; has changed. C++ signature :  void add_pitch_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_pitch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8147, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_polyphony_listener()', 'description': 'add_polyphony_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;polyphony&quot; has changed. C++ signature :  void add_polyphony_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_polyphony_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8148, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.frequency_dial_mode_has_listener()', 'description': 'frequency_dial_mode_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;frequency_dial_mode&quot;. C++ signature :  bool frequency_dial_mode_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'frequency_dial_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8149, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.frequency_dial_mode_list_has_listener()', 'description': 'frequency_dial_mode_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;frequency_dial_mode_list&quot;. C++ signature :  bool frequency_dial_mode_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'frequency_dial_mode_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8150, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8151, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8152, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8153, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.midi_gate_has_listener()', 'description': 'midi_gate_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_gate&quot;. C++ signature :  bool midi_gate_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'midi_gate_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8154, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.midi_gate_list_has_listener()', 'description': 'midi_gate_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_gate_list&quot;. C++ signature :  bool midi_gate_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'midi_gate_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8155, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mod_mode_has_listener()', 'description': 'mod_mode_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_mode&quot;. C++ signature :  bool mod_mode_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mod_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8156, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mod_mode_list_has_listener()', 'description': 'mod_mode_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_mode_list&quot;. C++ signature :  bool mod_mode_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mod_mode_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8157, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mono_poly_has_listener()', 'description': 'mono_poly_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly&quot;. C++ signature :  bool mono_poly_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mono_poly_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8158, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mono_poly_list_has_listener()', 'description': 'mono_poly_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly_list&quot;. C++ signature :  bool mono_poly_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mono_poly_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8159, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8160, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8161, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.pitch_bend_range_has_listener()', 'description': 'pitch_bend_range_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_bend_range&quot;. C++ signature :  bool pitch_bend_range_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8162, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.pitch_mode_has_listener()', 'description': 'pitch_mode_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_mode&quot;. C++ signature :  bool pitch_mode_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'pitch_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8163, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.pitch_mode_list_has_listener()', 'description': 'pitch_mode_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_mode_list&quot;. C++ signature :  bool pitch_mode_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'pitch_mode_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8164, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.polyphony_has_listener()', 'description': 'polyphony_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;polyphony&quot;. C++ signature :  bool polyphony_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'polyphony_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8165, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_frequency_dial_mode_list_listener()', 'description': 'remove_frequency_dial_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;frequency_dial_mode_list&quot;. C++ signature :  void remove_frequency_dial_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_frequency_dial_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8166, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_frequency_dial_mode_listener()', 'description': 'remove_frequency_dial_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;frequency_dial_mode&quot;. C++ signature :  void remove_frequency_dial_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_frequency_dial_mode_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8167, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8168, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8169, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8170, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_midi_gate_list_listener()', 'description': 'remove_midi_gate_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_gate_list&quot;. C++ signature :  void remove_midi_gate_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_midi_gate_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8171, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_midi_gate_listener()', 'description': 'remove_midi_gate_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_gate&quot;. C++ signature :  void remove_midi_gate_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_midi_gate_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8172, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mod_mode_list_listener()', 'description': 'remove_mod_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_mode_list&quot;. C++ signature :  void remove_mod_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mod_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8173, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mod_mode_listener()', 'description': 'remove_mod_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_mode&quot;. C++ signature :  void remove_mod_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mod_mode_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8174, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mono_poly_list_listener()', 'description': 'remove_mono_poly_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mono_poly_list&quot;. C++ signature :  void remove_mono_poly_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mono_poly_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8175, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mono_poly_listener()', 'description': 'remove_mono_poly_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mono_poly&quot;. C++ signature :  void remove_mono_poly_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8176, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8177, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8178, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_pitch_bend_range_listener()', 'description': 'remove_pitch_bend_range_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_bend_range&quot;. C++ signature :  void remove_pitch_bend_range_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8179, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_pitch_mode_list_listener()', 'description': 'remove_pitch_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_mode_list&quot;. C++ signature :  void remove_pitch_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_pitch_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8180, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_pitch_mode_listener()', 'description': 'remove_pitch_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_mode&quot;. C++ signature :  void remove_pitch_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_pitch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8181, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_polyphony_listener()', 'description': 'remove_polyphony_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;polyphony&quot;. C++ signature :  void remove_polyphony_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_polyphony_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8212, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_frequency_dial_mode_list_listener()', 'description': 'add_frequency_dial_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;frequency_dial_mode_list&quot; has changed. C++ signature :  void add_frequency_dial_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_frequency_dial_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8213, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_frequency_dial_mode_listener()', 'description': 'add_frequency_dial_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;frequency_dial_mode&quot; has changed. C++ signature :  void add_frequency_dial_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_frequency_dial_mode_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8214, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8215, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8216, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8217, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_midi_gate_list_listener()', 'description': 'add_midi_gate_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_gate_list&quot; has changed. C++ signature :  void add_midi_gate_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_midi_gate_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8218, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_midi_gate_listener()', 'description': 'add_midi_gate_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_gate&quot; has changed. C++ signature :  void add_midi_gate_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_midi_gate_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8219, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mod_mode_list_listener()', 'description': 'add_mod_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_mode_list&quot; has changed. C++ signature :  void add_mod_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mod_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8220, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mod_mode_listener()', 'description': 'add_mod_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_mode&quot; has changed. C++ signature :  void add_mod_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mod_mode_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8221, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mono_poly_list_listener()', 'description': 'add_mono_poly_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly_list&quot; has changed. C++ signature :  void add_mono_poly_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mono_poly_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8222, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mono_poly_listener()', 'description': 'add_mono_poly_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly&quot; has changed. C++ signature :  void add_mono_poly_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8223, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8224, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8225, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_pitch_bend_range_listener()', 'description': 'add_pitch_bend_range_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_bend_range&quot; has changed. C++ signature :  void add_pitch_bend_range_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8226, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_pitch_mode_list_listener()', 'description': 'add_pitch_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_mode_list&quot; has changed. C++ signature :  void add_pitch_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_pitch_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8227, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_pitch_mode_listener()', 'description': 'add_pitch_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_mode&quot; has changed. C++ signature :  void add_pitch_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_pitch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8228, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_polyphony_listener()', 'description': 'add_polyphony_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;polyphony&quot; has changed. C++ signature :  void add_polyphony_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_polyphony_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8235, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.frequency_dial_mode_has_listener()', 'description': 'frequency_dial_mode_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;frequency_dial_mode&quot;. C++ signature :  bool frequency_dial_mode_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'frequency_dial_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8237, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.frequency_dial_mode_list_has_listener()', 'description': 'frequency_dial_mode_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;frequency_dial_mode_list&quot;. C++ signature :  bool frequency_dial_mode_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'frequency_dial_mode_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8239, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8241, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8243, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8245, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.midi_gate_has_listener()', 'description': 'midi_gate_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_gate&quot;. C++ signature :  bool midi_gate_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'midi_gate_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8247, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.midi_gate_list_has_listener()', 'description': 'midi_gate_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_gate_list&quot;. C++ signature :  bool midi_gate_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'midi_gate_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8249, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mod_mode_has_listener()', 'description': 'mod_mode_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_mode&quot;. C++ signature :  bool mod_mode_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mod_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8251, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mod_mode_list_has_listener()', 'description': 'mod_mode_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_mode_list&quot;. C++ signature :  bool mod_mode_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mod_mode_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8253, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mono_poly_has_listener()', 'description': 'mono_poly_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly&quot;. C++ signature :  bool mono_poly_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mono_poly_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8255, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mono_poly_list_has_listener()', 'description': 'mono_poly_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly_list&quot;. C++ signature :  bool mono_poly_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mono_poly_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8257, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8259, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8261, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.pitch_bend_range_has_listener()', 'description': 'pitch_bend_range_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_bend_range&quot;. C++ signature :  bool pitch_bend_range_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8263, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.pitch_mode_has_listener()', 'description': 'pitch_mode_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_mode&quot;. C++ signature :  bool pitch_mode_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'pitch_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8265, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.pitch_mode_list_has_listener()', 'description': 'pitch_mode_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_mode_list&quot;. C++ signature :  bool pitch_mode_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'pitch_mode_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8267, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.polyphony_has_listener()', 'description': 'polyphony_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;polyphony&quot;. C++ signature :  bool polyphony_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'polyphony_has_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8268, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_frequency_dial_mode_list_listener()', 'description': 'remove_frequency_dial_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;frequency_dial_mode_list&quot;. C++ signature :  void remove_frequency_dial_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_frequency_dial_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8269, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_frequency_dial_mode_listener()', 'description': 'remove_frequency_dial_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;frequency_dial_mode&quot;. C++ signature :  void remove_frequency_dial_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_frequency_dial_mode_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8270, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8271, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8272, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8273, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_midi_gate_list_listener()', 'description': 'remove_midi_gate_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_gate_list&quot;. C++ signature :  void remove_midi_gate_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_midi_gate_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8274, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_midi_gate_listener()', 'description': 'remove_midi_gate_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_gate&quot;. C++ signature :  void remove_midi_gate_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_midi_gate_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8275, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mod_mode_list_listener()', 'description': 'remove_mod_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_mode_list&quot;. C++ signature :  void remove_mod_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mod_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8276, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mod_mode_listener()', 'description': 'remove_mod_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_mode&quot;. C++ signature :  void remove_mod_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mod_mode_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8277, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mono_poly_list_listener()', 'description': 'remove_mono_poly_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mono_poly_list&quot;. C++ signature :  void remove_mono_poly_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mono_poly_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8278, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mono_poly_listener()', 'description': 'remove_mono_poly_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mono_poly&quot;. C++ signature :  void remove_mono_poly_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8279, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8280, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8281, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_pitch_bend_range_listener()', 'description': 'remove_pitch_bend_range_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_bend_range&quot;. C++ signature :  void remove_pitch_bend_range_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8282, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_pitch_mode_list_listener()', 'description': 'remove_pitch_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_mode_list&quot;. C++ signature :  void remove_pitch_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_pitch_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8283, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_pitch_mode_listener()', 'description': 'remove_pitch_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_mode&quot;. C++ signature :  void remove_pitch_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_pitch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8284, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_polyphony_listener()', 'description': 'remove_polyphony_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;polyphony&quot;. C++ signature :  void remove_polyphony_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_polyphony_listener()'], 'hierarchy': 3, 'ref_parent': 8130, 'children': [], 'group': 'listener Method'},
{'ref': 8289, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 8183, 'children': [], 'group': 'listener Method'},
{'ref': 8290, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 8183, 'children': [], 'group': 'listener Method'},
{'ref': 8291, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 8183, 'children': [], 'group': 'listener Method'},
{'ref': 8320, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 8183, 'children': [], 'group': 'listener Method'},
{'ref': 8323, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 8183, 'children': [], 'group': 'listener Method'},
{'ref': 8324, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 8183, 'children': [], 'group': 'listener Method'},
{'ref': 8737, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_arm_listener()', 'description': 'add_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;arm&quot; has changed. C++ signature :  void add_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8738, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_arrangement_clips_listener()', 'description': 'add_arrangement_clips_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;arrangement_clips&quot; has changed. C++ signature :  void add_arrangement_clips_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_arrangement_clips_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8739, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_input_routing_channels_listener()', 'description': 'add_available_input_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_channels&quot; has changed. C++ signature :  void add_available_input_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8740, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_input_routing_types_listener()', 'description': 'add_available_input_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_types&quot; has changed. C++ signature :  void add_available_input_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8741, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_output_routing_channels_listener()', 'description': 'add_available_output_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_output_routing_channels&quot; has changed. C++ signature :  void add_available_output_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_output_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8742, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_output_routing_types_listener()', 'description': 'add_available_output_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_output_routing_types&quot; has changed. C++ signature :  void add_available_output_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_output_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8743, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_clip_slots_listener()', 'description': 'add_clip_slots_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;clip_slots&quot; has changed. C++ signature :  void add_clip_slots_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8744, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_color_index_listener()', 'description': 'add_color_index_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8745, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_color_listener()', 'description': 'add_color_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8746, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_input_routing_listener()', 'description': 'add_current_input_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_input_routing&quot; has changed. C++ signature :  void add_current_input_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_input_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8747, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_input_sub_routing_listener()', 'description': 'add_current_input_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_input_sub_routing&quot; has changed. C++ signature :  void add_current_input_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_input_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8748, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_monitoring_state_listener()', 'description': 'add_current_monitoring_state_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_monitoring_state&quot; has changed. C++ signature :  void add_current_monitoring_state_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_monitoring_state_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8749, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_output_routing_listener()', 'description': 'add_current_output_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_output_routing&quot; has changed. C++ signature :  void add_current_output_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_output_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8750, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_output_sub_routing_listener()', 'description': 'add_current_output_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_output_sub_routing&quot; has changed. C++ signature :  void add_current_output_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_output_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8751, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_data_listener()', 'description': 'add_data_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;data&quot; has changed. C++ signature :  void add_data_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_data_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8752, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_devices_listener()', 'description': 'add_devices_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;devices&quot; has changed. C++ signature :  void add_devices_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_devices_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8753, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_fired_slot_index_listener()', 'description': 'add_fired_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;fired_slot_index&quot; has changed. C++ signature :  void add_fired_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_fired_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8754, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_audio_input_listener()', 'description': 'add_has_audio_input_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_audio_input&quot; has changed. C++ signature :  void add_has_audio_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_audio_input_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8755, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_audio_output_listener()', 'description': 'add_has_audio_output_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_audio_output&quot; has changed. C++ signature :  void add_has_audio_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_audio_output_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8756, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_midi_input_listener()', 'description': 'add_has_midi_input_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_midi_input&quot; has changed. C++ signature :  void add_has_midi_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_midi_input_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8757, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_midi_output_listener()', 'description': 'add_has_midi_output_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_midi_output&quot; has changed. C++ signature :  void add_has_midi_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_midi_output_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8758, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_implicit_arm_listener()', 'description': 'add_implicit_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;implicit_arm&quot; has changed. C++ signature :  void add_implicit_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_implicit_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8759, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_meter_left_listener()', 'description': 'add_input_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_meter_left&quot; has changed. C++ signature :  void add_input_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8760, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_meter_level_listener()', 'description': 'add_input_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_meter_level&quot; has changed. C++ signature :  void add_input_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8761, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_meter_right_listener()', 'description': 'add_input_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_meter_right&quot; has changed. C++ signature :  void add_input_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8762, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_routing_channel_listener()', 'description': 'add_input_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_channel&quot; has changed. C++ signature :  void add_input_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8763, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_routing_type_listener()', 'description': 'add_input_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_type&quot; has changed. C++ signature :  void add_input_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8764, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_routings_listener()', 'description': 'add_input_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routings&quot; has changed. C++ signature :  void add_input_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8765, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_sub_routings_listener()', 'description': 'add_input_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_sub_routings&quot; has changed. C++ signature :  void add_input_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8766, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_is_frozen_listener()', 'description': 'add_is_frozen_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_frozen&quot; has changed. C++ signature :  void add_is_frozen_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_is_frozen_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8767, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_is_showing_chains_listener()', 'description': 'add_is_showing_chains_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_showing_chains&quot; has changed. C++ signature :  void add_is_showing_chains_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8768, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_mute_listener()', 'description': 'add_mute_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8769, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_muted_via_solo_listener()', 'description': 'add_muted_via_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted_via_solo&quot; has changed. C++ signature :  void add_muted_via_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8770, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_name_listener()', 'description': 'add_name_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8771, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_meter_left_listener()', 'description': 'add_output_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_meter_left&quot; has changed. C++ signature :  void add_output_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8772, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_meter_level_listener()', 'description': 'add_output_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_meter_level&quot; has changed. C++ signature :  void add_output_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8773, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_meter_right_listener()', 'description': 'add_output_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_meter_right&quot; has changed. C++ signature :  void add_output_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8774, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_routing_channel_listener()', 'description': 'add_output_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_routing_channel&quot; has changed. C++ signature :  void add_output_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8775, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_routing_type_listener()', 'description': 'add_output_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_routing_type&quot; has changed. C++ signature :  void add_output_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8776, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_routings_listener()', 'description': 'add_output_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_routings&quot; has changed. C++ signature :  void add_output_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8777, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_sub_routings_listener()', 'description': 'add_output_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_sub_routings&quot; has changed. C++ signature :  void add_output_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8778, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_performance_impact_listener()', 'description': 'add_performance_impact_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;performance_impact&quot; has changed. C++ signature :  void add_performance_impact_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_performance_impact_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8779, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_playing_slot_index_listener()', 'description': 'add_playing_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_slot_index&quot; has changed. C++ signature :  void add_playing_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_playing_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8780, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_solo_listener()', 'description': 'add_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8781, 'tag': 'listener Method', 'name': 'Live.Track.Track.arm_has_listener()', 'description': 'arm_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;arm&quot;. C++ signature :  bool arm_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'arm_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8782, 'tag': 'listener Method', 'name': 'Live.Track.Track.arrangement_clips_has_listener()', 'description': 'arrangement_clips_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;arrangement_clips&quot;. C++ signature :  bool arrangement_clips_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'arrangement_clips_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8783, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_input_routing_channels_has_listener()', 'description': 'available_input_routing_channels_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_channels&quot;. C++ signature :  bool available_input_routing_channels_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_input_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8784, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_input_routing_types_has_listener()', 'description': 'available_input_routing_types_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_types&quot;. C++ signature :  bool available_input_routing_types_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_input_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8785, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_output_routing_channels_has_listener()', 'description': 'available_output_routing_channels_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_output_routing_channels&quot;. C++ signature :  bool available_output_routing_channels_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_output_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8786, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_output_routing_types_has_listener()', 'description': 'available_output_routing_types_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_output_routing_types&quot;. C++ signature :  bool available_output_routing_types_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_output_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8787, 'tag': 'listener Method', 'name': 'Live.Track.Track.clip_slots_has_listener()', 'description': 'clip_slots_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;clip_slots&quot;. C++ signature :  bool clip_slots_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'clip_slots_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8788, 'tag': 'listener Method', 'name': 'Live.Track.Track.color_has_listener()', 'description': 'color_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8789, 'tag': 'listener Method', 'name': 'Live.Track.Track.color_index_has_listener()', 'description': 'color_index_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8790, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_input_routing_has_listener()', 'description': 'current_input_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_input_routing&quot;. C++ signature :  bool current_input_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_input_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8791, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_input_sub_routing_has_listener()', 'description': 'current_input_sub_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_input_sub_routing&quot;. C++ signature :  bool current_input_sub_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_input_sub_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8792, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_monitoring_state_has_listener()', 'description': 'current_monitoring_state_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_monitoring_state&quot;. C++ signature :  bool current_monitoring_state_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_monitoring_state_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8793, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_output_routing_has_listener()', 'description': 'current_output_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_output_routing&quot;. C++ signature :  bool current_output_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_output_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8794, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_output_sub_routing_has_listener()', 'description': 'current_output_sub_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_output_sub_routing&quot;. C++ signature :  bool current_output_sub_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_output_sub_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8795, 'tag': 'listener Method', 'name': 'Live.Track.Track.data_has_listener()', 'description': 'data_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;data&quot;. C++ signature :  bool data_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'data_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8798, 'tag': 'listener Method', 'name': 'Live.Track.Track.devices_has_listener()', 'description': 'devices_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;devices&quot;. C++ signature :  bool devices_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'devices_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8801, 'tag': 'listener Method', 'name': 'Live.Track.Track.fired_slot_index_has_listener()', 'description': 'fired_slot_index_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;fired_slot_index&quot;. C++ signature :  bool fired_slot_index_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'fired_slot_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8803, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_audio_input_has_listener()', 'description': 'has_audio_input_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_audio_input&quot;. C++ signature :  bool has_audio_input_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_audio_input_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8804, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_audio_output_has_listener()', 'description': 'has_audio_output_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_audio_output&quot;. C++ signature :  bool has_audio_output_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_audio_output_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8805, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_midi_input_has_listener()', 'description': 'has_midi_input_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_midi_input&quot;. C++ signature :  bool has_midi_input_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_midi_input_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8806, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_midi_output_has_listener()', 'description': 'has_midi_output_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_midi_output&quot;. C++ signature :  bool has_midi_output_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_midi_output_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8807, 'tag': 'listener Method', 'name': 'Live.Track.Track.implicit_arm_has_listener()', 'description': 'implicit_arm_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;implicit_arm&quot;. C++ signature :  bool implicit_arm_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'implicit_arm_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8808, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_meter_left_has_listener()', 'description': 'input_meter_left_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_meter_left&quot;. C++ signature :  bool input_meter_left_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_meter_left_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8809, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_meter_level_has_listener()', 'description': 'input_meter_level_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_meter_level&quot;. C++ signature :  bool input_meter_level_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_meter_level_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8810, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_meter_right_has_listener()', 'description': 'input_meter_right_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_meter_right&quot;. C++ signature :  bool input_meter_right_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_meter_right_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8811, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_routing_channel_has_listener()', 'description': 'input_routing_channel_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_channel&quot;. C++ signature :  bool input_routing_channel_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8812, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_routing_type_has_listener()', 'description': 'input_routing_type_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_type&quot;. C++ signature :  bool input_routing_type_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8813, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_routings_has_listener()', 'description': 'input_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routings&quot;. C++ signature :  bool input_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8814, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_sub_routings_has_listener()', 'description': 'input_sub_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_sub_routings&quot;. C++ signature :  bool input_sub_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_sub_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8815, 'tag': 'listener Method', 'name': 'Live.Track.Track.is_frozen_has_listener()', 'description': 'is_frozen_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_frozen&quot;. C++ signature :  bool is_frozen_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'is_frozen_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8816, 'tag': 'listener Method', 'name': 'Live.Track.Track.is_showing_chains_has_listener()', 'description': 'is_showing_chains_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_showing_chains&quot;. C++ signature :  bool is_showing_chains_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'is_showing_chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8818, 'tag': 'listener Method', 'name': 'Live.Track.Track.mute_has_listener()', 'description': 'mute_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8819, 'tag': 'listener Method', 'name': 'Live.Track.Track.muted_via_solo_has_listener()', 'description': 'muted_via_solo_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted_via_solo&quot;. C++ signature :  bool muted_via_solo_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'muted_via_solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8820, 'tag': 'listener Method', 'name': 'Live.Track.Track.name_has_listener()', 'description': 'name_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8821, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_meter_left_has_listener()', 'description': 'output_meter_left_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_meter_left&quot;. C++ signature :  bool output_meter_left_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_meter_left_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8822, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_meter_level_has_listener()', 'description': 'output_meter_level_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_meter_level&quot;. C++ signature :  bool output_meter_level_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_meter_level_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8823, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_meter_right_has_listener()', 'description': 'output_meter_right_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_meter_right&quot;. C++ signature :  bool output_meter_right_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_meter_right_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8824, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_routing_channel_has_listener()', 'description': 'output_routing_channel_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_routing_channel&quot;. C++ signature :  bool output_routing_channel_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8825, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_routing_type_has_listener()', 'description': 'output_routing_type_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_routing_type&quot;. C++ signature :  bool output_routing_type_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8826, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_routings_has_listener()', 'description': 'output_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_routings&quot;. C++ signature :  bool output_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8827, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_sub_routings_has_listener()', 'description': 'output_sub_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_sub_routings&quot;. C++ signature :  bool output_sub_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_sub_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8828, 'tag': 'listener Method', 'name': 'Live.Track.Track.performance_impact_has_listener()', 'description': 'performance_impact_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;performance_impact&quot;. C++ signature :  bool performance_impact_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'performance_impact_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8829, 'tag': 'listener Method', 'name': 'Live.Track.Track.playing_slot_index_has_listener()', 'description': 'playing_slot_index_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_slot_index&quot;. C++ signature :  bool playing_slot_index_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'playing_slot_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8830, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_arm_listener()', 'description': 'remove_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;arm&quot;. C++ signature :  void remove_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8831, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_arrangement_clips_listener()', 'description': 'remove_arrangement_clips_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;arrangement_clips&quot;. C++ signature :  void remove_arrangement_clips_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_arrangement_clips_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8832, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_input_routing_channels_listener()', 'description': 'remove_available_input_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_channels&quot;. C++ signature :  void remove_available_input_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8833, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_input_routing_types_listener()', 'description': 'remove_available_input_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_types&quot;. C++ signature :  void remove_available_input_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8834, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_output_routing_channels_listener()', 'description': 'remove_available_output_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_output_routing_channels&quot;. C++ signature :  void remove_available_output_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_output_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8835, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_output_routing_types_listener()', 'description': 'remove_available_output_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_output_routing_types&quot;. C++ signature :  void remove_available_output_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_output_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8836, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_clip_slots_listener()', 'description': 'remove_clip_slots_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;clip_slots&quot;. C++ signature :  void remove_clip_slots_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8837, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8838, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_color_listener()', 'description': 'remove_color_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8839, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_input_routing_listener()', 'description': 'remove_current_input_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_input_routing&quot;. C++ signature :  void remove_current_input_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_input_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8840, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_input_sub_routing_listener()', 'description': 'remove_current_input_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_input_sub_routing&quot;. C++ signature :  void remove_current_input_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_input_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8841, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_monitoring_state_listener()', 'description': 'remove_current_monitoring_state_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_monitoring_state&quot;. C++ signature :  void remove_current_monitoring_state_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_monitoring_state_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8842, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_output_routing_listener()', 'description': 'remove_current_output_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_output_routing&quot;. C++ signature :  void remove_current_output_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_output_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8843, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_output_sub_routing_listener()', 'description': 'remove_current_output_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_output_sub_routing&quot;. C++ signature :  void remove_current_output_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_output_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8844, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_data_listener()', 'description': 'remove_data_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;data&quot;. C++ signature :  void remove_data_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_data_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8845, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_devices_listener()', 'description': 'remove_devices_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;devices&quot;. C++ signature :  void remove_devices_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_devices_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8846, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_fired_slot_index_listener()', 'description': 'remove_fired_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;fired_slot_index&quot;. C++ signature :  void remove_fired_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_fired_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8847, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_audio_input_listener()', 'description': 'remove_has_audio_input_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_audio_input&quot;. C++ signature :  void remove_has_audio_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_audio_input_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8848, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_audio_output_listener()', 'description': 'remove_has_audio_output_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_audio_output&quot;. C++ signature :  void remove_has_audio_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_audio_output_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8849, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_midi_input_listener()', 'description': 'remove_has_midi_input_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_midi_input&quot;. C++ signature :  void remove_has_midi_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_midi_input_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8850, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_midi_output_listener()', 'description': 'remove_has_midi_output_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_midi_output&quot;. C++ signature :  void remove_has_midi_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_midi_output_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8851, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_implicit_arm_listener()', 'description': 'remove_implicit_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;implicit_arm&quot;. C++ signature :  void remove_implicit_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_implicit_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8852, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_meter_left_listener()', 'description': 'remove_input_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_meter_left&quot;. C++ signature :  void remove_input_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8853, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_meter_level_listener()', 'description': 'remove_input_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_meter_level&quot;. C++ signature :  void remove_input_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8854, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_meter_right_listener()', 'description': 'remove_input_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_meter_right&quot;. C++ signature :  void remove_input_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8855, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_routing_channel_listener()', 'description': 'remove_input_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_channel&quot;. C++ signature :  void remove_input_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8856, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_routing_type_listener()', 'description': 'remove_input_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_type&quot;. C++ signature :  void remove_input_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8857, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_routings_listener()', 'description': 'remove_input_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routings&quot;. C++ signature :  void remove_input_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8858, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_sub_routings_listener()', 'description': 'remove_input_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_sub_routings&quot;. C++ signature :  void remove_input_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8859, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_is_frozen_listener()', 'description': 'remove_is_frozen_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_frozen&quot;. C++ signature :  void remove_is_frozen_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_is_frozen_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8860, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_is_showing_chains_listener()', 'description': 'remove_is_showing_chains_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_showing_chains&quot;. C++ signature :  void remove_is_showing_chains_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8861, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_mute_listener()', 'description': 'remove_mute_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8862, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_muted_via_solo_listener()', 'description': 'remove_muted_via_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted_via_solo&quot;. C++ signature :  void remove_muted_via_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8863, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_name_listener()', 'description': 'remove_name_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8864, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_meter_left_listener()', 'description': 'remove_output_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_meter_left&quot;. C++ signature :  void remove_output_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8865, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_meter_level_listener()', 'description': 'remove_output_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_meter_level&quot;. C++ signature :  void remove_output_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8866, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_meter_right_listener()', 'description': 'remove_output_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_meter_right&quot;. C++ signature :  void remove_output_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8867, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_routing_channel_listener()', 'description': 'remove_output_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_routing_channel&quot;. C++ signature :  void remove_output_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8868, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_routing_type_listener()', 'description': 'remove_output_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_routing_type&quot;. C++ signature :  void remove_output_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8869, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_routings_listener()', 'description': 'remove_output_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_routings&quot;. C++ signature :  void remove_output_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8870, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_sub_routings_listener()', 'description': 'remove_output_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_sub_routings&quot;. C++ signature :  void remove_output_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8871, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_performance_impact_listener()', 'description': 'remove_performance_impact_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;performance_impact&quot;. C++ signature :  void remove_performance_impact_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_performance_impact_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8872, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_playing_slot_index_listener()', 'description': 'remove_playing_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_slot_index&quot;. C++ signature :  void remove_playing_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_playing_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8873, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_solo_listener()', 'description': 'remove_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8875, 'tag': 'listener Method', 'name': 'Live.Track.Track.solo_has_listener()', 'description': 'solo_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8906, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_arm_listener()', 'description': 'add_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;arm&quot; has changed. C++ signature :  void add_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8907, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_arrangement_clips_listener()', 'description': 'add_arrangement_clips_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;arrangement_clips&quot; has changed. C++ signature :  void add_arrangement_clips_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_arrangement_clips_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8908, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_input_routing_channels_listener()', 'description': 'add_available_input_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_channels&quot; has changed. C++ signature :  void add_available_input_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8909, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_input_routing_types_listener()', 'description': 'add_available_input_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_types&quot; has changed. C++ signature :  void add_available_input_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8910, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_output_routing_channels_listener()', 'description': 'add_available_output_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_output_routing_channels&quot; has changed. C++ signature :  void add_available_output_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_output_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8911, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_output_routing_types_listener()', 'description': 'add_available_output_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_output_routing_types&quot; has changed. C++ signature :  void add_available_output_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_output_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8912, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_clip_slots_listener()', 'description': 'add_clip_slots_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;clip_slots&quot; has changed. C++ signature :  void add_clip_slots_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8913, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_color_index_listener()', 'description': 'add_color_index_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8914, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_color_listener()', 'description': 'add_color_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8915, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_input_routing_listener()', 'description': 'add_current_input_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_input_routing&quot; has changed. C++ signature :  void add_current_input_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_input_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8916, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_input_sub_routing_listener()', 'description': 'add_current_input_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_input_sub_routing&quot; has changed. C++ signature :  void add_current_input_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_input_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8917, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_monitoring_state_listener()', 'description': 'add_current_monitoring_state_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_monitoring_state&quot; has changed. C++ signature :  void add_current_monitoring_state_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_monitoring_state_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8918, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_output_routing_listener()', 'description': 'add_current_output_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_output_routing&quot; has changed. C++ signature :  void add_current_output_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_output_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8919, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_output_sub_routing_listener()', 'description': 'add_current_output_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_output_sub_routing&quot; has changed. C++ signature :  void add_current_output_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_output_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8920, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_data_listener()', 'description': 'add_data_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;data&quot; has changed. C++ signature :  void add_data_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_data_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8921, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_devices_listener()', 'description': 'add_devices_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;devices&quot; has changed. C++ signature :  void add_devices_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_devices_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8922, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_fired_slot_index_listener()', 'description': 'add_fired_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;fired_slot_index&quot; has changed. C++ signature :  void add_fired_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_fired_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8923, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_audio_input_listener()', 'description': 'add_has_audio_input_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_audio_input&quot; has changed. C++ signature :  void add_has_audio_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_audio_input_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8924, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_audio_output_listener()', 'description': 'add_has_audio_output_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_audio_output&quot; has changed. C++ signature :  void add_has_audio_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_audio_output_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8925, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_midi_input_listener()', 'description': 'add_has_midi_input_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_midi_input&quot; has changed. C++ signature :  void add_has_midi_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_midi_input_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8926, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_midi_output_listener()', 'description': 'add_has_midi_output_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_midi_output&quot; has changed. C++ signature :  void add_has_midi_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_midi_output_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8927, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_implicit_arm_listener()', 'description': 'add_implicit_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;implicit_arm&quot; has changed. C++ signature :  void add_implicit_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_implicit_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8928, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_meter_left_listener()', 'description': 'add_input_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_meter_left&quot; has changed. C++ signature :  void add_input_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8929, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_meter_level_listener()', 'description': 'add_input_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_meter_level&quot; has changed. C++ signature :  void add_input_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8930, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_meter_right_listener()', 'description': 'add_input_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_meter_right&quot; has changed. C++ signature :  void add_input_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8931, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_routing_channel_listener()', 'description': 'add_input_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_channel&quot; has changed. C++ signature :  void add_input_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8932, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_routing_type_listener()', 'description': 'add_input_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_type&quot; has changed. C++ signature :  void add_input_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8933, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_routings_listener()', 'description': 'add_input_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routings&quot; has changed. C++ signature :  void add_input_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8934, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_sub_routings_listener()', 'description': 'add_input_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_sub_routings&quot; has changed. C++ signature :  void add_input_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8935, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_is_frozen_listener()', 'description': 'add_is_frozen_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_frozen&quot; has changed. C++ signature :  void add_is_frozen_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_is_frozen_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8936, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_is_showing_chains_listener()', 'description': 'add_is_showing_chains_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_showing_chains&quot; has changed. C++ signature :  void add_is_showing_chains_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8937, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_mute_listener()', 'description': 'add_mute_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8938, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_muted_via_solo_listener()', 'description': 'add_muted_via_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted_via_solo&quot; has changed. C++ signature :  void add_muted_via_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8939, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_name_listener()', 'description': 'add_name_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8940, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_meter_left_listener()', 'description': 'add_output_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_meter_left&quot; has changed. C++ signature :  void add_output_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8941, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_meter_level_listener()', 'description': 'add_output_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_meter_level&quot; has changed. C++ signature :  void add_output_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8942, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_meter_right_listener()', 'description': 'add_output_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_meter_right&quot; has changed. C++ signature :  void add_output_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8943, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_routing_channel_listener()', 'description': 'add_output_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_routing_channel&quot; has changed. C++ signature :  void add_output_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8944, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_routing_type_listener()', 'description': 'add_output_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_routing_type&quot; has changed. C++ signature :  void add_output_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8945, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_routings_listener()', 'description': 'add_output_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_routings&quot; has changed. C++ signature :  void add_output_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8946, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_sub_routings_listener()', 'description': 'add_output_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_sub_routings&quot; has changed. C++ signature :  void add_output_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8947, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_performance_impact_listener()', 'description': 'add_performance_impact_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;performance_impact&quot; has changed. C++ signature :  void add_performance_impact_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_performance_impact_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8948, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_playing_slot_index_listener()', 'description': 'add_playing_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_slot_index&quot; has changed. C++ signature :  void add_playing_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_playing_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8949, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_solo_listener()', 'description': 'add_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8951, 'tag': 'listener Method', 'name': 'Live.Track.Track.arm_has_listener()', 'description': 'arm_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;arm&quot;. C++ signature :  bool arm_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'arm_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8953, 'tag': 'listener Method', 'name': 'Live.Track.Track.arrangement_clips_has_listener()', 'description': 'arrangement_clips_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;arrangement_clips&quot;. C++ signature :  bool arrangement_clips_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'arrangement_clips_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8955, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_input_routing_channels_has_listener()', 'description': 'available_input_routing_channels_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_channels&quot;. C++ signature :  bool available_input_routing_channels_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_input_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8957, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_input_routing_types_has_listener()', 'description': 'available_input_routing_types_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_types&quot;. C++ signature :  bool available_input_routing_types_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_input_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8959, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_output_routing_channels_has_listener()', 'description': 'available_output_routing_channels_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_output_routing_channels&quot;. C++ signature :  bool available_output_routing_channels_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_output_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8961, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_output_routing_types_has_listener()', 'description': 'available_output_routing_types_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_output_routing_types&quot;. C++ signature :  bool available_output_routing_types_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_output_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8967, 'tag': 'listener Method', 'name': 'Live.Track.Track.clip_slots_has_listener()', 'description': 'clip_slots_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;clip_slots&quot;. C++ signature :  bool clip_slots_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'clip_slots_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8969, 'tag': 'listener Method', 'name': 'Live.Track.Track.color_has_listener()', 'description': 'color_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8971, 'tag': 'listener Method', 'name': 'Live.Track.Track.color_index_has_listener()', 'description': 'color_index_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8973, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_input_routing_has_listener()', 'description': 'current_input_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_input_routing&quot;. C++ signature :  bool current_input_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_input_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8975, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_input_sub_routing_has_listener()', 'description': 'current_input_sub_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_input_sub_routing&quot;. C++ signature :  bool current_input_sub_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_input_sub_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8977, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_monitoring_state_has_listener()', 'description': 'current_monitoring_state_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_monitoring_state&quot;. C++ signature :  bool current_monitoring_state_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_monitoring_state_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8979, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_output_routing_has_listener()', 'description': 'current_output_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_output_routing&quot;. C++ signature :  bool current_output_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_output_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8981, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_output_sub_routing_has_listener()', 'description': 'current_output_sub_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_output_sub_routing&quot;. C++ signature :  bool current_output_sub_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_output_sub_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8982, 'tag': 'listener Method', 'name': 'Live.Track.Track.data_has_listener()', 'description': 'data_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;data&quot;. C++ signature :  bool data_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'data_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8986, 'tag': 'listener Method', 'name': 'Live.Track.Track.devices_has_listener()', 'description': 'devices_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;devices&quot;. C++ signature :  bool devices_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'devices_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8990, 'tag': 'listener Method', 'name': 'Live.Track.Track.fired_slot_index_has_listener()', 'description': 'fired_slot_index_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;fired_slot_index&quot;. C++ signature :  bool fired_slot_index_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'fired_slot_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8995, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_audio_input_has_listener()', 'description': 'has_audio_input_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_audio_input&quot;. C++ signature :  bool has_audio_input_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_audio_input_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8997, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_audio_output_has_listener()', 'description': 'has_audio_output_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_audio_output&quot;. C++ signature :  bool has_audio_output_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_audio_output_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 8999, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_midi_input_has_listener()', 'description': 'has_midi_input_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_midi_input&quot;. C++ signature :  bool has_midi_input_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_midi_input_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9001, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_midi_output_has_listener()', 'description': 'has_midi_output_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_midi_output&quot;. C++ signature :  bool has_midi_output_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_midi_output_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9003, 'tag': 'listener Method', 'name': 'Live.Track.Track.implicit_arm_has_listener()', 'description': 'implicit_arm_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;implicit_arm&quot;. C++ signature :  bool implicit_arm_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'implicit_arm_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9005, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_meter_left_has_listener()', 'description': 'input_meter_left_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_meter_left&quot;. C++ signature :  bool input_meter_left_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_meter_left_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9007, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_meter_level_has_listener()', 'description': 'input_meter_level_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_meter_level&quot;. C++ signature :  bool input_meter_level_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_meter_level_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9009, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_meter_right_has_listener()', 'description': 'input_meter_right_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_meter_right&quot;. C++ signature :  bool input_meter_right_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_meter_right_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9011, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_routing_channel_has_listener()', 'description': 'input_routing_channel_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_channel&quot;. C++ signature :  bool input_routing_channel_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9013, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_routing_type_has_listener()', 'description': 'input_routing_type_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_type&quot;. C++ signature :  bool input_routing_type_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9015, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_routings_has_listener()', 'description': 'input_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routings&quot;. C++ signature :  bool input_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9017, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_sub_routings_has_listener()', 'description': 'input_sub_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_sub_routings&quot;. C++ signature :  bool input_sub_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_sub_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9020, 'tag': 'listener Method', 'name': 'Live.Track.Track.is_frozen_has_listener()', 'description': 'is_frozen_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_frozen&quot;. C++ signature :  bool is_frozen_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'is_frozen_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9024, 'tag': 'listener Method', 'name': 'Live.Track.Track.is_showing_chains_has_listener()', 'description': 'is_showing_chains_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_showing_chains&quot;. C++ signature :  bool is_showing_chains_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'is_showing_chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9030, 'tag': 'listener Method', 'name': 'Live.Track.Track.mute_has_listener()', 'description': 'mute_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9032, 'tag': 'listener Method', 'name': 'Live.Track.Track.muted_via_solo_has_listener()', 'description': 'muted_via_solo_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted_via_solo&quot;. C++ signature :  bool muted_via_solo_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'muted_via_solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9034, 'tag': 'listener Method', 'name': 'Live.Track.Track.name_has_listener()', 'description': 'name_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9036, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_meter_left_has_listener()', 'description': 'output_meter_left_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_meter_left&quot;. C++ signature :  bool output_meter_left_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_meter_left_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9038, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_meter_level_has_listener()', 'description': 'output_meter_level_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_meter_level&quot;. C++ signature :  bool output_meter_level_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_meter_level_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9040, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_meter_right_has_listener()', 'description': 'output_meter_right_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_meter_right&quot;. C++ signature :  bool output_meter_right_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_meter_right_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9042, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_routing_channel_has_listener()', 'description': 'output_routing_channel_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_routing_channel&quot;. C++ signature :  bool output_routing_channel_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9044, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_routing_type_has_listener()', 'description': 'output_routing_type_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_routing_type&quot;. C++ signature :  bool output_routing_type_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9046, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_routings_has_listener()', 'description': 'output_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_routings&quot;. C++ signature :  bool output_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9048, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_sub_routings_has_listener()', 'description': 'output_sub_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_sub_routings&quot;. C++ signature :  bool output_sub_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_sub_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9050, 'tag': 'listener Method', 'name': 'Live.Track.Track.performance_impact_has_listener()', 'description': 'performance_impact_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;performance_impact&quot;. C++ signature :  bool performance_impact_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'performance_impact_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9052, 'tag': 'listener Method', 'name': 'Live.Track.Track.playing_slot_index_has_listener()', 'description': 'playing_slot_index_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_slot_index&quot;. C++ signature :  bool playing_slot_index_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'playing_slot_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9053, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_arm_listener()', 'description': 'remove_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;arm&quot;. C++ signature :  void remove_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9054, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_arrangement_clips_listener()', 'description': 'remove_arrangement_clips_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;arrangement_clips&quot;. C++ signature :  void remove_arrangement_clips_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_arrangement_clips_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9055, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_input_routing_channels_listener()', 'description': 'remove_available_input_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_channels&quot;. C++ signature :  void remove_available_input_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9056, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_input_routing_types_listener()', 'description': 'remove_available_input_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_types&quot;. C++ signature :  void remove_available_input_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9057, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_output_routing_channels_listener()', 'description': 'remove_available_output_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_output_routing_channels&quot;. C++ signature :  void remove_available_output_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_output_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9058, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_output_routing_types_listener()', 'description': 'remove_available_output_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_output_routing_types&quot;. C++ signature :  void remove_available_output_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_output_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9059, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_clip_slots_listener()', 'description': 'remove_clip_slots_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;clip_slots&quot;. C++ signature :  void remove_clip_slots_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9060, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9061, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_color_listener()', 'description': 'remove_color_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9062, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_input_routing_listener()', 'description': 'remove_current_input_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_input_routing&quot;. C++ signature :  void remove_current_input_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_input_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9063, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_input_sub_routing_listener()', 'description': 'remove_current_input_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_input_sub_routing&quot;. C++ signature :  void remove_current_input_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_input_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9064, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_monitoring_state_listener()', 'description': 'remove_current_monitoring_state_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_monitoring_state&quot;. C++ signature :  void remove_current_monitoring_state_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_monitoring_state_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9065, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_output_routing_listener()', 'description': 'remove_current_output_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_output_routing&quot;. C++ signature :  void remove_current_output_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_output_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9066, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_output_sub_routing_listener()', 'description': 'remove_current_output_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_output_sub_routing&quot;. C++ signature :  void remove_current_output_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_output_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9067, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_data_listener()', 'description': 'remove_data_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;data&quot;. C++ signature :  void remove_data_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_data_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9068, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_devices_listener()', 'description': 'remove_devices_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;devices&quot;. C++ signature :  void remove_devices_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_devices_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9069, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_fired_slot_index_listener()', 'description': 'remove_fired_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;fired_slot_index&quot;. C++ signature :  void remove_fired_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_fired_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9070, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_audio_input_listener()', 'description': 'remove_has_audio_input_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_audio_input&quot;. C++ signature :  void remove_has_audio_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_audio_input_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9071, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_audio_output_listener()', 'description': 'remove_has_audio_output_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_audio_output&quot;. C++ signature :  void remove_has_audio_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_audio_output_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9072, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_midi_input_listener()', 'description': 'remove_has_midi_input_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_midi_input&quot;. C++ signature :  void remove_has_midi_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_midi_input_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9073, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_midi_output_listener()', 'description': 'remove_has_midi_output_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_midi_output&quot;. C++ signature :  void remove_has_midi_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_midi_output_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9074, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_implicit_arm_listener()', 'description': 'remove_implicit_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;implicit_arm&quot;. C++ signature :  void remove_implicit_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_implicit_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9075, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_meter_left_listener()', 'description': 'remove_input_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_meter_left&quot;. C++ signature :  void remove_input_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9076, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_meter_level_listener()', 'description': 'remove_input_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_meter_level&quot;. C++ signature :  void remove_input_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9077, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_meter_right_listener()', 'description': 'remove_input_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_meter_right&quot;. C++ signature :  void remove_input_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9078, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_routing_channel_listener()', 'description': 'remove_input_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_channel&quot;. C++ signature :  void remove_input_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9079, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_routing_type_listener()', 'description': 'remove_input_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_type&quot;. C++ signature :  void remove_input_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9080, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_routings_listener()', 'description': 'remove_input_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routings&quot;. C++ signature :  void remove_input_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9081, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_sub_routings_listener()', 'description': 'remove_input_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_sub_routings&quot;. C++ signature :  void remove_input_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9082, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_is_frozen_listener()', 'description': 'remove_is_frozen_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_frozen&quot;. C++ signature :  void remove_is_frozen_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_is_frozen_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9083, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_is_showing_chains_listener()', 'description': 'remove_is_showing_chains_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_showing_chains&quot;. C++ signature :  void remove_is_showing_chains_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9084, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_mute_listener()', 'description': 'remove_mute_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9085, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_muted_via_solo_listener()', 'description': 'remove_muted_via_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted_via_solo&quot;. C++ signature :  void remove_muted_via_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9086, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_name_listener()', 'description': 'remove_name_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9087, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_meter_left_listener()', 'description': 'remove_output_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_meter_left&quot;. C++ signature :  void remove_output_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9088, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_meter_level_listener()', 'description': 'remove_output_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_meter_level&quot;. C++ signature :  void remove_output_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9089, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_meter_right_listener()', 'description': 'remove_output_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_meter_right&quot;. C++ signature :  void remove_output_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9090, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_routing_channel_listener()', 'description': 'remove_output_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_routing_channel&quot;. C++ signature :  void remove_output_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9091, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_routing_type_listener()', 'description': 'remove_output_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_routing_type&quot;. C++ signature :  void remove_output_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9092, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_routings_listener()', 'description': 'remove_output_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_routings&quot;. C++ signature :  void remove_output_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9093, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_sub_routings_listener()', 'description': 'remove_output_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_sub_routings&quot;. C++ signature :  void remove_output_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9094, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_performance_impact_listener()', 'description': 'remove_performance_impact_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;performance_impact&quot;. C++ signature :  void remove_performance_impact_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_performance_impact_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9095, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_playing_slot_index_listener()', 'description': 'remove_playing_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_slot_index&quot;. C++ signature :  void remove_playing_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_playing_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9096, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_solo_listener()', 'description': 'remove_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9099, 'tag': 'listener Method', 'name': 'Live.Track.Track.solo_has_listener()', 'description': 'solo_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 8736, 'children': [], 'group': 'listener Method'},
{'ref': 9103, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.add_device_insert_mode_listener()', 'description': 'add_device_insert_mode_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;device_insert_mode&quot; has changed. C++ signature :  void add_device_insert_mode_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'add_device_insert_mode_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9104, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9105, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.add_selected_device_listener()', 'description': 'add_selected_device_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_device&quot; has changed. C++ signature :  void add_selected_device_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'add_selected_device_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9106, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.device_insert_mode_has_listener()', 'description': 'device_insert_mode_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;device_insert_mode&quot;. C++ signature :  bool device_insert_mode_has_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'device_insert_mode_has_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9107, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9108, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.remove_device_insert_mode_listener()', 'description': 'remove_device_insert_mode_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;device_insert_mode&quot;. C++ signature :  void remove_device_insert_mode_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'remove_device_insert_mode_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9109, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9110, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.remove_selected_device_listener()', 'description': 'remove_selected_device_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_device&quot;. C++ signature :  void remove_selected_device_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'remove_selected_device_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9112, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.selected_device_has_listener()', 'description': 'selected_device_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_device&quot;. C++ signature :  bool selected_device_has_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'selected_device_has_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9141, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.add_device_insert_mode_listener()', 'description': 'add_device_insert_mode_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;device_insert_mode&quot; has changed. C++ signature :  void add_device_insert_mode_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'add_device_insert_mode_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9142, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9143, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.add_selected_device_listener()', 'description': 'add_selected_device_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_device&quot; has changed. C++ signature :  void add_selected_device_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'add_selected_device_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9146, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.device_insert_mode_has_listener()', 'description': 'device_insert_mode_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;device_insert_mode&quot;. C++ signature :  bool device_insert_mode_has_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'device_insert_mode_has_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9148, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9149, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.remove_device_insert_mode_listener()', 'description': 'remove_device_insert_mode_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;device_insert_mode&quot;. C++ signature :  void remove_device_insert_mode_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'remove_device_insert_mode_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9150, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9151, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.remove_selected_device_listener()', 'description': 'remove_selected_device_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_device&quot;. C++ signature :  void remove_selected_device_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'remove_selected_device_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9154, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.selected_device_has_listener()', 'description': 'selected_device_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_device&quot;. C++ signature :  bool selected_device_has_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'selected_device_has_listener()'], 'hierarchy': 4, 'ref_parent': 8877, 'children': [], 'group': 'listener Method'},
{'ref': 9733, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_filter_routing_listener()', 'description': 'add_filter_routing_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;filter_routing&quot; has changed. C++ signature :  void add_filter_routing_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_filter_routing_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9734, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9735, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9736, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9737, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_modulation_matrix_changed_listener()', 'description': 'add_modulation_matrix_changed_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;modulation_matrix_changed&quot; has changed. C++ signature :  void add_modulation_matrix_changed_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_modulation_matrix_changed_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9738, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_mono_poly_listener()', 'description': 'add_mono_poly_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly&quot; has changed. C++ signature :  void add_mono_poly_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9739, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9740, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_effect_mode_listener()', 'description': 'add_oscillator_1_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_effect_mode&quot; has changed. C++ signature :  void add_oscillator_1_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9741, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_wavetable_category_listener()', 'description': 'add_oscillator_1_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_wavetable_category&quot; has changed. C++ signature :  void add_oscillator_1_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9742, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_wavetable_index_listener()', 'description': 'add_oscillator_1_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_wavetable_index&quot; has changed. C++ signature :  void add_oscillator_1_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9743, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_wavetables_listener()', 'description': 'add_oscillator_1_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_wavetables&quot; has changed. C++ signature :  void add_oscillator_1_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9744, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_effect_mode_listener()', 'description': 'add_oscillator_2_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_effect_mode&quot; has changed. C++ signature :  void add_oscillator_2_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9745, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_wavetable_category_listener()', 'description': 'add_oscillator_2_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetable_category&quot; has changed. C++ signature :  void add_oscillator_2_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9746, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_wavetable_index_listener()', 'description': 'add_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetable_index&quot; has changed. C++ signature :  void add_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)add_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetable_index&quot; has changed. C++ signature :  void add_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9747, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_wavetables_listener()', 'description': 'add_oscillator_2_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetables&quot; has changed. C++ signature :  void add_oscillator_2_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9749, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9750, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_poly_voices_listener()', 'description': 'add_poly_voices_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;poly_voices&quot; has changed. C++ signature :  void add_poly_voices_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_poly_voices_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9751, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_unison_mode_listener()', 'description': 'add_unison_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;unison_mode&quot; has changed. C++ signature :  void add_unison_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_unison_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9752, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_unison_voice_count_listener()', 'description': 'add_unison_voice_count_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;unison_voice_count&quot; has changed. C++ signature :  void add_unison_voice_count_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_unison_voice_count_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9753, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_visible_modulation_target_names_listener()', 'description': 'add_visible_modulation_target_names_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_modulation_target_names&quot; has changed. C++ signature :  void add_visible_modulation_target_names_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_visible_modulation_target_names_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9754, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.filter_routing_has_listener()', 'description': 'filter_routing_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;filter_routing&quot;. C++ signature :  bool filter_routing_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'filter_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9757, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9759, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9760, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9761, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.modulation_matrix_changed_has_listener()', 'description': 'modulation_matrix_changed_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;modulation_matrix_changed&quot;. C++ signature :  bool modulation_matrix_changed_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'modulation_matrix_changed_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9762, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.mono_poly_has_listener()', 'description': 'mono_poly_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly&quot;. C++ signature :  bool mono_poly_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'mono_poly_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9763, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9764, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_effect_mode_has_listener()', 'description': 'oscillator_1_effect_mode_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_effect_mode&quot;. C++ signature :  bool oscillator_1_effect_mode_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_effect_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9765, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_wavetable_category_has_listener()', 'description': 'oscillator_1_wavetable_category_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_wavetable_category&quot;. C++ signature :  bool oscillator_1_wavetable_category_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_wavetable_category_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9766, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_wavetable_index_has_listener()', 'description': 'oscillator_1_wavetable_index_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_wavetable_index&quot;. C++ signature :  bool oscillator_1_wavetable_index_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_wavetable_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9767, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_wavetables_has_listener()', 'description': 'oscillator_1_wavetables_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_wavetables&quot;. C++ signature :  bool oscillator_1_wavetables_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_wavetables_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9768, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_effect_mode_has_listener()', 'description': 'oscillator_2_effect_mode_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_effect_mode&quot;. C++ signature :  bool oscillator_2_effect_mode_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_effect_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9769, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_wavetable_category_has_listener()', 'description': 'oscillator_2_wavetable_category_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetable_category&quot;. C++ signature :  bool oscillator_2_wavetable_category_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_wavetable_category_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9770, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_wavetable_index_has_listener()', 'description': 'oscillator_2_wavetable_index_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  bool oscillator_2_wavetable_index_has_listener(TWavetableDevicePyHandle,boost::python::api::object)oscillator_2_wavetable_index_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  bool oscillator_2_wavetable_index_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_wavetable_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9771, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_wavetables_has_listener()', 'description': 'oscillator_2_wavetables_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetables&quot;. C++ signature :  bool oscillator_2_wavetables_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_wavetables_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9772, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9773, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.poly_voices_has_listener()', 'description': 'poly_voices_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;poly_voices&quot;. C++ signature :  bool poly_voices_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'poly_voices_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9774, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_filter_routing_listener()', 'description': 'remove_filter_routing_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;filter_routing&quot;. C++ signature :  void remove_filter_routing_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_filter_routing_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9775, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9776, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9777, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9778, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_modulation_matrix_changed_listener()', 'description': 'remove_modulation_matrix_changed_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;modulation_matrix_changed&quot;. C++ signature :  void remove_modulation_matrix_changed_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_modulation_matrix_changed_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9779, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_mono_poly_listener()', 'description': 'remove_mono_poly_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mono_poly&quot;. C++ signature :  void remove_mono_poly_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9780, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9781, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_effect_mode_listener()', 'description': 'remove_oscillator_1_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_effect_mode&quot;. C++ signature :  void remove_oscillator_1_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9782, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_wavetable_category_listener()', 'description': 'remove_oscillator_1_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_wavetable_category&quot;. C++ signature :  void remove_oscillator_1_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9783, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_wavetable_index_listener()', 'description': 'remove_oscillator_1_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_wavetable_index&quot;. C++ signature :  void remove_oscillator_1_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9784, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_wavetables_listener()', 'description': 'remove_oscillator_1_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_wavetables&quot;. C++ signature :  void remove_oscillator_1_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9785, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_effect_mode_listener()', 'description': 'remove_oscillator_2_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_effect_mode&quot;. C++ signature :  void remove_oscillator_2_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9786, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_wavetable_category_listener()', 'description': 'remove_oscillator_2_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetable_category&quot;. C++ signature :  void remove_oscillator_2_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9787, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_wavetable_index_listener()', 'description': 'remove_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  void remove_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)remove_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  void remove_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9788, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_wavetables_listener()', 'description': 'remove_oscillator_2_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetables&quot;. C++ signature :  void remove_oscillator_2_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9789, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9790, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_poly_voices_listener()', 'description': 'remove_poly_voices_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;poly_voices&quot;. C++ signature :  void remove_poly_voices_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_poly_voices_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9791, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_unison_mode_listener()', 'description': 'remove_unison_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;unison_mode&quot;. C++ signature :  void remove_unison_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_unison_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9792, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_unison_voice_count_listener()', 'description': 'remove_unison_voice_count_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;unison_voice_count&quot;. C++ signature :  void remove_unison_voice_count_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_unison_voice_count_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9793, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_visible_modulation_target_names_listener()', 'description': 'remove_visible_modulation_target_names_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_modulation_target_names&quot;. C++ signature :  void remove_visible_modulation_target_names_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_visible_modulation_target_names_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9796, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.unison_mode_has_listener()', 'description': 'unison_mode_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;unison_mode&quot;. C++ signature :  bool unison_mode_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'unison_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9797, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.unison_voice_count_has_listener()', 'description': 'unison_voice_count_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;unison_voice_count&quot;. C++ signature :  bool unison_voice_count_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'unison_voice_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9798, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.visible_modulation_target_names_has_listener()', 'description': 'visible_modulation_target_names_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_modulation_target_names&quot;. C++ signature :  bool visible_modulation_target_names_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'visible_modulation_target_names_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9828, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_filter_routing_listener()', 'description': 'add_filter_routing_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;filter_routing&quot; has changed. C++ signature :  void add_filter_routing_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_filter_routing_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9829, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9830, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9831, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9832, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_modulation_matrix_changed_listener()', 'description': 'add_modulation_matrix_changed_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;modulation_matrix_changed&quot; has changed. C++ signature :  void add_modulation_matrix_changed_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_modulation_matrix_changed_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9833, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_mono_poly_listener()', 'description': 'add_mono_poly_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly&quot; has changed. C++ signature :  void add_mono_poly_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9834, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9835, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_effect_mode_listener()', 'description': 'add_oscillator_1_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_effect_mode&quot; has changed. C++ signature :  void add_oscillator_1_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9836, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_wavetable_category_listener()', 'description': 'add_oscillator_1_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_wavetable_category&quot; has changed. C++ signature :  void add_oscillator_1_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9837, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_wavetable_index_listener()', 'description': 'add_oscillator_1_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_wavetable_index&quot; has changed. C++ signature :  void add_oscillator_1_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9838, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_wavetables_listener()', 'description': 'add_oscillator_1_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_wavetables&quot; has changed. C++ signature :  void add_oscillator_1_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9839, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_effect_mode_listener()', 'description': 'add_oscillator_2_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_effect_mode&quot; has changed. C++ signature :  void add_oscillator_2_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9840, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_wavetable_category_listener()', 'description': 'add_oscillator_2_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetable_category&quot; has changed. C++ signature :  void add_oscillator_2_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9841, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_wavetable_index_listener()', 'description': 'add_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetable_index&quot; has changed. C++ signature :  void add_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)add_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetable_index&quot; has changed. C++ signature :  void add_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9842, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_wavetables_listener()', 'description': 'add_oscillator_2_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetables&quot; has changed. C++ signature :  void add_oscillator_2_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9844, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9845, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_poly_voices_listener()', 'description': 'add_poly_voices_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;poly_voices&quot; has changed. C++ signature :  void add_poly_voices_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_poly_voices_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9846, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_unison_mode_listener()', 'description': 'add_unison_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;unison_mode&quot; has changed. C++ signature :  void add_unison_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_unison_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9847, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_unison_voice_count_listener()', 'description': 'add_unison_voice_count_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;unison_voice_count&quot; has changed. C++ signature :  void add_unison_voice_count_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_unison_voice_count_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9848, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_visible_modulation_target_names_listener()', 'description': 'add_visible_modulation_target_names_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_modulation_target_names&quot; has changed. C++ signature :  void add_visible_modulation_target_names_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_visible_modulation_target_names_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9855, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.filter_routing_has_listener()', 'description': 'filter_routing_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;filter_routing&quot;. C++ signature :  bool filter_routing_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'filter_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9859, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9862, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9864, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9865, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.modulation_matrix_changed_has_listener()', 'description': 'modulation_matrix_changed_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;modulation_matrix_changed&quot;. C++ signature :  bool modulation_matrix_changed_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'modulation_matrix_changed_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9867, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.mono_poly_has_listener()', 'description': 'mono_poly_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly&quot;. C++ signature :  bool mono_poly_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'mono_poly_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9869, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9871, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_effect_mode_has_listener()', 'description': 'oscillator_1_effect_mode_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_effect_mode&quot;. C++ signature :  bool oscillator_1_effect_mode_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_effect_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9873, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_wavetable_category_has_listener()', 'description': 'oscillator_1_wavetable_category_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_wavetable_category&quot;. C++ signature :  bool oscillator_1_wavetable_category_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_wavetable_category_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9875, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_wavetable_index_has_listener()', 'description': 'oscillator_1_wavetable_index_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_wavetable_index&quot;. C++ signature :  bool oscillator_1_wavetable_index_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_wavetable_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9877, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_wavetables_has_listener()', 'description': 'oscillator_1_wavetables_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_wavetables&quot;. C++ signature :  bool oscillator_1_wavetables_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_wavetables_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9879, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_effect_mode_has_listener()', 'description': 'oscillator_2_effect_mode_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_effect_mode&quot;. C++ signature :  bool oscillator_2_effect_mode_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_effect_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9881, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_wavetable_category_has_listener()', 'description': 'oscillator_2_wavetable_category_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetable_category&quot;. C++ signature :  bool oscillator_2_wavetable_category_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_wavetable_category_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9883, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_wavetable_index_has_listener()', 'description': 'oscillator_2_wavetable_index_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  bool oscillator_2_wavetable_index_has_listener(TWavetableDevicePyHandle,boost::python::api::object)oscillator_2_wavetable_index_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  bool oscillator_2_wavetable_index_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_wavetable_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9885, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_wavetables_has_listener()', 'description': 'oscillator_2_wavetables_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetables&quot;. C++ signature :  bool oscillator_2_wavetables_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_wavetables_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9888, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9890, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.poly_voices_has_listener()', 'description': 'poly_voices_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;poly_voices&quot;. C++ signature :  bool poly_voices_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'poly_voices_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9891, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_filter_routing_listener()', 'description': 'remove_filter_routing_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;filter_routing&quot;. C++ signature :  void remove_filter_routing_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_filter_routing_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9892, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9893, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9894, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9895, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_modulation_matrix_changed_listener()', 'description': 'remove_modulation_matrix_changed_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;modulation_matrix_changed&quot;. C++ signature :  void remove_modulation_matrix_changed_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_modulation_matrix_changed_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9896, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_mono_poly_listener()', 'description': 'remove_mono_poly_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mono_poly&quot;. C++ signature :  void remove_mono_poly_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9897, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9898, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_effect_mode_listener()', 'description': 'remove_oscillator_1_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_effect_mode&quot;. C++ signature :  void remove_oscillator_1_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9899, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_wavetable_category_listener()', 'description': 'remove_oscillator_1_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_wavetable_category&quot;. C++ signature :  void remove_oscillator_1_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9900, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_wavetable_index_listener()', 'description': 'remove_oscillator_1_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_wavetable_index&quot;. C++ signature :  void remove_oscillator_1_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9901, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_wavetables_listener()', 'description': 'remove_oscillator_1_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_wavetables&quot;. C++ signature :  void remove_oscillator_1_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9902, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_effect_mode_listener()', 'description': 'remove_oscillator_2_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_effect_mode&quot;. C++ signature :  void remove_oscillator_2_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9903, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_wavetable_category_listener()', 'description': 'remove_oscillator_2_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetable_category&quot;. C++ signature :  void remove_oscillator_2_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9904, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_wavetable_index_listener()', 'description': 'remove_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  void remove_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)remove_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  void remove_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9905, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_wavetables_listener()', 'description': 'remove_oscillator_2_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetables&quot;. C++ signature :  void remove_oscillator_2_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9906, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9907, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_poly_voices_listener()', 'description': 'remove_poly_voices_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;poly_voices&quot;. C++ signature :  void remove_poly_voices_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_poly_voices_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9908, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_unison_mode_listener()', 'description': 'remove_unison_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;unison_mode&quot;. C++ signature :  void remove_unison_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_unison_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9909, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_unison_voice_count_listener()', 'description': 'remove_unison_voice_count_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;unison_voice_count&quot;. C++ signature :  void remove_unison_voice_count_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_unison_voice_count_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9910, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_visible_modulation_target_names_listener()', 'description': 'remove_visible_modulation_target_names_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_modulation_target_names&quot;. C++ signature :  void remove_visible_modulation_target_names_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_visible_modulation_target_names_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9915, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.unison_mode_has_listener()', 'description': 'unison_mode_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;unison_mode&quot;. C++ signature :  bool unison_mode_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'unison_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9917, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.unison_voice_count_has_listener()', 'description': 'unison_voice_count_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;unison_voice_count&quot;. C++ signature :  bool unison_voice_count_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'unison_voice_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9920, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.visible_modulation_target_names_has_listener()', 'description': 'visible_modulation_target_names_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_modulation_target_names&quot;. C++ signature :  bool visible_modulation_target_names_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'visible_modulation_target_names_has_listener()'], 'hierarchy': 3, 'ref_parent': 9732, 'children': [], 'group': 'listener Method'},
{'ref': 9922, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 9799, 'children': [], 'group': 'listener Method'},
{'ref': 9923, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 9799, 'children': [], 'group': 'listener Method'},
{'ref': 9924, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 9799, 'children': [], 'group': 'listener Method'},
{'ref': 9953, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 9799, 'children': [], 'group': 'listener Method'},
{'ref': 9956, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 9799, 'children': [], 'group': 'listener Method'},
{'ref': 9957, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 9799, 'children': [], 'group': 'listener Method'},
]