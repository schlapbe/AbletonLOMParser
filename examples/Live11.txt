{'ref': 17, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_control_surfaces_listener()', 'description': 'add_control_surfaces_listener( (Application)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;control_surfaces&quot; has changed. C++ signature :  void add_control_surfaces_listener(TPyHandle<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_control_surfaces_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'}
{'ref': 18, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_open_dialog_count_listener()', 'description': 'add_open_dialog_count_listener( (Application)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;open_dialog_count&quot; has changed. C++ signature :  void add_open_dialog_count_listener(TPyHandle<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_open_dialog_count_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'}
{'ref': 19, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_unavailable_features_listener()', 'description': 'add_unavailable_features_listener( (Application)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;unavailable_features&quot; has changed. C++ signature :  void add_unavailable_features_listener(TPyHandle<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_unavailable_features_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'}
{'ref': 20, 'tag': 'listener Method', 'name': 'Live.Application.Application.control_surfaces_has_listener()', 'description': 'control_surfaces_has_listener( (Application)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;control_surfaces&quot;. C++ signature :  bool control_surfaces_has_listener(TPyHandle<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'control_surfaces_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'}
{'ref': 26, 'tag': 'listener Method', 'name': 'Live.Application.Application.open_dialog_count_has_listener()', 'description': 'open_dialog_count_has_listener( (Application)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;open_dialog_count&quot;. C++ signature :  bool open_dialog_count_has_listener(TPyHandle<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'open_dialog_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'}
{'ref': 28, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_control_surfaces_listener()', 'description': 'remove_control_surfaces_listener( (Application)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;control_surfaces&quot;. C++ signature :  void remove_control_surfaces_listener(TPyHandle<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_control_surfaces_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'}
{'ref': 29, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_open_dialog_count_listener()', 'description': 'remove_open_dialog_count_listener( (Application)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;open_dialog_count&quot;. C++ signature :  void remove_open_dialog_count_listener(TPyHandle<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_open_dialog_count_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'}
{'ref': 30, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_unavailable_features_listener()', 'description': 'remove_unavailable_features_listener( (Application)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;unavailable_features&quot;. C++ signature :  void remove_unavailable_features_listener(TPyHandle<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_unavailable_features_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'}
{'ref': 31, 'tag': 'listener Method', 'name': 'Live.Application.Application.unavailable_features_has_listener()', 'description': 'unavailable_features_has_listener( (Application)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;unavailable_features&quot;. C++ signature :  bool unavailable_features_has_listener(TPyHandle<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'unavailable_features_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'}
{'ref': 37, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_browse_mode_listener()', 'description': 'add_browse_mode_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;browse_mode&quot; has changed. C++ signature :  void add_browse_mode_listener(TPyViewData<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_browse_mode_listener()'], 'hierarchy': 4, 'ref_parent': 32, 'children': [], 'group': 'listener Method'}
{'ref': 38, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_focused_document_view_listener()', 'description': 'add_focused_document_view_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;focused_document_view&quot; has changed. C++ signature :  void add_focused_document_view_listener(TPyViewData<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_focused_document_view_listener()'], 'hierarchy': 4, 'ref_parent': 32, 'children': [], 'group': 'listener Method'}
{'ref': 39, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_is_view_visible_listener()', 'description': 'add_is_view_visible_listener( (View)arg1, (object)arg2, (object)arg3) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_view_visible&quot; has changed. C++ signature :  void add_is_view_visible_listener(TPyViewData<ASongApp>,TString,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_is_view_visible_listener()'], 'hierarchy': 4, 'ref_parent': 32, 'children': [], 'group': 'listener Method'}
{'ref': 40, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_view_focus_changed_listener()', 'description': 'add_view_focus_changed_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;view_focus_changed&quot; has changed. C++ signature :  void add_view_focus_changed_listener(TPyViewData<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_view_focus_changed_listener()'], 'hierarchy': 4, 'ref_parent': 32, 'children': [], 'group': 'listener Method'}
{'ref': 42, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.browse_mode_has_listener()', 'description': 'browse_mode_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;browse_mode&quot;. C++ signature :  bool browse_mode_has_listener(TPyViewData<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'browse_mode_has_listener()'], 'hierarchy': 4, 'ref_parent': 32, 'children': [], 'group': 'listener Method'}
{'ref': 44, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.focused_document_view_has_listener()', 'description': 'focused_document_view_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;focused_document_view&quot;. C++ signature :  bool focused_document_view_has_listener(TPyViewData<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'focused_document_view_has_listener()'], 'hierarchy': 4, 'ref_parent': 32, 'children': [], 'group': 'listener Method'}
{'ref': 47, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.is_view_visible_has_listener()', 'description': 'is_view_visible_has_listener( (View)arg1, (object)arg2, (object)arg3) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_view_visible&quot;. C++ signature :  bool is_view_visible_has_listener(TPyViewData<ASongApp>,TString,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'is_view_visible_has_listener()'], 'hierarchy': 4, 'ref_parent': 32, 'children': [], 'group': 'listener Method'}
{'ref': 48, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_browse_mode_listener()', 'description': 'remove_browse_mode_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;browse_mode&quot;. C++ signature :  void remove_browse_mode_listener(TPyViewData<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_browse_mode_listener()'], 'hierarchy': 4, 'ref_parent': 32, 'children': [], 'group': 'listener Method'}
{'ref': 49, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_focused_document_view_listener()', 'description': 'remove_focused_document_view_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;focused_document_view&quot;. C++ signature :  void remove_focused_document_view_listener(TPyViewData<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_focused_document_view_listener()'], 'hierarchy': 4, 'ref_parent': 32, 'children': [], 'group': 'listener Method'}
{'ref': 50, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_is_view_visible_listener()', 'description': 'remove_is_view_visible_listener( (View)arg1, (object)arg2, (object)arg3) -> None : Remove a previously set listener function or method from property &quot;is_view_visible&quot;. C++ signature :  void remove_is_view_visible_listener(TPyViewData<ASongApp>,TString,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_is_view_visible_listener()'], 'hierarchy': 4, 'ref_parent': 32, 'children': [], 'group': 'listener Method'}
{'ref': 51, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_view_focus_changed_listener()', 'description': 'remove_view_focus_changed_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;view_focus_changed&quot;. C++ signature :  void remove_view_focus_changed_listener(TPyViewData<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_view_focus_changed_listener()'], 'hierarchy': 4, 'ref_parent': 32, 'children': [], 'group': 'listener Method'}
{'ref': 55, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.view_focus_changed_has_listener()', 'description': 'view_focus_changed_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;view_focus_changed&quot;. C++ signature :  bool view_focus_changed_has_listener(TPyViewData<ASongApp>,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'view_focus_changed_has_listener()'], 'hierarchy': 4, 'ref_parent': 32, 'children': [], 'group': 'listener Method'}
{'ref': 110, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.add_filter_type_listener()', 'description': 'add_filter_type_listener( (Browser)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;filter_type&quot; has changed. C++ signature :  void add_filter_type_listener(TPyHandle<ABrowserDelegate>,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'add_filter_type_listener()'], 'hierarchy': 3, 'ref_parent': 91, 'children': [], 'group': 'listener Method'}
{'ref': 111, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.add_full_refresh_listener()', 'description': 'add_full_refresh_listener( (Browser)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;full_refresh&quot; has changed. C++ signature :  void add_full_refresh_listener(TPyHandle<ABrowserDelegate>,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'add_full_refresh_listener()'], 'hierarchy': 3, 'ref_parent': 91, 'children': [], 'group': 'listener Method'}
{'ref': 112, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.add_hotswap_target_listener()', 'description': 'add_hotswap_target_listener( (Browser)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;hotswap_target&quot; has changed. C++ signature :  void add_hotswap_target_listener(TPyHandle<ABrowserDelegate>,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'add_hotswap_target_listener()'], 'hierarchy': 3, 'ref_parent': 91, 'children': [], 'group': 'listener Method'}
{'ref': 113, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.filter_type_has_listener()', 'description': 'filter_type_has_listener( (Browser)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;filter_type&quot;. C++ signature :  bool filter_type_has_listener(TPyHandle<ABrowserDelegate>,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'filter_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 91, 'children': [], 'group': 'listener Method'}
{'ref': 114, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.full_refresh_has_listener()', 'description': 'full_refresh_has_listener( (Browser)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;full_refresh&quot;. C++ signature :  bool full_refresh_has_listener(TPyHandle<ABrowserDelegate>,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'full_refresh_has_listener()'], 'hierarchy': 3, 'ref_parent': 91, 'children': [], 'group': 'listener Method'}
{'ref': 115, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.hotswap_target_has_listener()', 'description': 'hotswap_target_has_listener( (Browser)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;hotswap_target&quot;. C++ signature :  bool hotswap_target_has_listener(TPyHandle<ABrowserDelegate>,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'hotswap_target_has_listener()'], 'hierarchy': 3, 'ref_parent': 91, 'children': [], 'group': 'listener Method'}
{'ref': 119, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.remove_filter_type_listener()', 'description': 'remove_filter_type_listener( (Browser)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;filter_type&quot;. C++ signature :  void remove_filter_type_listener(TPyHandle<ABrowserDelegate>,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'remove_filter_type_listener()'], 'hierarchy': 3, 'ref_parent': 91, 'children': [], 'group': 'listener Method'}
{'ref': 120, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.remove_full_refresh_listener()', 'description': 'remove_full_refresh_listener( (Browser)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;full_refresh&quot;. C++ signature :  void remove_full_refresh_listener(TPyHandle<ABrowserDelegate>,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'remove_full_refresh_listener()'], 'hierarchy': 3, 'ref_parent': 91, 'children': [], 'group': 'listener Method'}
{'ref': 121, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.remove_hotswap_target_listener()', 'description': 'remove_hotswap_target_listener( (Browser)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;hotswap_target&quot;. C++ signature :  void remove_hotswap_target_listener(TPyHandle<ABrowserDelegate>,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'remove_hotswap_target_listener()'], 'hierarchy': 3, 'ref_parent': 91, 'children': [], 'group': 'listener Method'}
{'ref': 170, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_color_index_listener()', 'description': 'add_color_index_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 171, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_color_listener()', 'description': 'add_color_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 172, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_devices_listener()', 'description': 'add_devices_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;devices&quot; has changed. C++ signature :  void add_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_devices_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 173, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_is_auto_colored_listener()', 'description': 'add_is_auto_colored_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_auto_colored&quot; has changed. C++ signature :  void add_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 174, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_mute_listener()', 'description': 'add_mute_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 175, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_muted_via_solo_listener()', 'description': 'add_muted_via_solo_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;muted_via_solo&quot; has changed. C++ signature :  void add_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 176, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_name_listener()', 'description': 'add_name_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 177, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_solo_listener()', 'description': 'add_solo_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 178, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.color_has_listener()', 'description': 'color_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 179, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.color_index_has_listener()', 'description': 'color_index_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 181, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.devices_has_listener()', 'description': 'devices_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;devices&quot;. C++ signature :  bool devices_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'devices_has_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 182, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.is_auto_colored_has_listener()', 'description': 'is_auto_colored_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_auto_colored&quot;. C++ signature :  bool is_auto_colored_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'is_auto_colored_has_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 183, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.mute_has_listener()', 'description': 'mute_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 184, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.muted_via_solo_has_listener()', 'description': 'muted_via_solo_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;muted_via_solo&quot;. C++ signature :  bool muted_via_solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'muted_via_solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 185, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.name_has_listener()', 'description': 'name_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 186, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 187, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_color_listener()', 'description': 'remove_color_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 188, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_devices_listener()', 'description': 'remove_devices_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;devices&quot;. C++ signature :  void remove_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_devices_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 189, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_is_auto_colored_listener()', 'description': 'remove_is_auto_colored_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_auto_colored&quot;. C++ signature :  void remove_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 190, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_mute_listener()', 'description': 'remove_mute_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 191, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_muted_via_solo_listener()', 'description': 'remove_muted_via_solo_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;muted_via_solo&quot;. C++ signature :  void remove_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 192, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_name_listener()', 'description': 'remove_name_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 193, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_solo_listener()', 'description': 'remove_solo_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 194, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.solo_has_listener()', 'description': 'solo_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 154, 'children': [], 'group': 'listener Method'}
{'ref': 203, 'tag': 'listener Method', 'name': 'Live.ChainMixerDevice.ChainMixerDevice.add_sends_listener()', 'description': 'add_sends_listener( (ChainMixerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;sends&quot; has changed. C++ signature :  void add_sends_listener(TPyHandle<ABranchMixerDevice>,boost::python::api::object)', 'path': ['Live', 'ChainMixerDevice', 'ChainMixerDevice', 'add_sends_listener()'], 'hierarchy': 3, 'ref_parent': 196, 'children': [], 'group': 'listener Method'}
{'ref': 204, 'tag': 'listener Method', 'name': 'Live.ChainMixerDevice.ChainMixerDevice.remove_sends_listener()', 'description': 'remove_sends_listener( (ChainMixerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;sends&quot;. C++ signature :  void remove_sends_listener(TPyHandle<ABranchMixerDevice>,boost::python::api::object)', 'path': ['Live', 'ChainMixerDevice', 'ChainMixerDevice', 'remove_sends_listener()'], 'hierarchy': 3, 'ref_parent': 196, 'children': [], 'group': 'listener Method'}
{'ref': 205, 'tag': 'listener Method', 'name': 'Live.ChainMixerDevice.ChainMixerDevice.sends_has_listener()', 'description': 'sends_has_listener( (ChainMixerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;sends&quot;. C++ signature :  bool sends_has_listener(TPyHandle<ABranchMixerDevice>,boost::python::api::object)', 'path': ['Live', 'ChainMixerDevice', 'ChainMixerDevice', 'sends_has_listener()'], 'hierarchy': 3, 'ref_parent': 196, 'children': [], 'group': 'listener Method'}
{'ref': 256, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_color_index_listener()', 'description': 'add_color_index_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 257, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_color_listener()', 'description': 'add_color_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 258, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_end_marker_listener()', 'description': 'add_end_marker_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;end_marker&quot; has changed. C++ signature :  void add_end_marker_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 259, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_end_time_listener()', 'description': 'add_end_time_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;end_time&quot; has changed. C++ signature :  void add_end_time_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_end_time_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 260, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_file_path_listener()', 'description': 'add_file_path_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;file_path&quot; has changed. C++ signature :  void add_file_path_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 261, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_gain_listener()', 'description': 'add_gain_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;gain&quot; has changed. C++ signature :  void add_gain_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_gain_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 262, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_groove_listener()', 'description': 'add_groove_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;groove&quot; has changed. C++ signature :  void add_groove_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_groove_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 263, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_has_envelopes_listener()', 'description': 'add_has_envelopes_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;has_envelopes&quot; has changed. C++ signature :  void add_has_envelopes_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_has_envelopes_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 264, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_is_overdubbing_listener()', 'description': 'add_is_overdubbing_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_overdubbing&quot; has changed. C++ signature :  void add_is_overdubbing_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_is_overdubbing_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 265, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_is_recording_listener()', 'description': 'add_is_recording_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_recording&quot; has changed. C++ signature :  void add_is_recording_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_is_recording_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 266, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_launch_mode_listener()', 'description': 'add_launch_mode_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;launch_mode&quot; has changed. C++ signature :  void add_launch_mode_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_launch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 267, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_launch_quantization_listener()', 'description': 'add_launch_quantization_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;launch_quantization&quot; has changed. C++ signature :  void add_launch_quantization_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_launch_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 268, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_legato_listener()', 'description': 'add_legato_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;legato&quot; has changed. C++ signature :  void add_legato_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_legato_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 269, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_loop_end_listener()', 'description': 'add_loop_end_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;loop_end&quot; has changed. C++ signature :  void add_loop_end_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_loop_end_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 270, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_loop_jump_listener()', 'description': 'add_loop_jump_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;loop_jump&quot; has changed. C++ signature :  void add_loop_jump_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_loop_jump_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 271, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_loop_start_listener()', 'description': 'add_loop_start_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;loop_start&quot; has changed. C++ signature :  void add_loop_start_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 272, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_looping_listener()', 'description': 'add_looping_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;looping&quot; has changed. C++ signature :  void add_looping_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_looping_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 273, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_muted_listener()', 'description': 'add_muted_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;muted&quot; has changed. C++ signature :  void add_muted_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_muted_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 274, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_name_listener()', 'description': 'add_name_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 276, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_notes_listener()', 'description': 'add_notes_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;notes&quot; has changed. C++ signature :  void add_notes_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_notes_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 277, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_pitch_coarse_listener()', 'description': 'add_pitch_coarse_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;pitch_coarse&quot; has changed. C++ signature :  void add_pitch_coarse_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_pitch_coarse_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 278, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_pitch_fine_listener()', 'description': 'add_pitch_fine_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;pitch_fine&quot; has changed. C++ signature :  void add_pitch_fine_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_pitch_fine_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 279, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_playing_position_listener()', 'description': 'add_playing_position_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;playing_position&quot; has changed. C++ signature :  void add_playing_position_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 280, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_playing_status_listener()', 'description': 'add_playing_status_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;playing_status&quot; has changed. C++ signature :  void add_playing_status_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 281, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_position_listener()', 'description': 'add_position_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;position&quot; has changed. C++ signature :  void add_position_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_position_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 282, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_ram_mode_listener()', 'description': 'add_ram_mode_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;ram_mode&quot; has changed. C++ signature :  void add_ram_mode_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_ram_mode_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 283, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_signature_denominator_listener()', 'description': 'add_signature_denominator_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;signature_denominator&quot; has changed. C++ signature :  void add_signature_denominator_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 284, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_signature_numerator_listener()', 'description': 'add_signature_numerator_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;signature_numerator&quot; has changed. C++ signature :  void add_signature_numerator_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 285, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_start_marker_listener()', 'description': 'add_start_marker_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;start_marker&quot; has changed. C++ signature :  void add_start_marker_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 286, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_velocity_amount_listener()', 'description': 'add_velocity_amount_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;velocity_amount&quot; has changed. C++ signature :  void add_velocity_amount_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 287, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_warp_markers_listener()', 'description': 'add_warp_markers_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;warp_markers&quot; has changed. C++ signature :  void add_warp_markers_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 288, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_warp_mode_listener()', 'description': 'add_warp_mode_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;warp_mode&quot; has changed. C++ signature :  void add_warp_mode_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 289, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_warping_listener()', 'description': 'add_warping_listener( (Clip)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;warping&quot; has changed. C++ signature :  void add_warping_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_warping_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 295, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.color_has_listener()', 'description': 'color_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 296, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.color_index_has_listener()', 'description': 'color_index_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 302, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.end_marker_has_listener()', 'description': 'end_marker_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;end_marker&quot;. C++ signature :  bool end_marker_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'end_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 303, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.end_time_has_listener()', 'description': 'end_time_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;end_time&quot;. C++ signature :  bool end_time_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'end_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 304, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.file_path_has_listener()', 'description': 'file_path_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;file_path&quot;. C++ signature :  bool file_path_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'file_path_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 306, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.gain_has_listener()', 'description': 'gain_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;gain&quot;. C++ signature :  bool gain_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'gain_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 312, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.groove_has_listener()', 'description': 'groove_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;groove&quot;. C++ signature :  bool groove_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'groove_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 313, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.has_envelopes_has_listener()', 'description': 'has_envelopes_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;has_envelopes&quot;. C++ signature :  bool has_envelopes_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'has_envelopes_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 314, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.is_overdubbing_has_listener()', 'description': 'is_overdubbing_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_overdubbing&quot;. C++ signature :  bool is_overdubbing_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'is_overdubbing_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 315, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.is_recording_has_listener()', 'description': 'is_recording_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_recording&quot;. C++ signature :  bool is_recording_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'is_recording_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 316, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.launch_mode_has_listener()', 'description': 'launch_mode_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;launch_mode&quot;. C++ signature :  bool launch_mode_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'launch_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 317, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.launch_quantization_has_listener()', 'description': 'launch_quantization_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;launch_quantization&quot;. C++ signature :  bool launch_quantization_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'launch_quantization_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 318, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.legato_has_listener()', 'description': 'legato_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;legato&quot;. C++ signature :  bool legato_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'legato_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 319, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.loop_end_has_listener()', 'description': 'loop_end_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;loop_end&quot;. C++ signature :  bool loop_end_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'loop_end_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 320, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.loop_jump_has_listener()', 'description': 'loop_jump_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;loop_jump&quot;. C++ signature :  bool loop_jump_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'loop_jump_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 321, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.loop_start_has_listener()', 'description': 'loop_start_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;loop_start&quot;. C++ signature :  bool loop_start_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'loop_start_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 322, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.looping_has_listener()', 'description': 'looping_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;looping&quot;. C++ signature :  bool looping_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'looping_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 324, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.muted_has_listener()', 'description': 'muted_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;muted&quot;. C++ signature :  bool muted_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'muted_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 325, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.name_has_listener()', 'description': 'name_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 326, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.notes_has_listener()', 'description': 'notes_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;notes&quot;. C++ signature :  bool notes_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'notes_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 327, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.pitch_coarse_has_listener()', 'description': 'pitch_coarse_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_coarse&quot;. C++ signature :  bool pitch_coarse_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'pitch_coarse_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 328, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.pitch_fine_has_listener()', 'description': 'pitch_fine_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_fine&quot;. C++ signature :  bool pitch_fine_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'pitch_fine_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 329, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.playing_position_has_listener()', 'description': 'playing_position_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;playing_position&quot;. C++ signature :  bool playing_position_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'playing_position_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 330, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.playing_status_has_listener()', 'description': 'playing_status_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;playing_status&quot;. C++ signature :  bool playing_status_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'playing_status_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 331, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.position_has_listener()', 'description': 'position_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;position&quot;. C++ signature :  bool position_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'position_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 334, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.ram_mode_has_listener()', 'description': 'ram_mode_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;ram_mode&quot;. C++ signature :  bool ram_mode_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'ram_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 335, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 336, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_color_listener()', 'description': 'remove_color_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 337, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_end_marker_listener()', 'description': 'remove_end_marker_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;end_marker&quot;. C++ signature :  void remove_end_marker_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 338, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_end_time_listener()', 'description': 'remove_end_time_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;end_time&quot;. C++ signature :  void remove_end_time_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_end_time_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 339, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_file_path_listener()', 'description': 'remove_file_path_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;file_path&quot;. C++ signature :  void remove_file_path_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 340, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_gain_listener()', 'description': 'remove_gain_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;gain&quot;. C++ signature :  void remove_gain_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_gain_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 341, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_groove_listener()', 'description': 'remove_groove_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;groove&quot;. C++ signature :  void remove_groove_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_groove_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 342, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_has_envelopes_listener()', 'description': 'remove_has_envelopes_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;has_envelopes&quot;. C++ signature :  void remove_has_envelopes_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_has_envelopes_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 343, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_is_overdubbing_listener()', 'description': 'remove_is_overdubbing_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_overdubbing&quot;. C++ signature :  void remove_is_overdubbing_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_is_overdubbing_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 344, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_is_recording_listener()', 'description': 'remove_is_recording_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_recording&quot;. C++ signature :  void remove_is_recording_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_is_recording_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 345, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_launch_mode_listener()', 'description': 'remove_launch_mode_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;launch_mode&quot;. C++ signature :  void remove_launch_mode_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_launch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 346, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_launch_quantization_listener()', 'description': 'remove_launch_quantization_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;launch_quantization&quot;. C++ signature :  void remove_launch_quantization_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_launch_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 347, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_legato_listener()', 'description': 'remove_legato_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;legato&quot;. C++ signature :  void remove_legato_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_legato_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 348, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_loop_end_listener()', 'description': 'remove_loop_end_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;loop_end&quot;. C++ signature :  void remove_loop_end_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_loop_end_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 349, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_loop_jump_listener()', 'description': 'remove_loop_jump_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;loop_jump&quot;. C++ signature :  void remove_loop_jump_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_loop_jump_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 350, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_loop_start_listener()', 'description': 'remove_loop_start_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;loop_start&quot;. C++ signature :  void remove_loop_start_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 351, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_looping_listener()', 'description': 'remove_looping_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;looping&quot;. C++ signature :  void remove_looping_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_looping_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 352, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_muted_listener()', 'description': 'remove_muted_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;muted&quot;. C++ signature :  void remove_muted_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_muted_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 353, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_name_listener()', 'description': 'remove_name_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 357, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_notes_listener()', 'description': 'remove_notes_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;notes&quot;. C++ signature :  void remove_notes_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_notes_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 358, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_pitch_coarse_listener()', 'description': 'remove_pitch_coarse_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;pitch_coarse&quot;. C++ signature :  void remove_pitch_coarse_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_pitch_coarse_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 359, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_pitch_fine_listener()', 'description': 'remove_pitch_fine_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;pitch_fine&quot;. C++ signature :  void remove_pitch_fine_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_pitch_fine_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 360, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_playing_position_listener()', 'description': 'remove_playing_position_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;playing_position&quot;. C++ signature :  void remove_playing_position_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 361, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_playing_status_listener()', 'description': 'remove_playing_status_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;playing_status&quot;. C++ signature :  void remove_playing_status_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 362, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_position_listener()', 'description': 'remove_position_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;position&quot;. C++ signature :  void remove_position_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_position_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 363, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_ram_mode_listener()', 'description': 'remove_ram_mode_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;ram_mode&quot;. C++ signature :  void remove_ram_mode_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_ram_mode_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 364, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_signature_denominator_listener()', 'description': 'remove_signature_denominator_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;signature_denominator&quot;. C++ signature :  void remove_signature_denominator_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 365, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_signature_numerator_listener()', 'description': 'remove_signature_numerator_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;signature_numerator&quot;. C++ signature :  void remove_signature_numerator_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 366, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_start_marker_listener()', 'description': 'remove_start_marker_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;start_marker&quot;. C++ signature :  void remove_start_marker_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 367, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_velocity_amount_listener()', 'description': 'remove_velocity_amount_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;velocity_amount&quot;. C++ signature :  void remove_velocity_amount_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 368, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_warp_markers_listener()', 'description': 'remove_warp_markers_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;warp_markers&quot;. C++ signature :  void remove_warp_markers_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 369, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_warp_mode_listener()', 'description': 'remove_warp_mode_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;warp_mode&quot;. C++ signature :  void remove_warp_mode_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 370, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_warping_listener()', 'description': 'remove_warping_listener( (Clip)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;warping&quot;. C++ signature :  void remove_warping_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_warping_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 378, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.signature_denominator_has_listener()', 'description': 'signature_denominator_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;signature_denominator&quot;. C++ signature :  bool signature_denominator_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'signature_denominator_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 379, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.signature_numerator_has_listener()', 'description': 'signature_numerator_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;signature_numerator&quot;. C++ signature :  bool signature_numerator_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'signature_numerator_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 380, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.start_marker_has_listener()', 'description': 'start_marker_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;start_marker&quot;. C++ signature :  bool start_marker_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'start_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 383, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.velocity_amount_has_listener()', 'description': 'velocity_amount_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;velocity_amount&quot;. C++ signature :  bool velocity_amount_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'velocity_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 384, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.warp_markers_has_listener()', 'description': 'warp_markers_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;warp_markers&quot;. C++ signature :  bool warp_markers_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'warp_markers_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 385, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.warp_mode_has_listener()', 'description': 'warp_mode_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;warp_mode&quot;. C++ signature :  bool warp_mode_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'warp_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 386, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.warping_has_listener()', 'description': 'warping_has_listener( (Clip)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;warping&quot;. C++ signature :  bool warping_has_listener(TPyHandle<AClip>,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'warping_has_listener()'], 'hierarchy': 3, 'ref_parent': 210, 'children': [], 'group': 'listener Method'}
{'ref': 474, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_color_index_listener()', 'description': 'add_color_index_listener( (ClipSlot)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 475, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_color_listener()', 'description': 'add_color_listener( (ClipSlot)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 476, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_controls_other_clips_listener()', 'description': 'add_controls_other_clips_listener( (ClipSlot)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;controls_other_clips&quot; has changed. C++ signature :  void add_controls_other_clips_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_controls_other_clips_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 477, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_has_clip_listener()', 'description': 'add_has_clip_listener( (ClipSlot)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;has_clip&quot; has changed. C++ signature :  void add_has_clip_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_has_clip_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 478, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_has_stop_button_listener()', 'description': 'add_has_stop_button_listener( (ClipSlot)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;has_stop_button&quot; has changed. C++ signature :  void add_has_stop_button_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_has_stop_button_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 479, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_is_triggered_listener()', 'description': 'add_is_triggered_listener( (ClipSlot)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_triggered&quot; has changed. C++ signature :  void add_is_triggered_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 480, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_playing_status_listener()', 'description': 'add_playing_status_listener( (ClipSlot)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;playing_status&quot; has changed. C++ signature :  void add_playing_status_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 481, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.color_has_listener()', 'description': 'color_has_listener( (ClipSlot)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 482, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.color_index_has_listener()', 'description': 'color_index_has_listener( (ClipSlot)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 483, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.controls_other_clips_has_listener()', 'description': 'controls_other_clips_has_listener( (ClipSlot)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;controls_other_clips&quot;. C++ signature :  bool controls_other_clips_has_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'controls_other_clips_has_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 488, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.has_clip_has_listener()', 'description': 'has_clip_has_listener( (ClipSlot)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;has_clip&quot;. C++ signature :  bool has_clip_has_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'has_clip_has_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 489, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.has_stop_button_has_listener()', 'description': 'has_stop_button_has_listener( (ClipSlot)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;has_stop_button&quot;. C++ signature :  bool has_stop_button_has_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'has_stop_button_has_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 490, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.is_triggered_has_listener()', 'description': 'is_triggered_has_listener( (ClipSlot)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_triggered&quot;. C++ signature :  bool is_triggered_has_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'is_triggered_has_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 491, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.playing_status_has_listener()', 'description': 'playing_status_has_listener( (ClipSlot)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;playing_status&quot;. C++ signature :  bool playing_status_has_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'playing_status_has_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 492, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_color_index_listener()', 'description': 'remove_color_index_listener( (ClipSlot)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 493, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_color_listener()', 'description': 'remove_color_listener( (ClipSlot)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 494, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_controls_other_clips_listener()', 'description': 'remove_controls_other_clips_listener( (ClipSlot)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;controls_other_clips&quot;. C++ signature :  void remove_controls_other_clips_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_controls_other_clips_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 495, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_has_clip_listener()', 'description': 'remove_has_clip_listener( (ClipSlot)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;has_clip&quot;. C++ signature :  void remove_has_clip_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_has_clip_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 496, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_has_stop_button_listener()', 'description': 'remove_has_stop_button_listener( (ClipSlot)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;has_stop_button&quot;. C++ signature :  void remove_has_stop_button_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_has_stop_button_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 497, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_is_triggered_listener()', 'description': 'remove_is_triggered_listener( (ClipSlot)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_triggered&quot;. C++ signature :  void remove_is_triggered_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 498, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_playing_status_listener()', 'description': 'remove_playing_status_listener( (ClipSlot)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;playing_status&quot;. C++ signature :  void remove_playing_status_listener(TPyHandle<AGroupAndClipSlotBase>,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 459, 'children': [], 'group': 'listener Method'}
{'ref': 522, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_available_input_routing_channels_listener()', 'description': 'add_available_input_routing_channels_listener( (CompressorDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_channels&quot; has changed. C++ signature :  void add_available_input_routing_channels_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 523, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_available_input_routing_types_listener()', 'description': 'add_available_input_routing_types_listener( (CompressorDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_types&quot; has changed. C++ signature :  void add_available_input_routing_types_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 524, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_input_routing_channel_listener()', 'description': 'add_input_routing_channel_listener( (CompressorDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_channel&quot; has changed. C++ signature :  void add_input_routing_channel_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 525, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_input_routing_type_listener()', 'description': 'add_input_routing_type_listener( (CompressorDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_type&quot; has changed. C++ signature :  void add_input_routing_type_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 526, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 527, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 528, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 529, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.available_input_routing_channels_has_listener()', 'description': 'available_input_routing_channels_has_listener( (CompressorDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_channels&quot;. C++ signature :  bool available_input_routing_channels_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'available_input_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 530, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.available_input_routing_types_has_listener()', 'description': 'available_input_routing_types_has_listener( (CompressorDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_types&quot;. C++ signature :  bool available_input_routing_types_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'available_input_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 531, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.input_routing_channel_has_listener()', 'description': 'input_routing_channel_has_listener( (CompressorDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_channel&quot;. C++ signature :  bool input_routing_channel_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'input_routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 532, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.input_routing_type_has_listener()', 'description': 'input_routing_type_has_listener( (CompressorDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_type&quot;. C++ signature :  bool input_routing_type_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'input_routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 533, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 534, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 535, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 536, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_available_input_routing_channels_listener()', 'description': 'remove_available_input_routing_channels_listener( (CompressorDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;available_input_routing_channels&quot;. C++ signature :  void remove_available_input_routing_channels_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 537, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_available_input_routing_types_listener()', 'description': 'remove_available_input_routing_types_listener( (CompressorDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;available_input_routing_types&quot;. C++ signature :  void remove_available_input_routing_types_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 538, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_input_routing_channel_listener()', 'description': 'remove_input_routing_channel_listener( (CompressorDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;input_routing_channel&quot;. C++ signature :  void remove_input_routing_channel_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 539, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_input_routing_type_listener()', 'description': 'remove_input_routing_type_listener( (CompressorDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;input_routing_type&quot;. C++ signature :  void remove_input_routing_type_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 540, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 541, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 542, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 506, 'children': [], 'group': 'listener Method'}
{'ref': 548, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 544, 'children': [], 'group': 'listener Method'}
{'ref': 549, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 544, 'children': [], 'group': 'listener Method'}
{'ref': 550, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 544, 'children': [], 'group': 'listener Method'}
{'ref': 579, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 567, 'children': [], 'group': 'listener Method'}
{'ref': 580, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 567, 'children': [], 'group': 'listener Method'}
{'ref': 581, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 567, 'children': [], 'group': 'listener Method'}
{'ref': 582, 'tag': 'listener Method', 'name': 'Live.Device.Device.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 567, 'children': [], 'group': 'listener Method'}
{'ref': 583, 'tag': 'listener Method', 'name': 'Live.Device.Device.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 567, 'children': [], 'group': 'listener Method'}
{'ref': 584, 'tag': 'listener Method', 'name': 'Live.Device.Device.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 567, 'children': [], 'group': 'listener Method'}
{'ref': 585, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 567, 'children': [], 'group': 'listener Method'}
{'ref': 586, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 567, 'children': [], 'group': 'listener Method'}
{'ref': 587, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 567, 'children': [], 'group': 'listener Method'}
{'ref': 593, 'tag': 'listener Method', 'name': 'Live.Device.Device.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 589, 'children': [], 'group': 'listener Method'}
{'ref': 594, 'tag': 'listener Method', 'name': 'Live.Device.Device.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 589, 'children': [], 'group': 'listener Method'}
{'ref': 595, 'tag': 'listener Method', 'name': 'Live.Device.Device.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 589, 'children': [], 'group': 'listener Method'}
{'ref': 610, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_available_routing_channels_listener()', 'description': 'add_available_routing_channels_listener( (DeviceIO)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;available_routing_channels&quot; has changed. C++ signature :  void add_available_routing_channels_listener(TPyHandle<AMxDRoutable>,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_available_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 602, 'children': [], 'group': 'listener Method'}
{'ref': 611, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_available_routing_types_listener()', 'description': 'add_available_routing_types_listener( (DeviceIO)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;available_routing_types&quot; has changed. C++ signature :  void add_available_routing_types_listener(TPyHandle<AMxDRoutable>,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_available_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 602, 'children': [], 'group': 'listener Method'}
{'ref': 612, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_routing_channel_listener()', 'description': 'add_routing_channel_listener( (DeviceIO)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;routing_channel&quot; has changed. C++ signature :  void add_routing_channel_listener(TPyHandle<AMxDRoutable>,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 602, 'children': [], 'group': 'listener Method'}
{'ref': 613, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_routing_type_listener()', 'description': 'add_routing_type_listener( (DeviceIO)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;routing_type&quot; has changed. C++ signature :  void add_routing_type_listener(TPyHandle<AMxDRoutable>,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 602, 'children': [], 'group': 'listener Method'}
{'ref': 614, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.available_routing_channels_has_listener()', 'description': 'available_routing_channels_has_listener( (DeviceIO)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;available_routing_channels&quot;. C++ signature :  bool available_routing_channels_has_listener(TPyHandle<AMxDRoutable>,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'available_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 602, 'children': [], 'group': 'listener Method'}
{'ref': 615, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.available_routing_types_has_listener()', 'description': 'available_routing_types_has_listener( (DeviceIO)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;available_routing_types&quot;. C++ signature :  bool available_routing_types_has_listener(TPyHandle<AMxDRoutable>,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'available_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 602, 'children': [], 'group': 'listener Method'}
{'ref': 616, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_available_routing_channels_listener()', 'description': 'remove_available_routing_channels_listener( (DeviceIO)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;available_routing_channels&quot;. C++ signature :  void remove_available_routing_channels_listener(TPyHandle<AMxDRoutable>,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_available_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 602, 'children': [], 'group': 'listener Method'}
{'ref': 617, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_available_routing_types_listener()', 'description': 'remove_available_routing_types_listener( (DeviceIO)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;available_routing_types&quot;. C++ signature :  void remove_available_routing_types_listener(TPyHandle<AMxDRoutable>,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_available_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 602, 'children': [], 'group': 'listener Method'}
{'ref': 618, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_routing_channel_listener()', 'description': 'remove_routing_channel_listener( (DeviceIO)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;routing_channel&quot;. C++ signature :  void remove_routing_channel_listener(TPyHandle<AMxDRoutable>,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 602, 'children': [], 'group': 'listener Method'}
{'ref': 619, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_routing_type_listener()', 'description': 'remove_routing_type_listener( (DeviceIO)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;routing_type&quot;. C++ signature :  void remove_routing_type_listener(TPyHandle<AMxDRoutable>,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 602, 'children': [], 'group': 'listener Method'}
{'ref': 620, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.routing_channel_has_listener()', 'description': 'routing_channel_has_listener( (DeviceIO)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;routing_channel&quot;. C++ signature :  bool routing_channel_has_listener(TPyHandle<AMxDRoutable>,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 602, 'children': [], 'group': 'listener Method'}
{'ref': 621, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.routing_type_has_listener()', 'description': 'routing_type_has_listener( (DeviceIO)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;routing_type&quot;. C++ signature :  bool routing_type_has_listener(TPyHandle<AMxDRoutable>,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 602, 'children': [], 'group': 'listener Method'}
{'ref': 641, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_automation_state_listener()', 'description': 'add_automation_state_listener( (DeviceParameter)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;automation_state&quot; has changed. C++ signature :  void add_automation_state_listener(TPyHandle<ATimeableValue>,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_automation_state_listener()'], 'hierarchy': 3, 'ref_parent': 627, 'children': [], 'group': 'listener Method'}
{'ref': 642, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_name_listener()', 'description': 'add_name_listener( (DeviceParameter)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<ATimeableValue>,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 627, 'children': [], 'group': 'listener Method'}
{'ref': 643, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_state_listener()', 'description': 'add_state_listener( (DeviceParameter)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;state&quot; has changed. C++ signature :  void add_state_listener(TPyHandle<ATimeableValue>,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_state_listener()'], 'hierarchy': 3, 'ref_parent': 627, 'children': [], 'group': 'listener Method'}
{'ref': 644, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_value_listener()', 'description': 'add_value_listener( (DeviceParameter)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;value&quot; has changed. C++ signature :  void add_value_listener(TPyHandle<ATimeableValue>,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_value_listener()'], 'hierarchy': 3, 'ref_parent': 627, 'children': [], 'group': 'listener Method'}
{'ref': 645, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.automation_state_has_listener()', 'description': 'automation_state_has_listener( (DeviceParameter)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;automation_state&quot;. C++ signature :  bool automation_state_has_listener(TPyHandle<ATimeableValue>,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'automation_state_has_listener()'], 'hierarchy': 3, 'ref_parent': 627, 'children': [], 'group': 'listener Method'}
{'ref': 648, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.name_has_listener()', 'description': 'name_has_listener( (DeviceParameter)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<ATimeableValue>,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 627, 'children': [], 'group': 'listener Method'}
{'ref': 650, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_automation_state_listener()', 'description': 'remove_automation_state_listener( (DeviceParameter)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;automation_state&quot;. C++ signature :  void remove_automation_state_listener(TPyHandle<ATimeableValue>,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_automation_state_listener()'], 'hierarchy': 3, 'ref_parent': 627, 'children': [], 'group': 'listener Method'}
{'ref': 651, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_name_listener()', 'description': 'remove_name_listener( (DeviceParameter)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<ATimeableValue>,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 627, 'children': [], 'group': 'listener Method'}
{'ref': 652, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_state_listener()', 'description': 'remove_state_listener( (DeviceParameter)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;state&quot;. C++ signature :  void remove_state_listener(TPyHandle<ATimeableValue>,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_state_listener()'], 'hierarchy': 3, 'ref_parent': 627, 'children': [], 'group': 'listener Method'}
{'ref': 653, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_value_listener()', 'description': 'remove_value_listener( (DeviceParameter)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;value&quot;. C++ signature :  void remove_value_listener(TPyHandle<ATimeableValue>,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_value_listener()'], 'hierarchy': 3, 'ref_parent': 627, 'children': [], 'group': 'listener Method'}
{'ref': 654, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.state_has_listener()', 'description': 'state_has_listener( (DeviceParameter)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;state&quot;. C++ signature :  bool state_has_listener(TPyHandle<ATimeableValue>,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'state_has_listener()'], 'hierarchy': 3, 'ref_parent': 627, 'children': [], 'group': 'listener Method'}
{'ref': 656, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.value_has_listener()', 'description': 'value_has_listener( (DeviceParameter)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;value&quot;. C++ signature :  bool value_has_listener(TPyHandle<ATimeableValue>,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'value_has_listener()'], 'hierarchy': 3, 'ref_parent': 627, 'children': [], 'group': 'listener Method'}
{'ref': 680, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_choke_group_listener()', 'description': 'add_choke_group_listener( (DrumChain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;choke_group&quot; has changed. C++ signature :  void add_choke_group_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_choke_group_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 681, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_color_index_listener()', 'description': 'add_color_index_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 682, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_color_listener()', 'description': 'add_color_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 683, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_devices_listener()', 'description': 'add_devices_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;devices&quot; has changed. C++ signature :  void add_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_devices_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 684, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_is_auto_colored_listener()', 'description': 'add_is_auto_colored_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_auto_colored&quot; has changed. C++ signature :  void add_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 685, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_mute_listener()', 'description': 'add_mute_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 686, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_muted_via_solo_listener()', 'description': 'add_muted_via_solo_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;muted_via_solo&quot; has changed. C++ signature :  void add_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 687, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_name_listener()', 'description': 'add_name_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 688, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_out_note_listener()', 'description': 'add_out_note_listener( (DrumChain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;out_note&quot; has changed. C++ signature :  void add_out_note_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_out_note_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 689, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_solo_listener()', 'description': 'add_solo_listener( (Chain)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 690, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.choke_group_has_listener()', 'description': 'choke_group_has_listener( (DrumChain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;choke_group&quot;. C++ signature :  bool choke_group_has_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'choke_group_has_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 691, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.color_has_listener()', 'description': 'color_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 692, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.color_index_has_listener()', 'description': 'color_index_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 694, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.devices_has_listener()', 'description': 'devices_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;devices&quot;. C++ signature :  bool devices_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'devices_has_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 695, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.is_auto_colored_has_listener()', 'description': 'is_auto_colored_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_auto_colored&quot;. C++ signature :  bool is_auto_colored_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'is_auto_colored_has_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 696, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.mute_has_listener()', 'description': 'mute_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 697, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.muted_via_solo_has_listener()', 'description': 'muted_via_solo_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;muted_via_solo&quot;. C++ signature :  bool muted_via_solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'muted_via_solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 698, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.name_has_listener()', 'description': 'name_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 699, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.out_note_has_listener()', 'description': 'out_note_has_listener( (DrumChain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;out_note&quot;. C++ signature :  bool out_note_has_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'out_note_has_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 700, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_choke_group_listener()', 'description': 'remove_choke_group_listener( (DrumChain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;choke_group&quot;. C++ signature :  void remove_choke_group_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_choke_group_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 701, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 702, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_color_listener()', 'description': 'remove_color_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 703, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_devices_listener()', 'description': 'remove_devices_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;devices&quot;. C++ signature :  void remove_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_devices_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 704, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_is_auto_colored_listener()', 'description': 'remove_is_auto_colored_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_auto_colored&quot;. C++ signature :  void remove_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 705, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_mute_listener()', 'description': 'remove_mute_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 706, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_muted_via_solo_listener()', 'description': 'remove_muted_via_solo_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;muted_via_solo&quot;. C++ signature :  void remove_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 707, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_name_listener()', 'description': 'remove_name_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 708, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_out_note_listener()', 'description': 'remove_out_note_listener( (DrumChain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;out_note&quot;. C++ signature :  void remove_out_note_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_out_note_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 709, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_solo_listener()', 'description': 'remove_solo_listener( (Chain)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 710, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.solo_has_listener()', 'description': 'solo_has_listener( (Chain)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 662, 'children': [], 'group': 'listener Method'}
{'ref': 720, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_chains_listener()', 'description': 'add_chains_listener( (DrumPad)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;chains&quot; has changed. C++ signature :  void add_chains_listener(TPyHandle<ADrumGroupDevicePad>,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_chains_listener()'], 'hierarchy': 3, 'ref_parent': 712, 'children': [], 'group': 'listener Method'}
{'ref': 721, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_mute_listener()', 'description': 'add_mute_listener( (DrumPad)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TPyHandle<ADrumGroupDevicePad>,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 712, 'children': [], 'group': 'listener Method'}
{'ref': 722, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_name_listener()', 'description': 'add_name_listener( (DrumPad)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<ADrumGroupDevicePad>,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 712, 'children': [], 'group': 'listener Method'}
{'ref': 723, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_solo_listener()', 'description': 'add_solo_listener( (DrumPad)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TPyHandle<ADrumGroupDevicePad>,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 712, 'children': [], 'group': 'listener Method'}
{'ref': 724, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.chains_has_listener()', 'description': 'chains_has_listener( (DrumPad)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;chains&quot;. C++ signature :  bool chains_has_listener(TPyHandle<ADrumGroupDevicePad>,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 712, 'children': [], 'group': 'listener Method'}
{'ref': 726, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.mute_has_listener()', 'description': 'mute_has_listener( (DrumPad)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TPyHandle<ADrumGroupDevicePad>,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 712, 'children': [], 'group': 'listener Method'}
{'ref': 727, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.name_has_listener()', 'description': 'name_has_listener( (DrumPad)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<ADrumGroupDevicePad>,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 712, 'children': [], 'group': 'listener Method'}
{'ref': 728, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_chains_listener()', 'description': 'remove_chains_listener( (DrumPad)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;chains&quot;. C++ signature :  void remove_chains_listener(TPyHandle<ADrumGroupDevicePad>,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_chains_listener()'], 'hierarchy': 3, 'ref_parent': 712, 'children': [], 'group': 'listener Method'}
{'ref': 729, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_mute_listener()', 'description': 'remove_mute_listener( (DrumPad)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TPyHandle<ADrumGroupDevicePad>,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 712, 'children': [], 'group': 'listener Method'}
{'ref': 730, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_name_listener()', 'description': 'remove_name_listener( (DrumPad)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<ADrumGroupDevicePad>,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 712, 'children': [], 'group': 'listener Method'}
{'ref': 731, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_solo_listener()', 'description': 'remove_solo_listener( (DrumPad)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TPyHandle<ADrumGroupDevicePad>,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 712, 'children': [], 'group': 'listener Method'}
{'ref': 732, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.solo_has_listener()', 'description': 'solo_has_listener( (DrumPad)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TPyHandle<ADrumGroupDevicePad>,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 712, 'children': [], 'group': 'listener Method'}
{'ref': 752, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_edit_mode_listener()', 'description': 'add_edit_mode_listener( (Eq8Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;edit_mode&quot; has changed. C++ signature :  void add_edit_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_edit_mode_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 753, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_global_mode_listener()', 'description': 'add_global_mode_listener( (Eq8Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;global_mode&quot; has changed. C++ signature :  void add_global_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_global_mode_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 754, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 755, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 756, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_oversample_listener()', 'description': 'add_oversample_listener( (Eq8Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;oversample&quot; has changed. C++ signature :  void add_oversample_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_oversample_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 757, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 758, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.edit_mode_has_listener()', 'description': 'edit_mode_has_listener( (Eq8Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;edit_mode&quot;. C++ signature :  bool edit_mode_has_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'edit_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 759, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.global_mode_has_listener()', 'description': 'global_mode_has_listener( (Eq8Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;global_mode&quot;. C++ signature :  bool global_mode_has_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'global_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 760, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 761, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 762, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.oversample_has_listener()', 'description': 'oversample_has_listener( (Eq8Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;oversample&quot;. C++ signature :  bool oversample_has_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'oversample_has_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 763, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 764, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_edit_mode_listener()', 'description': 'remove_edit_mode_listener( (Eq8Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;edit_mode&quot;. C++ signature :  void remove_edit_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_edit_mode_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 765, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_global_mode_listener()', 'description': 'remove_global_mode_listener( (Eq8Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;global_mode&quot;. C++ signature :  void remove_global_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_global_mode_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 766, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 767, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 768, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_oversample_listener()', 'description': 'remove_oversample_listener( (Eq8Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;oversample&quot;. C++ signature :  void remove_oversample_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_oversample_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 769, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 737, 'children': [], 'group': 'listener Method'}
{'ref': 776, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 771, 'children': [], 'group': 'listener Method'}
{'ref': 777, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.add_selected_band_listener()', 'description': 'add_selected_band_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;selected_band&quot; has changed. C++ signature :  void add_selected_band_listener(TEq8DevicePyViewData,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'add_selected_band_listener()'], 'hierarchy': 4, 'ref_parent': 771, 'children': [], 'group': 'listener Method'}
{'ref': 778, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 771, 'children': [], 'group': 'listener Method'}
{'ref': 779, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 771, 'children': [], 'group': 'listener Method'}
{'ref': 780, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.remove_selected_band_listener()', 'description': 'remove_selected_band_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;selected_band&quot;. C++ signature :  void remove_selected_band_listener(TEq8DevicePyViewData,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'remove_selected_band_listener()'], 'hierarchy': 4, 'ref_parent': 771, 'children': [], 'group': 'listener Method'}
{'ref': 781, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.selected_band_has_listener()', 'description': 'selected_band_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;selected_band&quot;. C++ signature :  bool selected_band_has_listener(TEq8DevicePyViewData,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'selected_band_has_listener()'], 'hierarchy': 4, 'ref_parent': 771, 'children': [], 'group': 'listener Method'}
{'ref': 803, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_name_listener()', 'description': 'add_name_listener( (Groove)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<AGroove>,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 795, 'children': [], 'group': 'listener Method'}
{'ref': 804, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_quantization_amount_listener()', 'description': 'add_quantization_amount_listener( (Groove)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;quantization_amount&quot; has changed. C++ signature :  void add_quantization_amount_listener(TPyHandle<AGroove>,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_quantization_amount_listener()'], 'hierarchy': 3, 'ref_parent': 795, 'children': [], 'group': 'listener Method'}
{'ref': 805, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_random_amount_listener()', 'description': 'add_random_amount_listener( (Groove)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;random_amount&quot; has changed. C++ signature :  void add_random_amount_listener(TPyHandle<AGroove>,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_random_amount_listener()'], 'hierarchy': 3, 'ref_parent': 795, 'children': [], 'group': 'listener Method'}
{'ref': 806, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_timing_amount_listener()', 'description': 'add_timing_amount_listener( (Groove)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;timing_amount&quot; has changed. C++ signature :  void add_timing_amount_listener(TPyHandle<AGroove>,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_timing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 795, 'children': [], 'group': 'listener Method'}
{'ref': 807, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_velocity_amount_listener()', 'description': 'add_velocity_amount_listener( (Groove)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;velocity_amount&quot; has changed. C++ signature :  void add_velocity_amount_listener(TPyHandle<AGroove>,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 795, 'children': [], 'group': 'listener Method'}
{'ref': 808, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.name_has_listener()', 'description': 'name_has_listener( (Groove)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<AGroove>,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 795, 'children': [], 'group': 'listener Method'}
{'ref': 809, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.quantization_amount_has_listener()', 'description': 'quantization_amount_has_listener( (Groove)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;quantization_amount&quot;. C++ signature :  bool quantization_amount_has_listener(TPyHandle<AGroove>,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'quantization_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 795, 'children': [], 'group': 'listener Method'}
{'ref': 810, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.random_amount_has_listener()', 'description': 'random_amount_has_listener( (Groove)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;random_amount&quot;. C++ signature :  bool random_amount_has_listener(TPyHandle<AGroove>,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'random_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 795, 'children': [], 'group': 'listener Method'}
{'ref': 811, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_name_listener()', 'description': 'remove_name_listener( (Groove)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<AGroove>,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 795, 'children': [], 'group': 'listener Method'}
{'ref': 812, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_quantization_amount_listener()', 'description': 'remove_quantization_amount_listener( (Groove)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;quantization_amount&quot;. C++ signature :  void remove_quantization_amount_listener(TPyHandle<AGroove>,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_quantization_amount_listener()'], 'hierarchy': 3, 'ref_parent': 795, 'children': [], 'group': 'listener Method'}
{'ref': 813, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_random_amount_listener()', 'description': 'remove_random_amount_listener( (Groove)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;random_amount&quot;. C++ signature :  void remove_random_amount_listener(TPyHandle<AGroove>,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_random_amount_listener()'], 'hierarchy': 3, 'ref_parent': 795, 'children': [], 'group': 'listener Method'}
{'ref': 814, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_timing_amount_listener()', 'description': 'remove_timing_amount_listener( (Groove)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;timing_amount&quot;. C++ signature :  void remove_timing_amount_listener(TPyHandle<AGroove>,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_timing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 795, 'children': [], 'group': 'listener Method'}
{'ref': 815, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_velocity_amount_listener()', 'description': 'remove_velocity_amount_listener( (Groove)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;velocity_amount&quot;. C++ signature :  void remove_velocity_amount_listener(TPyHandle<AGroove>,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 795, 'children': [], 'group': 'listener Method'}
{'ref': 816, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.timing_amount_has_listener()', 'description': 'timing_amount_has_listener( (Groove)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;timing_amount&quot;. C++ signature :  bool timing_amount_has_listener(TPyHandle<AGroove>,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'timing_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 795, 'children': [], 'group': 'listener Method'}
{'ref': 817, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.velocity_amount_has_listener()', 'description': 'velocity_amount_has_listener( (Groove)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;velocity_amount&quot;. C++ signature :  bool velocity_amount_has_listener(TPyHandle<AGroove>,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'velocity_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 795, 'children': [], 'group': 'listener Method'}
{'ref': 822, 'tag': 'listener Method', 'name': 'Live.GroovePool.GroovePool.add_grooves_listener()', 'description': 'add_grooves_listener( (GroovePool)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;grooves&quot; has changed. C++ signature :  void add_grooves_listener(TPyHandle<AGroovePool>,boost::python::api::object)', 'path': ['Live', 'GroovePool', 'GroovePool', 'add_grooves_listener()'], 'hierarchy': 3, 'ref_parent': 819, 'children': [], 'group': 'listener Method'}
{'ref': 823, 'tag': 'listener Method', 'name': 'Live.GroovePool.GroovePool.grooves_has_listener()', 'description': 'grooves_has_listener( (GroovePool)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;grooves&quot;. C++ signature :  bool grooves_has_listener(TPyHandle<AGroovePool>,boost::python::api::object)', 'path': ['Live', 'GroovePool', 'GroovePool', 'grooves_has_listener()'], 'hierarchy': 3, 'ref_parent': 819, 'children': [], 'group': 'listener Method'}
{'ref': 824, 'tag': 'listener Method', 'name': 'Live.GroovePool.GroovePool.remove_grooves_listener()', 'description': 'remove_grooves_listener( (GroovePool)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;grooves&quot;. C++ signature :  void remove_grooves_listener(TPyHandle<AGroovePool>,boost::python::api::object)', 'path': ['Live', 'GroovePool', 'GroovePool', 'remove_grooves_listener()'], 'hierarchy': 3, 'ref_parent': 819, 'children': [], 'group': 'listener Method'}
{'ref': 846, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_attack_time_listener()', 'description': 'add_ir_attack_time_listener( (HybridReverbDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;ir_attack_time&quot; has changed. C++ signature :  void add_ir_attack_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_attack_time_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 847, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_category_index_listener()', 'description': 'add_ir_category_index_listener( (HybridReverbDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;ir_category_index&quot; has changed. C++ signature :  void add_ir_category_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_category_index_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 848, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_decay_time_listener()', 'description': 'add_ir_decay_time_listener( (HybridReverbDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;ir_decay_time&quot; has changed. C++ signature :  void add_ir_decay_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_decay_time_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 849, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_file_index_listener()', 'description': 'add_ir_file_index_listener( (HybridReverbDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;ir_file_index&quot; has changed. C++ signature :  void add_ir_file_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_file_index_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 850, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_file_list_listener()', 'description': 'add_ir_file_list_listener( (HybridReverbDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;ir_file_list&quot; has changed. C++ signature :  void add_ir_file_list_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_file_list_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 851, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_size_factor_listener()', 'description': 'add_ir_size_factor_listener( (HybridReverbDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;ir_size_factor&quot; has changed. C++ signature :  void add_ir_size_factor_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_size_factor_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 852, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_time_shaping_on_listener()', 'description': 'add_ir_time_shaping_on_listener( (HybridReverbDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;ir_time_shaping_on&quot; has changed. C++ signature :  void add_ir_time_shaping_on_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_time_shaping_on_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 853, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 854, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 855, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 856, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_attack_time_has_listener()', 'description': 'ir_attack_time_has_listener( (HybridReverbDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;ir_attack_time&quot;. C++ signature :  bool ir_attack_time_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_attack_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 857, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_category_index_has_listener()', 'description': 'ir_category_index_has_listener( (HybridReverbDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;ir_category_index&quot;. C++ signature :  bool ir_category_index_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_category_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 858, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_decay_time_has_listener()', 'description': 'ir_decay_time_has_listener( (HybridReverbDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;ir_decay_time&quot;. C++ signature :  bool ir_decay_time_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_decay_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 859, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_file_index_has_listener()', 'description': 'ir_file_index_has_listener( (HybridReverbDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;ir_file_index&quot;. C++ signature :  bool ir_file_index_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_file_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 860, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_file_list_has_listener()', 'description': 'ir_file_list_has_listener( (HybridReverbDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;ir_file_list&quot;. C++ signature :  bool ir_file_list_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_file_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 861, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_size_factor_has_listener()', 'description': 'ir_size_factor_has_listener( (HybridReverbDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;ir_size_factor&quot;. C++ signature :  bool ir_size_factor_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_size_factor_has_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 862, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_time_shaping_on_has_listener()', 'description': 'ir_time_shaping_on_has_listener( (HybridReverbDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;ir_time_shaping_on&quot;. C++ signature :  bool ir_time_shaping_on_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_time_shaping_on_has_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 863, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 864, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 865, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 866, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_attack_time_listener()', 'description': 'remove_ir_attack_time_listener( (HybridReverbDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;ir_attack_time&quot;. C++ signature :  void remove_ir_attack_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_attack_time_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 867, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_category_index_listener()', 'description': 'remove_ir_category_index_listener( (HybridReverbDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;ir_category_index&quot;. C++ signature :  void remove_ir_category_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_category_index_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 868, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_decay_time_listener()', 'description': 'remove_ir_decay_time_listener( (HybridReverbDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;ir_decay_time&quot;. C++ signature :  void remove_ir_decay_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_decay_time_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 869, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_file_index_listener()', 'description': 'remove_ir_file_index_listener( (HybridReverbDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;ir_file_index&quot;. C++ signature :  void remove_ir_file_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_file_index_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 870, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_file_list_listener()', 'description': 'remove_ir_file_list_listener( (HybridReverbDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;ir_file_list&quot;. C++ signature :  void remove_ir_file_list_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_file_list_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 871, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_size_factor_listener()', 'description': 'remove_ir_size_factor_listener( (HybridReverbDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;ir_size_factor&quot;. C++ signature :  void remove_ir_size_factor_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_size_factor_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 872, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_time_shaping_on_listener()', 'description': 'remove_ir_time_shaping_on_listener( (HybridReverbDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;ir_time_shaping_on&quot;. C++ signature :  void remove_ir_time_shaping_on_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_time_shaping_on_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 873, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 874, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 875, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 826, 'children': [], 'group': 'listener Method'}
{'ref': 881, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 877, 'children': [], 'group': 'listener Method'}
{'ref': 882, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 877, 'children': [], 'group': 'listener Method'}
{'ref': 883, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 877, 'children': [], 'group': 'listener Method'}
{'ref': 913, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_audio_inputs_listener()', 'description': 'add_audio_inputs_listener( (MaxDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;audio_inputs&quot; has changed. C++ signature :  void add_audio_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_audio_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 914, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_audio_outputs_listener()', 'description': 'add_audio_outputs_listener( (MaxDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;audio_outputs&quot; has changed. C++ signature :  void add_audio_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_audio_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 915, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_bank_parameters_changed_listener()', 'description': 'add_bank_parameters_changed_listener( (MaxDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;bank_parameters_changed&quot; has changed. C++ signature :  void add_bank_parameters_changed_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_bank_parameters_changed_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 916, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 917, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_midi_inputs_listener()', 'description': 'add_midi_inputs_listener( (MaxDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;midi_inputs&quot; has changed. C++ signature :  void add_midi_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_midi_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 918, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_midi_outputs_listener()', 'description': 'add_midi_outputs_listener( (MaxDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;midi_outputs&quot; has changed. C++ signature :  void add_midi_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_midi_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 919, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 920, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 921, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.audio_inputs_has_listener()', 'description': 'audio_inputs_has_listener( (MaxDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;audio_inputs&quot;. C++ signature :  bool audio_inputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'audio_inputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 922, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.audio_outputs_has_listener()', 'description': 'audio_outputs_has_listener( (MaxDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;audio_outputs&quot;. C++ signature :  bool audio_outputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'audio_outputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 923, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.bank_parameters_changed_has_listener()', 'description': 'bank_parameters_changed_has_listener( (MaxDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;bank_parameters_changed&quot;. C++ signature :  bool bank_parameters_changed_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'bank_parameters_changed_has_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 928, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 929, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.midi_inputs_has_listener()', 'description': 'midi_inputs_has_listener( (MaxDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;midi_inputs&quot;. C++ signature :  bool midi_inputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'midi_inputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 930, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.midi_outputs_has_listener()', 'description': 'midi_outputs_has_listener( (MaxDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;midi_outputs&quot;. C++ signature :  bool midi_outputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'midi_outputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 931, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 932, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 933, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_audio_inputs_listener()', 'description': 'remove_audio_inputs_listener( (MaxDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;audio_inputs&quot;. C++ signature :  void remove_audio_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_audio_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 934, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_audio_outputs_listener()', 'description': 'remove_audio_outputs_listener( (MaxDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;audio_outputs&quot;. C++ signature :  void remove_audio_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_audio_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 935, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_bank_parameters_changed_listener()', 'description': 'remove_bank_parameters_changed_listener( (MaxDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;bank_parameters_changed&quot;. C++ signature :  void remove_bank_parameters_changed_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_bank_parameters_changed_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 936, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 937, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_midi_inputs_listener()', 'description': 'remove_midi_inputs_listener( (MaxDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;midi_inputs&quot;. C++ signature :  void remove_midi_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_midi_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 938, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_midi_outputs_listener()', 'description': 'remove_midi_outputs_listener( (MaxDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;midi_outputs&quot;. C++ signature :  void remove_midi_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_midi_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 939, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 940, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 897, 'children': [], 'group': 'listener Method'}
{'ref': 946, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 942, 'children': [], 'group': 'listener Method'}
{'ref': 947, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 942, 'children': [], 'group': 'listener Method'}
{'ref': 948, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 942, 'children': [], 'group': 'listener Method'}
{'ref': 1000, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.add_crossfade_assign_listener()', 'description': 'add_crossfade_assign_listener( (MixerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;crossfade_assign&quot; has changed. C++ signature :  void add_crossfade_assign_listener(TPyHandle<ATrackDevice>,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'add_crossfade_assign_listener()'], 'hierarchy': 3, 'ref_parent': 986, 'children': [], 'group': 'listener Method'}
{'ref': 1001, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.add_panning_mode_listener()', 'description': 'add_panning_mode_listener( (MixerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;panning_mode&quot; has changed. C++ signature :  void add_panning_mode_listener(TPyHandle<ATrackDevice>,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'add_panning_mode_listener()'], 'hierarchy': 3, 'ref_parent': 986, 'children': [], 'group': 'listener Method'}
{'ref': 1002, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.add_sends_listener()', 'description': 'add_sends_listener( (MixerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;sends&quot; has changed. C++ signature :  void add_sends_listener(TPyHandle<ATrackDevice>,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'add_sends_listener()'], 'hierarchy': 3, 'ref_parent': 986, 'children': [], 'group': 'listener Method'}
{'ref': 1003, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.crossfade_assign_has_listener()', 'description': 'crossfade_assign_has_listener( (MixerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;crossfade_assign&quot;. C++ signature :  bool crossfade_assign_has_listener(TPyHandle<ATrackDevice>,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'crossfade_assign_has_listener()'], 'hierarchy': 3, 'ref_parent': 986, 'children': [], 'group': 'listener Method'}
{'ref': 1004, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.panning_mode_has_listener()', 'description': 'panning_mode_has_listener( (MixerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;panning_mode&quot;. C++ signature :  bool panning_mode_has_listener(TPyHandle<ATrackDevice>,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'panning_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 986, 'children': [], 'group': 'listener Method'}
{'ref': 1005, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.remove_crossfade_assign_listener()', 'description': 'remove_crossfade_assign_listener( (MixerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;crossfade_assign&quot;. C++ signature :  void remove_crossfade_assign_listener(TPyHandle<ATrackDevice>,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'remove_crossfade_assign_listener()'], 'hierarchy': 3, 'ref_parent': 986, 'children': [], 'group': 'listener Method'}
{'ref': 1006, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.remove_panning_mode_listener()', 'description': 'remove_panning_mode_listener( (MixerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;panning_mode&quot;. C++ signature :  void remove_panning_mode_listener(TPyHandle<ATrackDevice>,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'remove_panning_mode_listener()'], 'hierarchy': 3, 'ref_parent': 986, 'children': [], 'group': 'listener Method'}
{'ref': 1007, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.remove_sends_listener()', 'description': 'remove_sends_listener( (MixerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;sends&quot;. C++ signature :  void remove_sends_listener(TPyHandle<ATrackDevice>,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'remove_sends_listener()'], 'hierarchy': 3, 'ref_parent': 986, 'children': [], 'group': 'listener Method'}
{'ref': 1008, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.sends_has_listener()', 'description': 'sends_has_listener( (MixerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;sends&quot;. C++ signature :  bool sends_has_listener(TPyHandle<ATrackDevice>,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'sends_has_listener()'], 'hierarchy': 3, 'ref_parent': 986, 'children': [], 'group': 'listener Method'}
{'ref': 1031, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 1017, 'children': [], 'group': 'listener Method'}
{'ref': 1032, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1017, 'children': [], 'group': 'listener Method'}
{'ref': 1033, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 1017, 'children': [], 'group': 'listener Method'}
{'ref': 1034, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_presets_listener()', 'description': 'add_presets_listener( (PluginDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;presets&quot; has changed. C++ signature :  void add_presets_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_presets_listener()'], 'hierarchy': 3, 'ref_parent': 1017, 'children': [], 'group': 'listener Method'}
{'ref': 1035, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_selected_preset_index_listener()', 'description': 'add_selected_preset_index_listener( (PluginDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;selected_preset_index&quot; has changed. C++ signature :  void add_selected_preset_index_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_selected_preset_index_listener()'], 'hierarchy': 3, 'ref_parent': 1017, 'children': [], 'group': 'listener Method'}
{'ref': 1037, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 1017, 'children': [], 'group': 'listener Method'}
{'ref': 1038, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1017, 'children': [], 'group': 'listener Method'}
{'ref': 1039, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 1017, 'children': [], 'group': 'listener Method'}
{'ref': 1040, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.presets_has_listener()', 'description': 'presets_has_listener( (PluginDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;presets&quot;. C++ signature :  bool presets_has_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'presets_has_listener()'], 'hierarchy': 3, 'ref_parent': 1017, 'children': [], 'group': 'listener Method'}
{'ref': 1041, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 1017, 'children': [], 'group': 'listener Method'}
{'ref': 1042, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1017, 'children': [], 'group': 'listener Method'}
{'ref': 1043, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 1017, 'children': [], 'group': 'listener Method'}
{'ref': 1044, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_presets_listener()', 'description': 'remove_presets_listener( (PluginDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;presets&quot;. C++ signature :  void remove_presets_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_presets_listener()'], 'hierarchy': 3, 'ref_parent': 1017, 'children': [], 'group': 'listener Method'}
{'ref': 1045, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_selected_preset_index_listener()', 'description': 'remove_selected_preset_index_listener( (PluginDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;selected_preset_index&quot;. C++ signature :  void remove_selected_preset_index_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_selected_preset_index_listener()'], 'hierarchy': 3, 'ref_parent': 1017, 'children': [], 'group': 'listener Method'}
{'ref': 1046, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.selected_preset_index_has_listener()', 'description': 'selected_preset_index_has_listener( (PluginDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;selected_preset_index&quot;. C++ signature :  bool selected_preset_index_has_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'selected_preset_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1017, 'children': [], 'group': 'listener Method'}
{'ref': 1052, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 1048, 'children': [], 'group': 'listener Method'}
{'ref': 1053, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 1048, 'children': [], 'group': 'listener Method'}
{'ref': 1054, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 1048, 'children': [], 'group': 'listener Method'}
{'ref': 1079, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_chains_listener()', 'description': 'add_chains_listener( (RackDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;chains&quot; has changed. C++ signature :  void add_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_chains_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1080, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_drum_pads_listener()', 'description': 'add_drum_pads_listener( (RackDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;drum_pads&quot; has changed. C++ signature :  void add_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1081, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_has_drum_pads_listener()', 'description': 'add_has_drum_pads_listener( (RackDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;has_drum_pads&quot; has changed. C++ signature :  void add_has_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_has_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1082, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_has_macro_mappings_listener()', 'description': 'add_has_macro_mappings_listener( (RackDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;has_macro_mappings&quot; has changed. C++ signature :  void add_has_macro_mappings_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_has_macro_mappings_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1083, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1084, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_is_showing_chains_listener()', 'description': 'add_is_showing_chains_listener( (RackDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_showing_chains&quot; has changed. C++ signature :  void add_is_showing_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1086, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_macros_mapped_listener()', 'description': 'add_macros_mapped_listener( (RackDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;macros_mapped&quot; has changed. C++ signature :  void add_macros_mapped_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_macros_mapped_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1087, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1088, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1089, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_return_chains_listener()', 'description': 'add_return_chains_listener( (RackDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;return_chains&quot; has changed. C++ signature :  void add_return_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_return_chains_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1090, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_visible_drum_pads_listener()', 'description': 'add_visible_drum_pads_listener( (RackDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;visible_drum_pads&quot; has changed. C++ signature :  void add_visible_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_visible_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1091, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.chains_has_listener()', 'description': 'chains_has_listener( (RackDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;chains&quot;. C++ signature :  bool chains_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1094, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.drum_pads_has_listener()', 'description': 'drum_pads_has_listener( (RackDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;drum_pads&quot;. C++ signature :  bool drum_pads_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'drum_pads_has_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1095, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.has_drum_pads_has_listener()', 'description': 'has_drum_pads_has_listener( (RackDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;has_drum_pads&quot;. C++ signature :  bool has_drum_pads_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'has_drum_pads_has_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1096, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.has_macro_mappings_has_listener()', 'description': 'has_macro_mappings_has_listener( (RackDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;has_macro_mappings&quot;. C++ signature :  bool has_macro_mappings_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'has_macro_mappings_has_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1097, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1098, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.is_showing_chains_has_listener()', 'description': 'is_showing_chains_has_listener( (RackDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_showing_chains&quot;. C++ signature :  bool is_showing_chains_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'is_showing_chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1099, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.macros_mapped_has_listener()', 'description': 'macros_mapped_has_listener( (RackDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;macros_mapped&quot;. C++ signature :  bool macros_mapped_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'macros_mapped_has_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1100, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1101, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1105, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_chains_listener()', 'description': 'remove_chains_listener( (RackDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;chains&quot;. C++ signature :  void remove_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_chains_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1106, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_drum_pads_listener()', 'description': 'remove_drum_pads_listener( (RackDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;drum_pads&quot;. C++ signature :  void remove_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1107, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_has_drum_pads_listener()', 'description': 'remove_has_drum_pads_listener( (RackDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;has_drum_pads&quot;. C++ signature :  void remove_has_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_has_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1108, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_has_macro_mappings_listener()', 'description': 'remove_has_macro_mappings_listener( (RackDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;has_macro_mappings&quot;. C++ signature :  void remove_has_macro_mappings_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_has_macro_mappings_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1109, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1110, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_is_showing_chains_listener()', 'description': 'remove_is_showing_chains_listener( (RackDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_showing_chains&quot;. C++ signature :  void remove_is_showing_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1112, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_macros_mapped_listener()', 'description': 'remove_macros_mapped_listener( (RackDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;macros_mapped&quot;. C++ signature :  void remove_macros_mapped_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_macros_mapped_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1113, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1114, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1115, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_return_chains_listener()', 'description': 'remove_return_chains_listener( (RackDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;return_chains&quot;. C++ signature :  void remove_return_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_return_chains_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1116, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_visible_drum_pads_listener()', 'description': 'remove_visible_drum_pads_listener( (RackDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;visible_drum_pads&quot;. C++ signature :  void remove_visible_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_visible_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1117, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.return_chains_has_listener()', 'description': 'return_chains_has_listener( (RackDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;return_chains&quot;. C++ signature :  bool return_chains_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'return_chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1120, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.visible_drum_pads_has_listener()', 'description': 'visible_drum_pads_has_listener( (RackDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;visible_drum_pads&quot;. C++ signature :  bool visible_drum_pads_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'visible_drum_pads_has_listener()'], 'hierarchy': 3, 'ref_parent': 1056, 'children': [], 'group': 'listener Method'}
{'ref': 1129, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_drum_pads_scroll_position_listener()', 'description': 'add_drum_pads_scroll_position_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;drum_pads_scroll_position&quot; has changed. C++ signature :  void add_drum_pads_scroll_position_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_drum_pads_scroll_position_listener()'], 'hierarchy': 4, 'ref_parent': 1121, 'children': [], 'group': 'listener Method'}
{'ref': 1130, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 1121, 'children': [], 'group': 'listener Method'}
{'ref': 1131, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_is_showing_chain_devices_listener()', 'description': 'add_is_showing_chain_devices_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_showing_chain_devices&quot; has changed. C++ signature :  void add_is_showing_chain_devices_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_is_showing_chain_devices_listener()'], 'hierarchy': 4, 'ref_parent': 1121, 'children': [], 'group': 'listener Method'}
{'ref': 1132, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_selected_chain_listener()', 'description': 'add_selected_chain_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;selected_chain&quot; has changed. C++ signature :  void add_selected_chain_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 1121, 'children': [], 'group': 'listener Method'}
{'ref': 1133, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_selected_drum_pad_listener()', 'description': 'add_selected_drum_pad_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;selected_drum_pad&quot; has changed. C++ signature :  void add_selected_drum_pad_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_selected_drum_pad_listener()'], 'hierarchy': 4, 'ref_parent': 1121, 'children': [], 'group': 'listener Method'}
{'ref': 1134, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.drum_pads_scroll_position_has_listener()', 'description': 'drum_pads_scroll_position_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;drum_pads_scroll_position&quot;. C++ signature :  bool drum_pads_scroll_position_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'drum_pads_scroll_position_has_listener()'], 'hierarchy': 4, 'ref_parent': 1121, 'children': [], 'group': 'listener Method'}
{'ref': 1135, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 1121, 'children': [], 'group': 'listener Method'}
{'ref': 1136, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.is_showing_chain_devices_has_listener()', 'description': 'is_showing_chain_devices_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_showing_chain_devices&quot;. C++ signature :  bool is_showing_chain_devices_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'is_showing_chain_devices_has_listener()'], 'hierarchy': 4, 'ref_parent': 1121, 'children': [], 'group': 'listener Method'}
{'ref': 1137, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_drum_pads_scroll_position_listener()', 'description': 'remove_drum_pads_scroll_position_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;drum_pads_scroll_position&quot;. C++ signature :  void remove_drum_pads_scroll_position_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_drum_pads_scroll_position_listener()'], 'hierarchy': 4, 'ref_parent': 1121, 'children': [], 'group': 'listener Method'}
{'ref': 1138, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 1121, 'children': [], 'group': 'listener Method'}
{'ref': 1139, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_is_showing_chain_devices_listener()', 'description': 'remove_is_showing_chain_devices_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_showing_chain_devices&quot;. C++ signature :  void remove_is_showing_chain_devices_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_is_showing_chain_devices_listener()'], 'hierarchy': 4, 'ref_parent': 1121, 'children': [], 'group': 'listener Method'}
{'ref': 1140, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_selected_chain_listener()', 'description': 'remove_selected_chain_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;selected_chain&quot;. C++ signature :  void remove_selected_chain_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 1121, 'children': [], 'group': 'listener Method'}
{'ref': 1141, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_selected_drum_pad_listener()', 'description': 'remove_selected_drum_pad_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;selected_drum_pad&quot;. C++ signature :  void remove_selected_drum_pad_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_selected_drum_pad_listener()'], 'hierarchy': 4, 'ref_parent': 1121, 'children': [], 'group': 'listener Method'}
{'ref': 1142, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.selected_chain_has_listener()', 'description': 'selected_chain_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;selected_chain&quot;. C++ signature :  bool selected_chain_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'selected_chain_has_listener()'], 'hierarchy': 4, 'ref_parent': 1121, 'children': [], 'group': 'listener Method'}
{'ref': 1143, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.selected_drum_pad_has_listener()', 'description': 'selected_drum_pad_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;selected_drum_pad&quot;. C++ signature :  bool selected_drum_pad_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'selected_drum_pad_has_listener()'], 'hierarchy': 4, 'ref_parent': 1121, 'children': [], 'group': 'listener Method'}
{'ref': 1170, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_beats_granulation_resolution_listener()', 'description': 'add_beats_granulation_resolution_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;beats_granulation_resolution&quot; has changed. C++ signature :  void add_beats_granulation_resolution_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_beats_granulation_resolution_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1171, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_beats_transient_envelope_listener()', 'description': 'add_beats_transient_envelope_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;beats_transient_envelope&quot; has changed. C++ signature :  void add_beats_transient_envelope_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_beats_transient_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1172, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_beats_transient_loop_mode_listener()', 'description': 'add_beats_transient_loop_mode_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;beats_transient_loop_mode&quot; has changed. C++ signature :  void add_beats_transient_loop_mode_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_beats_transient_loop_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1173, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_complex_pro_envelope_listener()', 'description': 'add_complex_pro_envelope_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;complex_pro_envelope&quot; has changed. C++ signature :  void add_complex_pro_envelope_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_complex_pro_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1174, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_complex_pro_formants_listener()', 'description': 'add_complex_pro_formants_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;complex_pro_formants&quot; has changed. C++ signature :  void add_complex_pro_formants_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_complex_pro_formants_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1175, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_end_marker_listener()', 'description': 'add_end_marker_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;end_marker&quot; has changed. C++ signature :  void add_end_marker_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1176, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_file_path_listener()', 'description': 'add_file_path_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;file_path&quot; has changed. C++ signature :  void add_file_path_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1177, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_gain_listener()', 'description': 'add_gain_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;gain&quot; has changed. C++ signature :  void add_gain_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_gain_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1178, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slices_listener()', 'description': 'add_slices_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;slices&quot; has changed. C++ signature :  void add_slices_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slices_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1179, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_beat_division_listener()', 'description': 'add_slicing_beat_division_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;slicing_beat_division&quot; has changed. C++ signature :  void add_slicing_beat_division_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_beat_division_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1180, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_region_count_listener()', 'description': 'add_slicing_region_count_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;slicing_region_count&quot; has changed. C++ signature :  void add_slicing_region_count_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_region_count_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1181, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_sensitivity_listener()', 'description': 'add_slicing_sensitivity_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;slicing_sensitivity&quot; has changed. C++ signature :  void add_slicing_sensitivity_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_sensitivity_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1182, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_style_listener()', 'description': 'add_slicing_style_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;slicing_style&quot; has changed. C++ signature :  void add_slicing_style_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_style_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1183, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_start_marker_listener()', 'description': 'add_start_marker_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;start_marker&quot; has changed. C++ signature :  void add_start_marker_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1184, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_texture_flux_listener()', 'description': 'add_texture_flux_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;texture_flux&quot; has changed. C++ signature :  void add_texture_flux_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_texture_flux_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1185, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_texture_grain_size_listener()', 'description': 'add_texture_grain_size_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;texture_grain_size&quot; has changed. C++ signature :  void add_texture_grain_size_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_texture_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1186, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_tones_grain_size_listener()', 'description': 'add_tones_grain_size_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;tones_grain_size&quot; has changed. C++ signature :  void add_tones_grain_size_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_tones_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1187, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_warp_markers_listener()', 'description': 'add_warp_markers_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;warp_markers&quot; has changed. C++ signature :  void add_warp_markers_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1188, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_warp_mode_listener()', 'description': 'add_warp_mode_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;warp_mode&quot; has changed. C++ signature :  void add_warp_mode_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1189, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_warping_listener()', 'description': 'add_warping_listener( (Sample)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;warping&quot; has changed. C++ signature :  void add_warping_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_warping_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1191, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.beats_granulation_resolution_has_listener()', 'description': 'beats_granulation_resolution_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;beats_granulation_resolution&quot;. C++ signature :  bool beats_granulation_resolution_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'beats_granulation_resolution_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1192, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.beats_transient_envelope_has_listener()', 'description': 'beats_transient_envelope_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;beats_transient_envelope&quot;. C++ signature :  bool beats_transient_envelope_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'beats_transient_envelope_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1193, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.beats_transient_loop_mode_has_listener()', 'description': 'beats_transient_loop_mode_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;beats_transient_loop_mode&quot;. C++ signature :  bool beats_transient_loop_mode_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'beats_transient_loop_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1195, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.complex_pro_envelope_has_listener()', 'description': 'complex_pro_envelope_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;complex_pro_envelope&quot;. C++ signature :  bool complex_pro_envelope_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'complex_pro_envelope_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1196, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.complex_pro_formants_has_listener()', 'description': 'complex_pro_formants_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;complex_pro_formants&quot;. C++ signature :  bool complex_pro_formants_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'complex_pro_formants_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1197, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.end_marker_has_listener()', 'description': 'end_marker_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;end_marker&quot;. C++ signature :  bool end_marker_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'end_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1198, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.file_path_has_listener()', 'description': 'file_path_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;file_path&quot;. C++ signature :  bool file_path_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'file_path_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1200, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.gain_has_listener()', 'description': 'gain_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;gain&quot;. C++ signature :  bool gain_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'gain_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1203, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_beats_granulation_resolution_listener()', 'description': 'remove_beats_granulation_resolution_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;beats_granulation_resolution&quot;. C++ signature :  void remove_beats_granulation_resolution_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_beats_granulation_resolution_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1204, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_beats_transient_envelope_listener()', 'description': 'remove_beats_transient_envelope_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;beats_transient_envelope&quot;. C++ signature :  void remove_beats_transient_envelope_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_beats_transient_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1205, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_beats_transient_loop_mode_listener()', 'description': 'remove_beats_transient_loop_mode_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;beats_transient_loop_mode&quot;. C++ signature :  void remove_beats_transient_loop_mode_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_beats_transient_loop_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1206, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_complex_pro_envelope_listener()', 'description': 'remove_complex_pro_envelope_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;complex_pro_envelope&quot;. C++ signature :  void remove_complex_pro_envelope_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_complex_pro_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1207, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_complex_pro_formants_listener()', 'description': 'remove_complex_pro_formants_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;complex_pro_formants&quot;. C++ signature :  void remove_complex_pro_formants_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_complex_pro_formants_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1208, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_end_marker_listener()', 'description': 'remove_end_marker_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;end_marker&quot;. C++ signature :  void remove_end_marker_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1209, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_file_path_listener()', 'description': 'remove_file_path_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;file_path&quot;. C++ signature :  void remove_file_path_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1210, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_gain_listener()', 'description': 'remove_gain_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;gain&quot;. C++ signature :  void remove_gain_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_gain_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1212, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slices_listener()', 'description': 'remove_slices_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;slices&quot;. C++ signature :  void remove_slices_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slices_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1213, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_beat_division_listener()', 'description': 'remove_slicing_beat_division_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;slicing_beat_division&quot;. C++ signature :  void remove_slicing_beat_division_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_beat_division_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1214, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_region_count_listener()', 'description': 'remove_slicing_region_count_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;slicing_region_count&quot;. C++ signature :  void remove_slicing_region_count_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_region_count_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1215, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_sensitivity_listener()', 'description': 'remove_slicing_sensitivity_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;slicing_sensitivity&quot;. C++ signature :  void remove_slicing_sensitivity_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_sensitivity_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1216, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_style_listener()', 'description': 'remove_slicing_style_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;slicing_style&quot;. C++ signature :  void remove_slicing_style_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_style_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1217, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_start_marker_listener()', 'description': 'remove_start_marker_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;start_marker&quot;. C++ signature :  void remove_start_marker_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1218, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_texture_flux_listener()', 'description': 'remove_texture_flux_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;texture_flux&quot;. C++ signature :  void remove_texture_flux_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_texture_flux_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1219, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_texture_grain_size_listener()', 'description': 'remove_texture_grain_size_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;texture_grain_size&quot;. C++ signature :  void remove_texture_grain_size_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_texture_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1220, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_tones_grain_size_listener()', 'description': 'remove_tones_grain_size_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;tones_grain_size&quot;. C++ signature :  void remove_tones_grain_size_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_tones_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1221, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_warp_markers_listener()', 'description': 'remove_warp_markers_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;warp_markers&quot;. C++ signature :  void remove_warp_markers_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1222, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_warp_mode_listener()', 'description': 'remove_warp_mode_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;warp_mode&quot;. C++ signature :  void remove_warp_mode_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1223, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_warping_listener()', 'description': 'remove_warping_listener( (Sample)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;warping&quot;. C++ signature :  void remove_warping_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_warping_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1226, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slices_has_listener()', 'description': 'slices_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;slices&quot;. C++ signature :  bool slices_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slices_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1227, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_beat_division_has_listener()', 'description': 'slicing_beat_division_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_beat_division&quot;. C++ signature :  bool slicing_beat_division_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_beat_division_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1228, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_region_count_has_listener()', 'description': 'slicing_region_count_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_region_count&quot;. C++ signature :  bool slicing_region_count_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_region_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1229, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_sensitivity_has_listener()', 'description': 'slicing_sensitivity_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_sensitivity&quot;. C++ signature :  bool slicing_sensitivity_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_sensitivity_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1230, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_style_has_listener()', 'description': 'slicing_style_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_style&quot;. C++ signature :  bool slicing_style_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_style_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1231, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.start_marker_has_listener()', 'description': 'start_marker_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;start_marker&quot;. C++ signature :  bool start_marker_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'start_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1232, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.texture_flux_has_listener()', 'description': 'texture_flux_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;texture_flux&quot;. C++ signature :  bool texture_flux_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'texture_flux_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1233, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.texture_grain_size_has_listener()', 'description': 'texture_grain_size_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;texture_grain_size&quot;. C++ signature :  bool texture_grain_size_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'texture_grain_size_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1234, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.tones_grain_size_has_listener()', 'description': 'tones_grain_size_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;tones_grain_size&quot;. C++ signature :  bool tones_grain_size_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'tones_grain_size_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1235, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.warp_markers_has_listener()', 'description': 'warp_markers_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;warp_markers&quot;. C++ signature :  bool warp_markers_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'warp_markers_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1236, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.warp_mode_has_listener()', 'description': 'warp_mode_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;warp_mode&quot;. C++ signature :  bool warp_mode_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'warp_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1237, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.warping_has_listener()', 'description': 'warping_has_listener( (Sample)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;warping&quot;. C++ signature :  bool warping_has_listener(TPyHandle<AMultiSamplePart>,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'warping_has_listener()'], 'hierarchy': 3, 'ref_parent': 1145, 'children': [], 'group': 'listener Method'}
{'ref': 1270, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_clip_slots_listener()', 'description': 'add_clip_slots_listener( (Scene)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;clip_slots&quot; has changed. C++ signature :  void add_clip_slots_listener(TPyHandle<AScene>,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 1260, 'children': [], 'group': 'listener Method'}
{'ref': 1271, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_color_index_listener()', 'description': 'add_color_index_listener( (Scene)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TPyHandle<AScene>,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1260, 'children': [], 'group': 'listener Method'}
{'ref': 1272, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_color_listener()', 'description': 'add_color_listener( (Scene)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TPyHandle<AScene>,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 1260, 'children': [], 'group': 'listener Method'}
{'ref': 1273, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_is_triggered_listener()', 'description': 'add_is_triggered_listener( (Scene)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_triggered&quot; has changed. C++ signature :  void add_is_triggered_listener(TPyHandle<AScene>,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 1260, 'children': [], 'group': 'listener Method'}
{'ref': 1274, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_name_listener()', 'description': 'add_name_listener( (Scene)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<AScene>,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1260, 'children': [], 'group': 'listener Method'}
{'ref': 1275, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.clip_slots_has_listener()', 'description': 'clip_slots_has_listener( (Scene)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;clip_slots&quot;. C++ signature :  bool clip_slots_has_listener(TPyHandle<AScene>,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'clip_slots_has_listener()'], 'hierarchy': 3, 'ref_parent': 1260, 'children': [], 'group': 'listener Method'}
{'ref': 1276, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.color_has_listener()', 'description': 'color_has_listener( (Scene)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TPyHandle<AScene>,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 1260, 'children': [], 'group': 'listener Method'}
{'ref': 1277, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.color_index_has_listener()', 'description': 'color_index_has_listener( (Scene)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TPyHandle<AScene>,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1260, 'children': [], 'group': 'listener Method'}
{'ref': 1280, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.is_triggered_has_listener()', 'description': 'is_triggered_has_listener( (Scene)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_triggered&quot;. C++ signature :  bool is_triggered_has_listener(TPyHandle<AScene>,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'is_triggered_has_listener()'], 'hierarchy': 3, 'ref_parent': 1260, 'children': [], 'group': 'listener Method'}
{'ref': 1281, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.name_has_listener()', 'description': 'name_has_listener( (Scene)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<AScene>,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1260, 'children': [], 'group': 'listener Method'}
{'ref': 1282, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_clip_slots_listener()', 'description': 'remove_clip_slots_listener( (Scene)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;clip_slots&quot;. C++ signature :  void remove_clip_slots_listener(TPyHandle<AScene>,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 1260, 'children': [], 'group': 'listener Method'}
{'ref': 1283, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Scene)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TPyHandle<AScene>,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1260, 'children': [], 'group': 'listener Method'}
{'ref': 1284, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_color_listener()', 'description': 'remove_color_listener( (Scene)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TPyHandle<AScene>,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 1260, 'children': [], 'group': 'listener Method'}
{'ref': 1285, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_is_triggered_listener()', 'description': 'remove_is_triggered_listener( (Scene)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_triggered&quot;. C++ signature :  void remove_is_triggered_listener(TPyHandle<AScene>,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 1260, 'children': [], 'group': 'listener Method'}
{'ref': 1286, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_name_listener()', 'description': 'remove_name_listener( (Scene)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<AScene>,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1260, 'children': [], 'group': 'listener Method'}
{'ref': 1318, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_can_warp_as_listener()', 'description': 'add_can_warp_as_listener( (SimplerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;can_warp_as&quot; has changed. C++ signature :  void add_can_warp_as_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_can_warp_as_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1319, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_can_warp_double_listener()', 'description': 'add_can_warp_double_listener( (SimplerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;can_warp_double&quot; has changed. C++ signature :  void add_can_warp_double_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_can_warp_double_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1320, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_can_warp_half_listener()', 'description': 'add_can_warp_half_listener( (SimplerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;can_warp_half&quot; has changed. C++ signature :  void add_can_warp_half_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_can_warp_half_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1321, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1322, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_multi_sample_mode_listener()', 'description': 'add_multi_sample_mode_listener( (SimplerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;multi_sample_mode&quot; has changed. C++ signature :  void add_multi_sample_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_multi_sample_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1323, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1324, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_pad_slicing_listener()', 'description': 'add_pad_slicing_listener( (SimplerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;pad_slicing&quot; has changed. C++ signature :  void add_pad_slicing_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_pad_slicing_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1325, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1326, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_playback_mode_listener()', 'description': 'add_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;playback_mode&quot; has changed. C++ signature :  void add_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1327, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_playing_position_enabled_listener()', 'description': 'add_playing_position_enabled_listener( (SimplerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;playing_position_enabled&quot; has changed. C++ signature :  void add_playing_position_enabled_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_playing_position_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1328, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_playing_position_listener()', 'description': 'add_playing_position_listener( (SimplerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;playing_position&quot; has changed. C++ signature :  void add_playing_position_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1329, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_retrigger_listener()', 'description': 'add_retrigger_listener( (SimplerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;retrigger&quot; has changed. C++ signature :  void add_retrigger_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_retrigger_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1330, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_sample_listener()', 'description': 'add_sample_listener( (SimplerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;sample&quot; has changed. C++ signature :  void add_sample_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_sample_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1331, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_slicing_playback_mode_listener()', 'description': 'add_slicing_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;slicing_playback_mode&quot; has changed. C++ signature :  void add_slicing_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_slicing_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1332, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_voices_listener()', 'description': 'add_voices_listener( (SimplerDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;voices&quot; has changed. C++ signature :  void add_voices_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_voices_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1333, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.can_warp_as_has_listener()', 'description': 'can_warp_as_has_listener( (SimplerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;can_warp_as&quot;. C++ signature :  bool can_warp_as_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'can_warp_as_has_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1334, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.can_warp_double_has_listener()', 'description': 'can_warp_double_has_listener( (SimplerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;can_warp_double&quot;. C++ signature :  bool can_warp_double_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'can_warp_double_has_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1335, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.can_warp_half_has_listener()', 'description': 'can_warp_half_has_listener( (SimplerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;can_warp_half&quot;. C++ signature :  bool can_warp_half_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'can_warp_half_has_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1338, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1339, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.multi_sample_mode_has_listener()', 'description': 'multi_sample_mode_has_listener( (SimplerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;multi_sample_mode&quot;. C++ signature :  bool multi_sample_mode_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'multi_sample_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1340, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1341, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.pad_slicing_has_listener()', 'description': 'pad_slicing_has_listener( (SimplerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;pad_slicing&quot;. C++ signature :  bool pad_slicing_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'pad_slicing_has_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1342, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1343, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.playback_mode_has_listener()', 'description': 'playback_mode_has_listener( (SimplerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;playback_mode&quot;. C++ signature :  bool playback_mode_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'playback_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1344, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.playing_position_enabled_has_listener()', 'description': 'playing_position_enabled_has_listener( (SimplerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;playing_position_enabled&quot;. C++ signature :  bool playing_position_enabled_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'playing_position_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1345, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.playing_position_has_listener()', 'description': 'playing_position_has_listener( (SimplerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;playing_position&quot;. C++ signature :  bool playing_position_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'playing_position_has_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1346, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_can_warp_as_listener()', 'description': 'remove_can_warp_as_listener( (SimplerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;can_warp_as&quot;. C++ signature :  void remove_can_warp_as_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_can_warp_as_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1347, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_can_warp_double_listener()', 'description': 'remove_can_warp_double_listener( (SimplerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;can_warp_double&quot;. C++ signature :  void remove_can_warp_double_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_can_warp_double_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1348, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_can_warp_half_listener()', 'description': 'remove_can_warp_half_listener( (SimplerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;can_warp_half&quot;. C++ signature :  void remove_can_warp_half_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_can_warp_half_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1349, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1350, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_multi_sample_mode_listener()', 'description': 'remove_multi_sample_mode_listener( (SimplerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;multi_sample_mode&quot;. C++ signature :  void remove_multi_sample_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_multi_sample_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1351, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1352, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_pad_slicing_listener()', 'description': 'remove_pad_slicing_listener( (SimplerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;pad_slicing&quot;. C++ signature :  void remove_pad_slicing_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_pad_slicing_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1353, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1354, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_playback_mode_listener()', 'description': 'remove_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;playback_mode&quot;. C++ signature :  void remove_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1355, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_playing_position_enabled_listener()', 'description': 'remove_playing_position_enabled_listener( (SimplerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;playing_position_enabled&quot;. C++ signature :  void remove_playing_position_enabled_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_playing_position_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1356, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_playing_position_listener()', 'description': 'remove_playing_position_listener( (SimplerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;playing_position&quot;. C++ signature :  void remove_playing_position_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1357, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_retrigger_listener()', 'description': 'remove_retrigger_listener( (SimplerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;retrigger&quot;. C++ signature :  void remove_retrigger_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_retrigger_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1358, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_sample_listener()', 'description': 'remove_sample_listener( (SimplerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;sample&quot;. C++ signature :  void remove_sample_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_sample_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1359, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_slicing_playback_mode_listener()', 'description': 'remove_slicing_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;slicing_playback_mode&quot;. C++ signature :  void remove_slicing_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_slicing_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1360, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_voices_listener()', 'description': 'remove_voices_listener( (SimplerDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;voices&quot;. C++ signature :  void remove_voices_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_voices_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1361, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.retrigger_has_listener()', 'description': 'retrigger_has_listener( (SimplerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;retrigger&quot;. C++ signature :  bool retrigger_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'retrigger_has_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1363, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.sample_has_listener()', 'description': 'sample_has_listener( (SimplerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;sample&quot;. C++ signature :  bool sample_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'sample_has_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1364, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.slicing_playback_mode_has_listener()', 'description': 'slicing_playback_mode_has_listener( (SimplerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_playback_mode&quot;. C++ signature :  bool slicing_playback_mode_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'slicing_playback_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1366, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.voices_has_listener()', 'description': 'voices_has_listener( (SimplerDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;voices&quot;. C++ signature :  bool voices_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'voices_has_listener()'], 'hierarchy': 3, 'ref_parent': 1294, 'children': [], 'group': 'listener Method'}
{'ref': 1382, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1383, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_end_listener()', 'description': 'add_sample_end_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;sample_end&quot; has changed. C++ signature :  void add_sample_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_end_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1384, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_env_fade_in_listener()', 'description': 'add_sample_env_fade_in_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;sample_env_fade_in&quot; has changed. C++ signature :  void add_sample_env_fade_in_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_env_fade_in_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1385, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_env_fade_out_listener()', 'description': 'add_sample_env_fade_out_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;sample_env_fade_out&quot; has changed. C++ signature :  void add_sample_env_fade_out_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_env_fade_out_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1386, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_loop_end_listener()', 'description': 'add_sample_loop_end_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;sample_loop_end&quot; has changed. C++ signature :  void add_sample_loop_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_loop_end_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1387, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_loop_fade_listener()', 'description': 'add_sample_loop_fade_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;sample_loop_fade&quot; has changed. C++ signature :  void add_sample_loop_fade_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_loop_fade_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1388, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_loop_start_listener()', 'description': 'add_sample_loop_start_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;sample_loop_start&quot; has changed. C++ signature :  void add_sample_loop_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_loop_start_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1389, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_start_listener()', 'description': 'add_sample_start_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;sample_start&quot; has changed. C++ signature :  void add_sample_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_start_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1390, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_selected_slice_listener()', 'description': 'add_selected_slice_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;selected_slice&quot; has changed. C++ signature :  void add_selected_slice_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_selected_slice_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1391, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1392, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1393, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_end_listener()', 'description': 'remove_sample_end_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;sample_end&quot;. C++ signature :  void remove_sample_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_end_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1394, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_env_fade_in_listener()', 'description': 'remove_sample_env_fade_in_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;sample_env_fade_in&quot;. C++ signature :  void remove_sample_env_fade_in_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_env_fade_in_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1395, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_env_fade_out_listener()', 'description': 'remove_sample_env_fade_out_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;sample_env_fade_out&quot;. C++ signature :  void remove_sample_env_fade_out_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_env_fade_out_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1396, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_loop_end_listener()', 'description': 'remove_sample_loop_end_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;sample_loop_end&quot;. C++ signature :  void remove_sample_loop_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_loop_end_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1397, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_loop_fade_listener()', 'description': 'remove_sample_loop_fade_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;sample_loop_fade&quot;. C++ signature :  void remove_sample_loop_fade_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_loop_fade_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1398, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_loop_start_listener()', 'description': 'remove_sample_loop_start_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;sample_loop_start&quot;. C++ signature :  void remove_sample_loop_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_loop_start_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1399, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_start_listener()', 'description': 'remove_sample_start_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;sample_start&quot;. C++ signature :  void remove_sample_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_start_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1400, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_selected_slice_listener()', 'description': 'remove_selected_slice_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;selected_slice&quot;. C++ signature :  void remove_selected_slice_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_selected_slice_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1401, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_end_has_listener()', 'description': 'sample_end_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;sample_end&quot;. C++ signature :  bool sample_end_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_end_has_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1402, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_env_fade_in_has_listener()', 'description': 'sample_env_fade_in_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;sample_env_fade_in&quot;. C++ signature :  bool sample_env_fade_in_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_env_fade_in_has_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1403, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_env_fade_out_has_listener()', 'description': 'sample_env_fade_out_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;sample_env_fade_out&quot;. C++ signature :  bool sample_env_fade_out_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_env_fade_out_has_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1404, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_loop_end_has_listener()', 'description': 'sample_loop_end_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;sample_loop_end&quot;. C++ signature :  bool sample_loop_end_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_loop_end_has_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1405, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_loop_fade_has_listener()', 'description': 'sample_loop_fade_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;sample_loop_fade&quot;. C++ signature :  bool sample_loop_fade_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_loop_fade_has_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1406, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_loop_start_has_listener()', 'description': 'sample_loop_start_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;sample_loop_start&quot;. C++ signature :  bool sample_loop_start_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_loop_start_has_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1407, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_start_has_listener()', 'description': 'sample_start_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;sample_start&quot;. C++ signature :  bool sample_start_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_start_has_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1408, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.selected_slice_has_listener()', 'description': 'selected_slice_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;selected_slice&quot;. C++ signature :  bool selected_slice_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'selected_slice_has_listener()'], 'hierarchy': 4, 'ref_parent': 1370, 'children': [], 'group': 'listener Method'}
{'ref': 1432, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.add_name_listener()', 'description': 'add_name_listener( (CuePoint)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<ACuePoint>,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1427, 'children': [], 'group': 'listener Method'}
{'ref': 1433, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.add_time_listener()', 'description': 'add_time_listener( (CuePoint)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;time&quot; has changed. C++ signature :  void add_time_listener(TPyHandle<ACuePoint>,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'add_time_listener()'], 'hierarchy': 3, 'ref_parent': 1427, 'children': [], 'group': 'listener Method'}
{'ref': 1435, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.name_has_listener()', 'description': 'name_has_listener( (CuePoint)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<ACuePoint>,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1427, 'children': [], 'group': 'listener Method'}
{'ref': 1436, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.remove_name_listener()', 'description': 'remove_name_listener( (CuePoint)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<ACuePoint>,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1427, 'children': [], 'group': 'listener Method'}
{'ref': 1437, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.remove_time_listener()', 'description': 'remove_time_listener( (CuePoint)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;time&quot;. C++ signature :  void remove_time_listener(TPyHandle<ACuePoint>,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'remove_time_listener()'], 'hierarchy': 3, 'ref_parent': 1427, 'children': [], 'group': 'listener Method'}
{'ref': 1438, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.time_has_listener()', 'description': 'time_has_listener( (CuePoint)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;time&quot;. C++ signature :  bool time_has_listener(TPyHandle<ACuePoint>,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'time_has_listener()'], 'hierarchy': 3, 'ref_parent': 1427, 'children': [], 'group': 'listener Method'}
{'ref': 1525, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_appointed_device_listener()', 'description': 'add_appointed_device_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;appointed_device&quot; has changed. C++ signature :  void add_appointed_device_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_appointed_device_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1526, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_arrangement_overdub_listener()', 'description': 'add_arrangement_overdub_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;arrangement_overdub&quot; has changed. C++ signature :  void add_arrangement_overdub_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_arrangement_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1527, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_back_to_arranger_listener()', 'description': 'add_back_to_arranger_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;back_to_arranger&quot; has changed. C++ signature :  void add_back_to_arranger_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_back_to_arranger_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1528, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_can_capture_midi_listener()', 'description': 'add_can_capture_midi_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;can_capture_midi&quot; has changed. C++ signature :  void add_can_capture_midi_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_can_capture_midi_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1529, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_can_jump_to_next_cue_listener()', 'description': 'add_can_jump_to_next_cue_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;can_jump_to_next_cue&quot; has changed. C++ signature :  void add_can_jump_to_next_cue_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_can_jump_to_next_cue_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1530, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_can_jump_to_prev_cue_listener()', 'description': 'add_can_jump_to_prev_cue_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;can_jump_to_prev_cue&quot; has changed. C++ signature :  void add_can_jump_to_prev_cue_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_can_jump_to_prev_cue_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1531, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_clip_trigger_quantization_listener()', 'description': 'add_clip_trigger_quantization_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;clip_trigger_quantization&quot; has changed. C++ signature :  void add_clip_trigger_quantization_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_clip_trigger_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1532, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_count_in_duration_listener()', 'description': 'add_count_in_duration_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;count_in_duration&quot; has changed. C++ signature :  void add_count_in_duration_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_count_in_duration_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1533, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_cue_points_listener()', 'description': 'add_cue_points_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;cue_points&quot; has changed. C++ signature :  void add_cue_points_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_cue_points_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1534, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_current_song_time_listener()', 'description': 'add_current_song_time_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;current_song_time&quot; has changed. C++ signature :  void add_current_song_time_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_current_song_time_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1535, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_data_listener()', 'description': 'add_data_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;data&quot; has changed. C++ signature :  void add_data_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_data_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1536, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_exclusive_arm_listener()', 'description': 'add_exclusive_arm_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;exclusive_arm&quot; has changed. C++ signature :  void add_exclusive_arm_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_exclusive_arm_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1537, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_groove_amount_listener()', 'description': 'add_groove_amount_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;groove_amount&quot; has changed. C++ signature :  void add_groove_amount_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_groove_amount_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1538, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_counting_in_listener()', 'description': 'add_is_counting_in_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_counting_in&quot; has changed. C++ signature :  void add_is_counting_in_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_counting_in_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1539, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_playing_listener()', 'description': 'add_is_playing_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_playing&quot; has changed. C++ signature :  void add_is_playing_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_playing_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1540, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_loop_length_listener()', 'description': 'add_loop_length_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;loop_length&quot; has changed. C++ signature :  void add_loop_length_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_loop_length_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1541, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_loop_listener()', 'description': 'add_loop_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;loop&quot; has changed. C++ signature :  void add_loop_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_loop_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1542, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_loop_start_listener()', 'description': 'add_loop_start_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;loop_start&quot; has changed. C++ signature :  void add_loop_start_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1543, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_metronome_listener()', 'description': 'add_metronome_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;metronome&quot; has changed. C++ signature :  void add_metronome_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_metronome_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1544, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_midi_recording_quantization_listener()', 'description': 'add_midi_recording_quantization_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;midi_recording_quantization&quot; has changed. C++ signature :  void add_midi_recording_quantization_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_midi_recording_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1545, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_nudge_down_listener()', 'description': 'add_nudge_down_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;nudge_down&quot; has changed. C++ signature :  void add_nudge_down_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_nudge_down_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1546, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_nudge_up_listener()', 'description': 'add_nudge_up_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;nudge_up&quot; has changed. C++ signature :  void add_nudge_up_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_nudge_up_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1547, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_overdub_listener()', 'description': 'add_overdub_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;overdub&quot; has changed. C++ signature :  void add_overdub_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1548, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_punch_in_listener()', 'description': 'add_punch_in_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;punch_in&quot; has changed. C++ signature :  void add_punch_in_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_punch_in_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1549, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_punch_out_listener()', 'description': 'add_punch_out_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;punch_out&quot; has changed. C++ signature :  void add_punch_out_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_punch_out_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1550, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_re_enable_automation_enabled_listener()', 'description': 'add_re_enable_automation_enabled_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;re_enable_automation_enabled&quot; has changed. C++ signature :  void add_re_enable_automation_enabled_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_re_enable_automation_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1551, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_record_mode_listener()', 'description': 'add_record_mode_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;record_mode&quot; has changed. C++ signature :  void add_record_mode_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_record_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1552, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_return_tracks_listener()', 'description': 'add_return_tracks_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;return_tracks&quot; has changed. C++ signature :  void add_return_tracks_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_return_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1553, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_root_note_listener()', 'description': 'add_root_note_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;root_note&quot; has changed. C++ signature :  void add_root_note_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_root_note_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1554, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_scale_intervals_listener()', 'description': 'add_scale_intervals_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;scale_intervals&quot; has changed. C++ signature :  void add_scale_intervals_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_scale_intervals_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1555, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_scale_name_listener()', 'description': 'add_scale_name_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;scale_name&quot; has changed. C++ signature :  void add_scale_name_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_scale_name_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1556, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_scenes_listener()', 'description': 'add_scenes_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;scenes&quot; has changed. C++ signature :  void add_scenes_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_scenes_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1557, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_session_automation_record_listener()', 'description': 'add_session_automation_record_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;session_automation_record&quot; has changed. C++ signature :  void add_session_automation_record_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_session_automation_record_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1558, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_session_record_listener()', 'description': 'add_session_record_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;session_record&quot; has changed. C++ signature :  void add_session_record_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_session_record_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1559, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_session_record_status_listener()', 'description': 'add_session_record_status_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;session_record_status&quot; has changed. C++ signature :  void add_session_record_status_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_session_record_status_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1560, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_signature_denominator_listener()', 'description': 'add_signature_denominator_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;signature_denominator&quot; has changed. C++ signature :  void add_signature_denominator_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1561, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_signature_numerator_listener()', 'description': 'add_signature_numerator_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;signature_numerator&quot; has changed. C++ signature :  void add_signature_numerator_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1562, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_song_length_listener()', 'description': 'add_song_length_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;song_length&quot; has changed. C++ signature :  void add_song_length_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_song_length_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1563, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_swing_amount_listener()', 'description': 'add_swing_amount_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;swing_amount&quot; has changed. C++ signature :  void add_swing_amount_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_swing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1564, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tempo_listener()', 'description': 'add_tempo_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;tempo&quot; has changed. C++ signature :  void add_tempo_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1565, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tracks_listener()', 'description': 'add_tracks_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;tracks&quot; has changed. C++ signature :  void add_tracks_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1566, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_visible_tracks_listener()', 'description': 'add_visible_tracks_listener( (Song)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;visible_tracks&quot; has changed. C++ signature :  void add_visible_tracks_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_visible_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1567, 'tag': 'listener Method', 'name': 'Live.Song.Song.appointed_device_has_listener()', 'description': 'appointed_device_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;appointed_device&quot;. C++ signature :  bool appointed_device_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'appointed_device_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1568, 'tag': 'listener Method', 'name': 'Live.Song.Song.arrangement_overdub_has_listener()', 'description': 'arrangement_overdub_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;arrangement_overdub&quot;. C++ signature :  bool arrangement_overdub_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'arrangement_overdub_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1569, 'tag': 'listener Method', 'name': 'Live.Song.Song.back_to_arranger_has_listener()', 'description': 'back_to_arranger_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;back_to_arranger&quot;. C++ signature :  bool back_to_arranger_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'back_to_arranger_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1571, 'tag': 'listener Method', 'name': 'Live.Song.Song.can_capture_midi_has_listener()', 'description': 'can_capture_midi_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;can_capture_midi&quot;. C++ signature :  bool can_capture_midi_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'can_capture_midi_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1572, 'tag': 'listener Method', 'name': 'Live.Song.Song.can_jump_to_next_cue_has_listener()', 'description': 'can_jump_to_next_cue_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;can_jump_to_next_cue&quot;. C++ signature :  bool can_jump_to_next_cue_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'can_jump_to_next_cue_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1573, 'tag': 'listener Method', 'name': 'Live.Song.Song.can_jump_to_prev_cue_has_listener()', 'description': 'can_jump_to_prev_cue_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;can_jump_to_prev_cue&quot;. C++ signature :  bool can_jump_to_prev_cue_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'can_jump_to_prev_cue_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1576, 'tag': 'listener Method', 'name': 'Live.Song.Song.clip_trigger_quantization_has_listener()', 'description': 'clip_trigger_quantization_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;clip_trigger_quantization&quot;. C++ signature :  bool clip_trigger_quantization_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'clip_trigger_quantization_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1578, 'tag': 'listener Method', 'name': 'Live.Song.Song.count_in_duration_has_listener()', 'description': 'count_in_duration_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;count_in_duration&quot;. C++ signature :  bool count_in_duration_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'count_in_duration_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1583, 'tag': 'listener Method', 'name': 'Live.Song.Song.cue_points_has_listener()', 'description': 'cue_points_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;cue_points&quot;. C++ signature :  bool cue_points_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'cue_points_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1584, 'tag': 'listener Method', 'name': 'Live.Song.Song.current_song_time_has_listener()', 'description': 'current_song_time_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;current_song_time&quot;. C++ signature :  bool current_song_time_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'current_song_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1585, 'tag': 'listener Method', 'name': 'Live.Song.Song.data_has_listener()', 'description': 'data_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;data&quot;. C++ signature :  bool data_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'data_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1592, 'tag': 'listener Method', 'name': 'Live.Song.Song.exclusive_arm_has_listener()', 'description': 'exclusive_arm_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;exclusive_arm&quot;. C++ signature :  bool exclusive_arm_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'exclusive_arm_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1600, 'tag': 'listener Method', 'name': 'Live.Song.Song.groove_amount_has_listener()', 'description': 'groove_amount_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;groove_amount&quot;. C++ signature :  bool groove_amount_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'groove_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1601, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_counting_in_has_listener()', 'description': 'is_counting_in_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_counting_in&quot;. C++ signature :  bool is_counting_in_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_counting_in_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1603, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_playing_has_listener()', 'description': 'is_playing_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_playing&quot;. C++ signature :  bool is_playing_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_playing_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1607, 'tag': 'listener Method', 'name': 'Live.Song.Song.loop_has_listener()', 'description': 'loop_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;loop&quot;. C++ signature :  bool loop_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'loop_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1608, 'tag': 'listener Method', 'name': 'Live.Song.Song.loop_length_has_listener()', 'description': 'loop_length_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;loop_length&quot;. C++ signature :  bool loop_length_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'loop_length_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1609, 'tag': 'listener Method', 'name': 'Live.Song.Song.loop_start_has_listener()', 'description': 'loop_start_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;loop_start&quot;. C++ signature :  bool loop_start_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'loop_start_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1610, 'tag': 'listener Method', 'name': 'Live.Song.Song.metronome_has_listener()', 'description': 'metronome_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;metronome&quot;. C++ signature :  bool metronome_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'metronome_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1611, 'tag': 'listener Method', 'name': 'Live.Song.Song.midi_recording_quantization_has_listener()', 'description': 'midi_recording_quantization_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;midi_recording_quantization&quot;. C++ signature :  bool midi_recording_quantization_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'midi_recording_quantization_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1613, 'tag': 'listener Method', 'name': 'Live.Song.Song.nudge_down_has_listener()', 'description': 'nudge_down_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;nudge_down&quot;. C++ signature :  bool nudge_down_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'nudge_down_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1614, 'tag': 'listener Method', 'name': 'Live.Song.Song.nudge_up_has_listener()', 'description': 'nudge_up_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;nudge_up&quot;. C++ signature :  bool nudge_up_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'nudge_up_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1615, 'tag': 'listener Method', 'name': 'Live.Song.Song.overdub_has_listener()', 'description': 'overdub_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;overdub&quot;. C++ signature :  bool overdub_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'overdub_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1617, 'tag': 'listener Method', 'name': 'Live.Song.Song.punch_in_has_listener()', 'description': 'punch_in_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;punch_in&quot;. C++ signature :  bool punch_in_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'punch_in_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1618, 'tag': 'listener Method', 'name': 'Live.Song.Song.punch_out_has_listener()', 'description': 'punch_out_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;punch_out&quot;. C++ signature :  bool punch_out_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'punch_out_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1620, 'tag': 'listener Method', 'name': 'Live.Song.Song.re_enable_automation_enabled_has_listener()', 'description': 're_enable_automation_enabled_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;re_enable_automation_enabled&quot;. C++ signature :  bool re_enable_automation_enabled_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 're_enable_automation_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1621, 'tag': 'listener Method', 'name': 'Live.Song.Song.record_mode_has_listener()', 'description': 'record_mode_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;record_mode&quot;. C++ signature :  bool record_mode_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'record_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1623, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_appointed_device_listener()', 'description': 'remove_appointed_device_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;appointed_device&quot;. C++ signature :  void remove_appointed_device_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_appointed_device_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1624, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_arrangement_overdub_listener()', 'description': 'remove_arrangement_overdub_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;arrangement_overdub&quot;. C++ signature :  void remove_arrangement_overdub_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_arrangement_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1625, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_back_to_arranger_listener()', 'description': 'remove_back_to_arranger_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;back_to_arranger&quot;. C++ signature :  void remove_back_to_arranger_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_back_to_arranger_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1626, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_can_capture_midi_listener()', 'description': 'remove_can_capture_midi_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;can_capture_midi&quot;. C++ signature :  void remove_can_capture_midi_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_can_capture_midi_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1627, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_can_jump_to_next_cue_listener()', 'description': 'remove_can_jump_to_next_cue_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;can_jump_to_next_cue&quot;. C++ signature :  void remove_can_jump_to_next_cue_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_can_jump_to_next_cue_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1628, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_can_jump_to_prev_cue_listener()', 'description': 'remove_can_jump_to_prev_cue_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;can_jump_to_prev_cue&quot;. C++ signature :  void remove_can_jump_to_prev_cue_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_can_jump_to_prev_cue_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1629, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_clip_trigger_quantization_listener()', 'description': 'remove_clip_trigger_quantization_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;clip_trigger_quantization&quot;. C++ signature :  void remove_clip_trigger_quantization_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_clip_trigger_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1630, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_count_in_duration_listener()', 'description': 'remove_count_in_duration_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;count_in_duration&quot;. C++ signature :  void remove_count_in_duration_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_count_in_duration_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1631, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_cue_points_listener()', 'description': 'remove_cue_points_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;cue_points&quot;. C++ signature :  void remove_cue_points_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_cue_points_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1632, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_current_song_time_listener()', 'description': 'remove_current_song_time_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;current_song_time&quot;. C++ signature :  void remove_current_song_time_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_current_song_time_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1633, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_data_listener()', 'description': 'remove_data_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;data&quot;. C++ signature :  void remove_data_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_data_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1634, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_exclusive_arm_listener()', 'description': 'remove_exclusive_arm_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;exclusive_arm&quot;. C++ signature :  void remove_exclusive_arm_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_exclusive_arm_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1635, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_groove_amount_listener()', 'description': 'remove_groove_amount_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;groove_amount&quot;. C++ signature :  void remove_groove_amount_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_groove_amount_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1636, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_counting_in_listener()', 'description': 'remove_is_counting_in_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_counting_in&quot;. C++ signature :  void remove_is_counting_in_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_counting_in_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1637, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_playing_listener()', 'description': 'remove_is_playing_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_playing&quot;. C++ signature :  void remove_is_playing_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_playing_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1638, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_loop_length_listener()', 'description': 'remove_loop_length_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;loop_length&quot;. C++ signature :  void remove_loop_length_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_loop_length_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1639, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_loop_listener()', 'description': 'remove_loop_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;loop&quot;. C++ signature :  void remove_loop_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_loop_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1640, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_loop_start_listener()', 'description': 'remove_loop_start_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;loop_start&quot;. C++ signature :  void remove_loop_start_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1641, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_metronome_listener()', 'description': 'remove_metronome_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;metronome&quot;. C++ signature :  void remove_metronome_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_metronome_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1642, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_midi_recording_quantization_listener()', 'description': 'remove_midi_recording_quantization_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;midi_recording_quantization&quot;. C++ signature :  void remove_midi_recording_quantization_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_midi_recording_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1643, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_nudge_down_listener()', 'description': 'remove_nudge_down_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;nudge_down&quot;. C++ signature :  void remove_nudge_down_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_nudge_down_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1644, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_nudge_up_listener()', 'description': 'remove_nudge_up_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;nudge_up&quot;. C++ signature :  void remove_nudge_up_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_nudge_up_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1645, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_overdub_listener()', 'description': 'remove_overdub_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;overdub&quot;. C++ signature :  void remove_overdub_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1646, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_punch_in_listener()', 'description': 'remove_punch_in_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;punch_in&quot;. C++ signature :  void remove_punch_in_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_punch_in_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1647, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_punch_out_listener()', 'description': 'remove_punch_out_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;punch_out&quot;. C++ signature :  void remove_punch_out_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_punch_out_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1648, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_re_enable_automation_enabled_listener()', 'description': 'remove_re_enable_automation_enabled_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;re_enable_automation_enabled&quot;. C++ signature :  void remove_re_enable_automation_enabled_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_re_enable_automation_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1649, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_record_mode_listener()', 'description': 'remove_record_mode_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;record_mode&quot;. C++ signature :  void remove_record_mode_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_record_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1650, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_return_tracks_listener()', 'description': 'remove_return_tracks_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;return_tracks&quot;. C++ signature :  void remove_return_tracks_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_return_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1651, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_root_note_listener()', 'description': 'remove_root_note_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;root_note&quot;. C++ signature :  void remove_root_note_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_root_note_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1652, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_scale_intervals_listener()', 'description': 'remove_scale_intervals_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;scale_intervals&quot;. C++ signature :  void remove_scale_intervals_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_scale_intervals_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1653, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_scale_name_listener()', 'description': 'remove_scale_name_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;scale_name&quot;. C++ signature :  void remove_scale_name_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_scale_name_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1654, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_scenes_listener()', 'description': 'remove_scenes_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;scenes&quot;. C++ signature :  void remove_scenes_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_scenes_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1655, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_session_automation_record_listener()', 'description': 'remove_session_automation_record_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;session_automation_record&quot;. C++ signature :  void remove_session_automation_record_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_session_automation_record_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1656, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_session_record_listener()', 'description': 'remove_session_record_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;session_record&quot;. C++ signature :  void remove_session_record_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_session_record_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1657, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_session_record_status_listener()', 'description': 'remove_session_record_status_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;session_record_status&quot;. C++ signature :  void remove_session_record_status_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_session_record_status_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1658, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_signature_denominator_listener()', 'description': 'remove_signature_denominator_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;signature_denominator&quot;. C++ signature :  void remove_signature_denominator_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1659, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_signature_numerator_listener()', 'description': 'remove_signature_numerator_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;signature_numerator&quot;. C++ signature :  void remove_signature_numerator_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1660, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_song_length_listener()', 'description': 'remove_song_length_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;song_length&quot;. C++ signature :  void remove_song_length_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_song_length_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1661, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_swing_amount_listener()', 'description': 'remove_swing_amount_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;swing_amount&quot;. C++ signature :  void remove_swing_amount_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_swing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1662, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tempo_listener()', 'description': 'remove_tempo_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;tempo&quot;. C++ signature :  void remove_tempo_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1663, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tracks_listener()', 'description': 'remove_tracks_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;tracks&quot;. C++ signature :  void remove_tracks_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1664, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_visible_tracks_listener()', 'description': 'remove_visible_tracks_listener( (Song)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;visible_tracks&quot;. C++ signature :  void remove_visible_tracks_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_visible_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1665, 'tag': 'listener Method', 'name': 'Live.Song.Song.return_tracks_has_listener()', 'description': 'return_tracks_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;return_tracks&quot;. C++ signature :  bool return_tracks_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'return_tracks_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1666, 'tag': 'listener Method', 'name': 'Live.Song.Song.root_note_has_listener()', 'description': 'root_note_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;root_note&quot;. C++ signature :  bool root_note_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'root_note_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1667, 'tag': 'listener Method', 'name': 'Live.Song.Song.scale_intervals_has_listener()', 'description': 'scale_intervals_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;scale_intervals&quot;. C++ signature :  bool scale_intervals_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'scale_intervals_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1668, 'tag': 'listener Method', 'name': 'Live.Song.Song.scale_name_has_listener()', 'description': 'scale_name_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;scale_name&quot;. C++ signature :  bool scale_name_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'scale_name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1669, 'tag': 'listener Method', 'name': 'Live.Song.Song.scenes_has_listener()', 'description': 'scenes_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;scenes&quot;. C++ signature :  bool scenes_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'scenes_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1671, 'tag': 'listener Method', 'name': 'Live.Song.Song.session_automation_record_has_listener()', 'description': 'session_automation_record_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;session_automation_record&quot;. C++ signature :  bool session_automation_record_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'session_automation_record_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1672, 'tag': 'listener Method', 'name': 'Live.Song.Song.session_record_has_listener()', 'description': 'session_record_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;session_record&quot;. C++ signature :  bool session_record_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'session_record_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1673, 'tag': 'listener Method', 'name': 'Live.Song.Song.session_record_status_has_listener()', 'description': 'session_record_status_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;session_record_status&quot;. C++ signature :  bool session_record_status_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'session_record_status_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1676, 'tag': 'listener Method', 'name': 'Live.Song.Song.signature_denominator_has_listener()', 'description': 'signature_denominator_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;signature_denominator&quot;. C++ signature :  bool signature_denominator_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'signature_denominator_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1677, 'tag': 'listener Method', 'name': 'Live.Song.Song.signature_numerator_has_listener()', 'description': 'signature_numerator_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;signature_numerator&quot;. C++ signature :  bool signature_numerator_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'signature_numerator_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1678, 'tag': 'listener Method', 'name': 'Live.Song.Song.song_length_has_listener()', 'description': 'song_length_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;song_length&quot;. C++ signature :  bool song_length_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'song_length_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1682, 'tag': 'listener Method', 'name': 'Live.Song.Song.swing_amount_has_listener()', 'description': 'swing_amount_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;swing_amount&quot;. C++ signature :  bool swing_amount_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'swing_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1684, 'tag': 'listener Method', 'name': 'Live.Song.Song.tempo_has_listener()', 'description': 'tempo_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;tempo&quot;. C++ signature :  bool tempo_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tempo_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1685, 'tag': 'listener Method', 'name': 'Live.Song.Song.tracks_has_listener()', 'description': 'tracks_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;tracks&quot;. C++ signature :  bool tracks_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tracks_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1688, 'tag': 'listener Method', 'name': 'Live.Song.Song.visible_tracks_has_listener()', 'description': 'visible_tracks_has_listener( (Song)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;visible_tracks&quot;. C++ signature :  bool visible_tracks_has_listener(TPyHandle<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'visible_tracks_has_listener()'], 'hierarchy': 3, 'ref_parent': 1473, 'children': [], 'group': 'listener Method'}
{'ref': 1700, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_detail_clip_listener()', 'description': 'add_detail_clip_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;detail_clip&quot; has changed. C++ signature :  void add_detail_clip_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_detail_clip_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1701, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_draw_mode_listener()', 'description': 'add_draw_mode_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;draw_mode&quot; has changed. C++ signature :  void add_draw_mode_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_draw_mode_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1702, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_follow_song_listener()', 'description': 'add_follow_song_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;follow_song&quot; has changed. C++ signature :  void add_follow_song_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_follow_song_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1703, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_chain_listener()', 'description': 'add_selected_chain_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;selected_chain&quot; has changed. C++ signature :  void add_selected_chain_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1704, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_parameter_listener()', 'description': 'add_selected_parameter_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;selected_parameter&quot; has changed. C++ signature :  void add_selected_parameter_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_parameter_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1705, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_scene_listener()', 'description': 'add_selected_scene_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;selected_scene&quot; has changed. C++ signature :  void add_selected_scene_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_scene_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1706, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_track_listener()', 'description': 'add_selected_track_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;selected_track&quot; has changed. C++ signature :  void add_selected_track_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_track_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1707, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.detail_clip_has_listener()', 'description': 'detail_clip_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;detail_clip&quot;. C++ signature :  bool detail_clip_has_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'detail_clip_has_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1708, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.draw_mode_has_listener()', 'description': 'draw_mode_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;draw_mode&quot;. C++ signature :  bool draw_mode_has_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'draw_mode_has_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1709, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.follow_song_has_listener()', 'description': 'follow_song_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;follow_song&quot;. C++ signature :  bool follow_song_has_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'follow_song_has_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1710, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_detail_clip_listener()', 'description': 'remove_detail_clip_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;detail_clip&quot;. C++ signature :  void remove_detail_clip_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_detail_clip_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1711, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_draw_mode_listener()', 'description': 'remove_draw_mode_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;draw_mode&quot;. C++ signature :  void remove_draw_mode_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_draw_mode_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1712, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_follow_song_listener()', 'description': 'remove_follow_song_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;follow_song&quot;. C++ signature :  void remove_follow_song_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_follow_song_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1713, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_chain_listener()', 'description': 'remove_selected_chain_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;selected_chain&quot;. C++ signature :  void remove_selected_chain_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1714, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_parameter_listener()', 'description': 'remove_selected_parameter_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;selected_parameter&quot;. C++ signature :  void remove_selected_parameter_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_parameter_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1715, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_scene_listener()', 'description': 'remove_selected_scene_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;selected_scene&quot;. C++ signature :  void remove_selected_scene_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_scene_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1716, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_track_listener()', 'description': 'remove_selected_track_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;selected_track&quot;. C++ signature :  void remove_selected_track_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_track_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1718, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_chain_has_listener()', 'description': 'selected_chain_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;selected_chain&quot;. C++ signature :  bool selected_chain_has_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_chain_has_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1719, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_parameter_has_listener()', 'description': 'selected_parameter_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;selected_parameter&quot;. C++ signature :  bool selected_parameter_has_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_parameter_has_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1720, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_scene_has_listener()', 'description': 'selected_scene_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;selected_scene&quot;. C++ signature :  bool selected_scene_has_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_scene_has_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1721, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_track_has_listener()', 'description': 'selected_track_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;selected_track&quot;. C++ signature :  bool selected_track_has_listener(TPyViewData<ASong>,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_track_has_listener()'], 'hierarchy': 4, 'ref_parent': 1689, 'children': [], 'group': 'listener Method'}
{'ref': 1819, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_arm_listener()', 'description': 'add_arm_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;arm&quot; has changed. C++ signature :  void add_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_arm_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1820, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_arrangement_clips_listener()', 'description': 'add_arrangement_clips_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;arrangement_clips&quot; has changed. C++ signature :  void add_arrangement_clips_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_arrangement_clips_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1821, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_input_routing_channels_listener()', 'description': 'add_available_input_routing_channels_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_channels&quot; has changed. C++ signature :  void add_available_input_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1822, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_input_routing_types_listener()', 'description': 'add_available_input_routing_types_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_types&quot; has changed. C++ signature :  void add_available_input_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1823, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_output_routing_channels_listener()', 'description': 'add_available_output_routing_channels_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;available_output_routing_channels&quot; has changed. C++ signature :  void add_available_output_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_output_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1824, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_output_routing_types_listener()', 'description': 'add_available_output_routing_types_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;available_output_routing_types&quot; has changed. C++ signature :  void add_available_output_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_output_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1825, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_clip_slots_listener()', 'description': 'add_clip_slots_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;clip_slots&quot; has changed. C++ signature :  void add_clip_slots_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1826, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_color_index_listener()', 'description': 'add_color_index_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1827, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_color_listener()', 'description': 'add_color_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1828, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_input_routing_listener()', 'description': 'add_current_input_routing_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;current_input_routing&quot; has changed. C++ signature :  void add_current_input_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_input_routing_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1829, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_input_sub_routing_listener()', 'description': 'add_current_input_sub_routing_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;current_input_sub_routing&quot; has changed. C++ signature :  void add_current_input_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_input_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1830, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_monitoring_state_listener()', 'description': 'add_current_monitoring_state_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;current_monitoring_state&quot; has changed. C++ signature :  void add_current_monitoring_state_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_monitoring_state_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1831, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_output_routing_listener()', 'description': 'add_current_output_routing_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;current_output_routing&quot; has changed. C++ signature :  void add_current_output_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_output_routing_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1832, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_output_sub_routing_listener()', 'description': 'add_current_output_sub_routing_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;current_output_sub_routing&quot; has changed. C++ signature :  void add_current_output_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_output_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1833, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_data_listener()', 'description': 'add_data_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;data&quot; has changed. C++ signature :  void add_data_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_data_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1834, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_devices_listener()', 'description': 'add_devices_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;devices&quot; has changed. C++ signature :  void add_devices_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_devices_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1835, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_fired_slot_index_listener()', 'description': 'add_fired_slot_index_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;fired_slot_index&quot; has changed. C++ signature :  void add_fired_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_fired_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1836, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_audio_input_listener()', 'description': 'add_has_audio_input_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;has_audio_input&quot; has changed. C++ signature :  void add_has_audio_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_audio_input_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1837, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_audio_output_listener()', 'description': 'add_has_audio_output_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;has_audio_output&quot; has changed. C++ signature :  void add_has_audio_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_audio_output_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1838, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_midi_input_listener()', 'description': 'add_has_midi_input_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;has_midi_input&quot; has changed. C++ signature :  void add_has_midi_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_midi_input_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1839, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_midi_output_listener()', 'description': 'add_has_midi_output_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;has_midi_output&quot; has changed. C++ signature :  void add_has_midi_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_midi_output_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1840, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_implicit_arm_listener()', 'description': 'add_implicit_arm_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;implicit_arm&quot; has changed. C++ signature :  void add_implicit_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_implicit_arm_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1841, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_meter_left_listener()', 'description': 'add_input_meter_left_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;input_meter_left&quot; has changed. C++ signature :  void add_input_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1842, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_meter_level_listener()', 'description': 'add_input_meter_level_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;input_meter_level&quot; has changed. C++ signature :  void add_input_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1843, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_meter_right_listener()', 'description': 'add_input_meter_right_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;input_meter_right&quot; has changed. C++ signature :  void add_input_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1844, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_routing_channel_listener()', 'description': 'add_input_routing_channel_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_channel&quot; has changed. C++ signature :  void add_input_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1845, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_routing_type_listener()', 'description': 'add_input_routing_type_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_type&quot; has changed. C++ signature :  void add_input_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1846, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_routings_listener()', 'description': 'add_input_routings_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;input_routings&quot; has changed. C++ signature :  void add_input_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_routings_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1847, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_sub_routings_listener()', 'description': 'add_input_sub_routings_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;input_sub_routings&quot; has changed. C++ signature :  void add_input_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1848, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_is_frozen_listener()', 'description': 'add_is_frozen_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_frozen&quot; has changed. C++ signature :  void add_is_frozen_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_is_frozen_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1849, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_is_showing_chains_listener()', 'description': 'add_is_showing_chains_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_showing_chains&quot; has changed. C++ signature :  void add_is_showing_chains_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1850, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_mute_listener()', 'description': 'add_mute_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1851, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_muted_via_solo_listener()', 'description': 'add_muted_via_solo_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;muted_via_solo&quot; has changed. C++ signature :  void add_muted_via_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1852, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_name_listener()', 'description': 'add_name_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1853, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_meter_left_listener()', 'description': 'add_output_meter_left_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;output_meter_left&quot; has changed. C++ signature :  void add_output_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1854, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_meter_level_listener()', 'description': 'add_output_meter_level_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;output_meter_level&quot; has changed. C++ signature :  void add_output_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1855, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_meter_right_listener()', 'description': 'add_output_meter_right_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;output_meter_right&quot; has changed. C++ signature :  void add_output_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1856, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_routing_channel_listener()', 'description': 'add_output_routing_channel_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;output_routing_channel&quot; has changed. C++ signature :  void add_output_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1857, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_routing_type_listener()', 'description': 'add_output_routing_type_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;output_routing_type&quot; has changed. C++ signature :  void add_output_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1858, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_routings_listener()', 'description': 'add_output_routings_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;output_routings&quot; has changed. C++ signature :  void add_output_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_routings_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1859, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_sub_routings_listener()', 'description': 'add_output_sub_routings_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;output_sub_routings&quot; has changed. C++ signature :  void add_output_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1860, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_playing_slot_index_listener()', 'description': 'add_playing_slot_index_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;playing_slot_index&quot; has changed. C++ signature :  void add_playing_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_playing_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1861, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_solo_listener()', 'description': 'add_solo_listener( (Track)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1862, 'tag': 'listener Method', 'name': 'Live.Track.Track.arm_has_listener()', 'description': 'arm_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;arm&quot;. C++ signature :  bool arm_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'arm_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1863, 'tag': 'listener Method', 'name': 'Live.Track.Track.arrangement_clips_has_listener()', 'description': 'arrangement_clips_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;arrangement_clips&quot;. C++ signature :  bool arrangement_clips_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'arrangement_clips_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1864, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_input_routing_channels_has_listener()', 'description': 'available_input_routing_channels_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_channels&quot;. C++ signature :  bool available_input_routing_channels_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_input_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1865, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_input_routing_types_has_listener()', 'description': 'available_input_routing_types_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_types&quot;. C++ signature :  bool available_input_routing_types_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_input_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1866, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_output_routing_channels_has_listener()', 'description': 'available_output_routing_channels_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;available_output_routing_channels&quot;. C++ signature :  bool available_output_routing_channels_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_output_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1867, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_output_routing_types_has_listener()', 'description': 'available_output_routing_types_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;available_output_routing_types&quot;. C++ signature :  bool available_output_routing_types_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_output_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1868, 'tag': 'listener Method', 'name': 'Live.Track.Track.clip_slots_has_listener()', 'description': 'clip_slots_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;clip_slots&quot;. C++ signature :  bool clip_slots_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'clip_slots_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1869, 'tag': 'listener Method', 'name': 'Live.Track.Track.color_has_listener()', 'description': 'color_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1870, 'tag': 'listener Method', 'name': 'Live.Track.Track.color_index_has_listener()', 'description': 'color_index_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1871, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_input_routing_has_listener()', 'description': 'current_input_routing_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;current_input_routing&quot;. C++ signature :  bool current_input_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_input_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1872, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_input_sub_routing_has_listener()', 'description': 'current_input_sub_routing_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;current_input_sub_routing&quot;. C++ signature :  bool current_input_sub_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_input_sub_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1873, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_monitoring_state_has_listener()', 'description': 'current_monitoring_state_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;current_monitoring_state&quot;. C++ signature :  bool current_monitoring_state_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_monitoring_state_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1874, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_output_routing_has_listener()', 'description': 'current_output_routing_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;current_output_routing&quot;. C++ signature :  bool current_output_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_output_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1875, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_output_sub_routing_has_listener()', 'description': 'current_output_sub_routing_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;current_output_sub_routing&quot;. C++ signature :  bool current_output_sub_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_output_sub_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1876, 'tag': 'listener Method', 'name': 'Live.Track.Track.data_has_listener()', 'description': 'data_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;data&quot;. C++ signature :  bool data_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'data_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1879, 'tag': 'listener Method', 'name': 'Live.Track.Track.devices_has_listener()', 'description': 'devices_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;devices&quot;. C++ signature :  bool devices_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'devices_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1882, 'tag': 'listener Method', 'name': 'Live.Track.Track.fired_slot_index_has_listener()', 'description': 'fired_slot_index_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;fired_slot_index&quot;. C++ signature :  bool fired_slot_index_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'fired_slot_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1884, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_audio_input_has_listener()', 'description': 'has_audio_input_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;has_audio_input&quot;. C++ signature :  bool has_audio_input_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_audio_input_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1885, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_audio_output_has_listener()', 'description': 'has_audio_output_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;has_audio_output&quot;. C++ signature :  bool has_audio_output_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_audio_output_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1886, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_midi_input_has_listener()', 'description': 'has_midi_input_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;has_midi_input&quot;. C++ signature :  bool has_midi_input_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_midi_input_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1887, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_midi_output_has_listener()', 'description': 'has_midi_output_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;has_midi_output&quot;. C++ signature :  bool has_midi_output_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_midi_output_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1888, 'tag': 'listener Method', 'name': 'Live.Track.Track.implicit_arm_has_listener()', 'description': 'implicit_arm_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;implicit_arm&quot;. C++ signature :  bool implicit_arm_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'implicit_arm_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1889, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_meter_left_has_listener()', 'description': 'input_meter_left_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;input_meter_left&quot;. C++ signature :  bool input_meter_left_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_meter_left_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1890, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_meter_level_has_listener()', 'description': 'input_meter_level_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;input_meter_level&quot;. C++ signature :  bool input_meter_level_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_meter_level_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1891, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_meter_right_has_listener()', 'description': 'input_meter_right_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;input_meter_right&quot;. C++ signature :  bool input_meter_right_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_meter_right_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1892, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_routing_channel_has_listener()', 'description': 'input_routing_channel_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_channel&quot;. C++ signature :  bool input_routing_channel_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1893, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_routing_type_has_listener()', 'description': 'input_routing_type_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_type&quot;. C++ signature :  bool input_routing_type_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1894, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_routings_has_listener()', 'description': 'input_routings_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;input_routings&quot;. C++ signature :  bool input_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1895, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_sub_routings_has_listener()', 'description': 'input_sub_routings_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;input_sub_routings&quot;. C++ signature :  bool input_sub_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_sub_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1896, 'tag': 'listener Method', 'name': 'Live.Track.Track.is_frozen_has_listener()', 'description': 'is_frozen_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_frozen&quot;. C++ signature :  bool is_frozen_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'is_frozen_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1897, 'tag': 'listener Method', 'name': 'Live.Track.Track.is_showing_chains_has_listener()', 'description': 'is_showing_chains_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_showing_chains&quot;. C++ signature :  bool is_showing_chains_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'is_showing_chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1899, 'tag': 'listener Method', 'name': 'Live.Track.Track.mute_has_listener()', 'description': 'mute_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1900, 'tag': 'listener Method', 'name': 'Live.Track.Track.muted_via_solo_has_listener()', 'description': 'muted_via_solo_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;muted_via_solo&quot;. C++ signature :  bool muted_via_solo_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'muted_via_solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1901, 'tag': 'listener Method', 'name': 'Live.Track.Track.name_has_listener()', 'description': 'name_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1902, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_meter_left_has_listener()', 'description': 'output_meter_left_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;output_meter_left&quot;. C++ signature :  bool output_meter_left_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_meter_left_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1903, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_meter_level_has_listener()', 'description': 'output_meter_level_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;output_meter_level&quot;. C++ signature :  bool output_meter_level_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_meter_level_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1904, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_meter_right_has_listener()', 'description': 'output_meter_right_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;output_meter_right&quot;. C++ signature :  bool output_meter_right_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_meter_right_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1905, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_routing_channel_has_listener()', 'description': 'output_routing_channel_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;output_routing_channel&quot;. C++ signature :  bool output_routing_channel_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1906, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_routing_type_has_listener()', 'description': 'output_routing_type_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;output_routing_type&quot;. C++ signature :  bool output_routing_type_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1907, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_routings_has_listener()', 'description': 'output_routings_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;output_routings&quot;. C++ signature :  bool output_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1908, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_sub_routings_has_listener()', 'description': 'output_sub_routings_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;output_sub_routings&quot;. C++ signature :  bool output_sub_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_sub_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1909, 'tag': 'listener Method', 'name': 'Live.Track.Track.playing_slot_index_has_listener()', 'description': 'playing_slot_index_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;playing_slot_index&quot;. C++ signature :  bool playing_slot_index_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'playing_slot_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1910, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_arm_listener()', 'description': 'remove_arm_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;arm&quot;. C++ signature :  void remove_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_arm_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1911, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_arrangement_clips_listener()', 'description': 'remove_arrangement_clips_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;arrangement_clips&quot;. C++ signature :  void remove_arrangement_clips_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_arrangement_clips_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1912, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_input_routing_channels_listener()', 'description': 'remove_available_input_routing_channels_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;available_input_routing_channels&quot;. C++ signature :  void remove_available_input_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1913, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_input_routing_types_listener()', 'description': 'remove_available_input_routing_types_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;available_input_routing_types&quot;. C++ signature :  void remove_available_input_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1914, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_output_routing_channels_listener()', 'description': 'remove_available_output_routing_channels_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;available_output_routing_channels&quot;. C++ signature :  void remove_available_output_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_output_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1915, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_output_routing_types_listener()', 'description': 'remove_available_output_routing_types_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;available_output_routing_types&quot;. C++ signature :  void remove_available_output_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_output_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1916, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_clip_slots_listener()', 'description': 'remove_clip_slots_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;clip_slots&quot;. C++ signature :  void remove_clip_slots_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1917, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1918, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_color_listener()', 'description': 'remove_color_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1919, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_input_routing_listener()', 'description': 'remove_current_input_routing_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;current_input_routing&quot;. C++ signature :  void remove_current_input_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_input_routing_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1920, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_input_sub_routing_listener()', 'description': 'remove_current_input_sub_routing_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;current_input_sub_routing&quot;. C++ signature :  void remove_current_input_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_input_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1921, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_monitoring_state_listener()', 'description': 'remove_current_monitoring_state_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;current_monitoring_state&quot;. C++ signature :  void remove_current_monitoring_state_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_monitoring_state_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1922, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_output_routing_listener()', 'description': 'remove_current_output_routing_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;current_output_routing&quot;. C++ signature :  void remove_current_output_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_output_routing_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1923, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_output_sub_routing_listener()', 'description': 'remove_current_output_sub_routing_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;current_output_sub_routing&quot;. C++ signature :  void remove_current_output_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_output_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1924, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_data_listener()', 'description': 'remove_data_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;data&quot;. C++ signature :  void remove_data_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_data_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1925, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_devices_listener()', 'description': 'remove_devices_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;devices&quot;. C++ signature :  void remove_devices_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_devices_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1926, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_fired_slot_index_listener()', 'description': 'remove_fired_slot_index_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;fired_slot_index&quot;. C++ signature :  void remove_fired_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_fired_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1927, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_audio_input_listener()', 'description': 'remove_has_audio_input_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;has_audio_input&quot;. C++ signature :  void remove_has_audio_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_audio_input_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1928, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_audio_output_listener()', 'description': 'remove_has_audio_output_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;has_audio_output&quot;. C++ signature :  void remove_has_audio_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_audio_output_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1929, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_midi_input_listener()', 'description': 'remove_has_midi_input_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;has_midi_input&quot;. C++ signature :  void remove_has_midi_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_midi_input_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1930, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_midi_output_listener()', 'description': 'remove_has_midi_output_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;has_midi_output&quot;. C++ signature :  void remove_has_midi_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_midi_output_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1931, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_implicit_arm_listener()', 'description': 'remove_implicit_arm_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;implicit_arm&quot;. C++ signature :  void remove_implicit_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_implicit_arm_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1932, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_meter_left_listener()', 'description': 'remove_input_meter_left_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;input_meter_left&quot;. C++ signature :  void remove_input_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1933, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_meter_level_listener()', 'description': 'remove_input_meter_level_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;input_meter_level&quot;. C++ signature :  void remove_input_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1934, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_meter_right_listener()', 'description': 'remove_input_meter_right_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;input_meter_right&quot;. C++ signature :  void remove_input_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1935, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_routing_channel_listener()', 'description': 'remove_input_routing_channel_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;input_routing_channel&quot;. C++ signature :  void remove_input_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1936, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_routing_type_listener()', 'description': 'remove_input_routing_type_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;input_routing_type&quot;. C++ signature :  void remove_input_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1937, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_routings_listener()', 'description': 'remove_input_routings_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;input_routings&quot;. C++ signature :  void remove_input_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_routings_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1938, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_sub_routings_listener()', 'description': 'remove_input_sub_routings_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;input_sub_routings&quot;. C++ signature :  void remove_input_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1939, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_is_frozen_listener()', 'description': 'remove_is_frozen_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_frozen&quot;. C++ signature :  void remove_is_frozen_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_is_frozen_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1940, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_is_showing_chains_listener()', 'description': 'remove_is_showing_chains_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_showing_chains&quot;. C++ signature :  void remove_is_showing_chains_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1941, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_mute_listener()', 'description': 'remove_mute_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1942, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_muted_via_solo_listener()', 'description': 'remove_muted_via_solo_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;muted_via_solo&quot;. C++ signature :  void remove_muted_via_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1943, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_name_listener()', 'description': 'remove_name_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1944, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_meter_left_listener()', 'description': 'remove_output_meter_left_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;output_meter_left&quot;. C++ signature :  void remove_output_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1945, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_meter_level_listener()', 'description': 'remove_output_meter_level_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;output_meter_level&quot;. C++ signature :  void remove_output_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1946, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_meter_right_listener()', 'description': 'remove_output_meter_right_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;output_meter_right&quot;. C++ signature :  void remove_output_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1947, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_routing_channel_listener()', 'description': 'remove_output_routing_channel_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;output_routing_channel&quot;. C++ signature :  void remove_output_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1948, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_routing_type_listener()', 'description': 'remove_output_routing_type_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;output_routing_type&quot;. C++ signature :  void remove_output_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1949, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_routings_listener()', 'description': 'remove_output_routings_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;output_routings&quot;. C++ signature :  void remove_output_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_routings_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1950, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_sub_routings_listener()', 'description': 'remove_output_sub_routings_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;output_sub_routings&quot;. C++ signature :  void remove_output_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1951, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_playing_slot_index_listener()', 'description': 'remove_playing_slot_index_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;playing_slot_index&quot;. C++ signature :  void remove_playing_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_playing_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1952, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_solo_listener()', 'description': 'remove_solo_listener( (Track)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1954, 'tag': 'listener Method', 'name': 'Live.Track.Track.solo_has_listener()', 'description': 'solo_has_listener( (Track)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 1763, 'children': [], 'group': 'listener Method'}
{'ref': 1966, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.add_device_insert_mode_listener()', 'description': 'add_device_insert_mode_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;device_insert_mode&quot; has changed. C++ signature :  void add_device_insert_mode_listener(TPyViewData<ATrack>,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'add_device_insert_mode_listener()'], 'hierarchy': 4, 'ref_parent': 1960, 'children': [], 'group': 'listener Method'}
{'ref': 1967, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData<ATrack>,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 1960, 'children': [], 'group': 'listener Method'}
{'ref': 1968, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.add_selected_device_listener()', 'description': 'add_selected_device_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;selected_device&quot; has changed. C++ signature :  void add_selected_device_listener(TPyViewData<ATrack>,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'add_selected_device_listener()'], 'hierarchy': 4, 'ref_parent': 1960, 'children': [], 'group': 'listener Method'}
{'ref': 1969, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.device_insert_mode_has_listener()', 'description': 'device_insert_mode_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;device_insert_mode&quot;. C++ signature :  bool device_insert_mode_has_listener(TPyViewData<ATrack>,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'device_insert_mode_has_listener()'], 'hierarchy': 4, 'ref_parent': 1960, 'children': [], 'group': 'listener Method'}
{'ref': 1970, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData<ATrack>,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 1960, 'children': [], 'group': 'listener Method'}
{'ref': 1971, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.remove_device_insert_mode_listener()', 'description': 'remove_device_insert_mode_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;device_insert_mode&quot;. C++ signature :  void remove_device_insert_mode_listener(TPyViewData<ATrack>,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'remove_device_insert_mode_listener()'], 'hierarchy': 4, 'ref_parent': 1960, 'children': [], 'group': 'listener Method'}
{'ref': 1972, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData<ATrack>,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 1960, 'children': [], 'group': 'listener Method'}
{'ref': 1973, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.remove_selected_device_listener()', 'description': 'remove_selected_device_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;selected_device&quot;. C++ signature :  void remove_selected_device_listener(TPyViewData<ATrack>,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'remove_selected_device_listener()'], 'hierarchy': 4, 'ref_parent': 1960, 'children': [], 'group': 'listener Method'}
{'ref': 1975, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.selected_device_has_listener()', 'description': 'selected_device_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;selected_device&quot;. C++ signature :  bool selected_device_has_listener(TPyViewData<ATrack>,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'selected_device_has_listener()'], 'hierarchy': 4, 'ref_parent': 1960, 'children': [], 'group': 'listener Method'}
{'ref': 2001, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.add_frequency_dial_mode_index_listener()', 'description': 'add_frequency_dial_mode_index_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;frequency_dial_mode_index&quot; has changed. C++ signature :  void add_frequency_dial_mode_index_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'add_frequency_dial_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2002, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.add_frequency_dial_mode_list_listener()', 'description': 'add_frequency_dial_mode_list_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;frequency_dial_mode_list&quot; has changed. C++ signature :  void add_frequency_dial_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'add_frequency_dial_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2003, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2004, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.add_midi_gate_index_listener()', 'description': 'add_midi_gate_index_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;midi_gate_index&quot; has changed. C++ signature :  void add_midi_gate_index_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'add_midi_gate_index_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2005, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.add_midi_gate_list_listener()', 'description': 'add_midi_gate_list_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;midi_gate_list&quot; has changed. C++ signature :  void add_midi_gate_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'add_midi_gate_list_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2006, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.add_mod_mode_index_listener()', 'description': 'add_mod_mode_index_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;mod_mode_index&quot; has changed. C++ signature :  void add_mod_mode_index_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'add_mod_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2007, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.add_mod_mode_list_listener()', 'description': 'add_mod_mode_list_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;mod_mode_list&quot; has changed. C++ signature :  void add_mod_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'add_mod_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2008, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.add_mono_poly_index_listener()', 'description': 'add_mono_poly_index_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly_index&quot; has changed. C++ signature :  void add_mono_poly_index_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'add_mono_poly_index_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2009, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.add_mono_poly_list_listener()', 'description': 'add_mono_poly_list_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly_list&quot; has changed. C++ signature :  void add_mono_poly_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'add_mono_poly_list_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2010, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2011, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2012, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.add_pitch_bend_range_listener()', 'description': 'add_pitch_bend_range_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;pitch_bend_range&quot; has changed. C++ signature :  void add_pitch_bend_range_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'add_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2013, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.add_pitch_mode_index_listener()', 'description': 'add_pitch_mode_index_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;pitch_mode_index&quot; has changed. C++ signature :  void add_pitch_mode_index_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'add_pitch_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2014, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.add_pitch_mode_list_listener()', 'description': 'add_pitch_mode_list_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;pitch_mode_list&quot; has changed. C++ signature :  void add_pitch_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'add_pitch_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2015, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.add_polyphony_listener()', 'description': 'add_polyphony_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;polyphony&quot; has changed. C++ signature :  void add_polyphony_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'add_polyphony_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2016, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.frequency_dial_mode_index_has_listener()', 'description': 'frequency_dial_mode_index_has_listener( (TransmuteDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;frequency_dial_mode_index&quot;. C++ signature :  bool frequency_dial_mode_index_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'frequency_dial_mode_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2017, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.frequency_dial_mode_list_has_listener()', 'description': 'frequency_dial_mode_list_has_listener( (TransmuteDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;frequency_dial_mode_list&quot;. C++ signature :  bool frequency_dial_mode_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'frequency_dial_mode_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2018, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2019, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.midi_gate_index_has_listener()', 'description': 'midi_gate_index_has_listener( (TransmuteDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;midi_gate_index&quot;. C++ signature :  bool midi_gate_index_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'midi_gate_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2020, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.midi_gate_list_has_listener()', 'description': 'midi_gate_list_has_listener( (TransmuteDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;midi_gate_list&quot;. C++ signature :  bool midi_gate_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'midi_gate_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2021, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.mod_mode_index_has_listener()', 'description': 'mod_mode_index_has_listener( (TransmuteDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;mod_mode_index&quot;. C++ signature :  bool mod_mode_index_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'mod_mode_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2022, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.mod_mode_list_has_listener()', 'description': 'mod_mode_list_has_listener( (TransmuteDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;mod_mode_list&quot;. C++ signature :  bool mod_mode_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'mod_mode_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2023, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.mono_poly_index_has_listener()', 'description': 'mono_poly_index_has_listener( (TransmuteDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly_index&quot;. C++ signature :  bool mono_poly_index_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'mono_poly_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2024, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.mono_poly_list_has_listener()', 'description': 'mono_poly_list_has_listener( (TransmuteDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly_list&quot;. C++ signature :  bool mono_poly_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'mono_poly_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2025, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2026, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2027, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.pitch_bend_range_has_listener()', 'description': 'pitch_bend_range_has_listener( (TransmuteDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_bend_range&quot;. C++ signature :  bool pitch_bend_range_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2028, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.pitch_mode_index_has_listener()', 'description': 'pitch_mode_index_has_listener( (TransmuteDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_mode_index&quot;. C++ signature :  bool pitch_mode_index_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'pitch_mode_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2029, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.pitch_mode_list_has_listener()', 'description': 'pitch_mode_list_has_listener( (TransmuteDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_mode_list&quot;. C++ signature :  bool pitch_mode_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'pitch_mode_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2030, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.polyphony_has_listener()', 'description': 'polyphony_has_listener( (TransmuteDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;polyphony&quot;. C++ signature :  bool polyphony_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'polyphony_has_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2031, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.remove_frequency_dial_mode_index_listener()', 'description': 'remove_frequency_dial_mode_index_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;frequency_dial_mode_index&quot;. C++ signature :  void remove_frequency_dial_mode_index_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'remove_frequency_dial_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2032, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.remove_frequency_dial_mode_list_listener()', 'description': 'remove_frequency_dial_mode_list_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;frequency_dial_mode_list&quot;. C++ signature :  void remove_frequency_dial_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'remove_frequency_dial_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2033, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2034, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.remove_midi_gate_index_listener()', 'description': 'remove_midi_gate_index_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;midi_gate_index&quot;. C++ signature :  void remove_midi_gate_index_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'remove_midi_gate_index_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2035, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.remove_midi_gate_list_listener()', 'description': 'remove_midi_gate_list_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;midi_gate_list&quot;. C++ signature :  void remove_midi_gate_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'remove_midi_gate_list_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2036, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.remove_mod_mode_index_listener()', 'description': 'remove_mod_mode_index_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;mod_mode_index&quot;. C++ signature :  void remove_mod_mode_index_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'remove_mod_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2037, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.remove_mod_mode_list_listener()', 'description': 'remove_mod_mode_list_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;mod_mode_list&quot;. C++ signature :  void remove_mod_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'remove_mod_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2038, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.remove_mono_poly_index_listener()', 'description': 'remove_mono_poly_index_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;mono_poly_index&quot;. C++ signature :  void remove_mono_poly_index_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'remove_mono_poly_index_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2039, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.remove_mono_poly_list_listener()', 'description': 'remove_mono_poly_list_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;mono_poly_list&quot;. C++ signature :  void remove_mono_poly_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'remove_mono_poly_list_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2040, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2041, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2042, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.remove_pitch_bend_range_listener()', 'description': 'remove_pitch_bend_range_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;pitch_bend_range&quot;. C++ signature :  void remove_pitch_bend_range_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'remove_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2043, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.remove_pitch_mode_index_listener()', 'description': 'remove_pitch_mode_index_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;pitch_mode_index&quot;. C++ signature :  void remove_pitch_mode_index_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'remove_pitch_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2044, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.remove_pitch_mode_list_listener()', 'description': 'remove_pitch_mode_list_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;pitch_mode_list&quot;. C++ signature :  void remove_pitch_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'remove_pitch_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2045, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.remove_polyphony_listener()', 'description': 'remove_polyphony_listener( (TransmuteDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;polyphony&quot;. C++ signature :  void remove_polyphony_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'remove_polyphony_listener()'], 'hierarchy': 3, 'ref_parent': 1977, 'children': [], 'group': 'listener Method'}
{'ref': 2051, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2047, 'children': [], 'group': 'listener Method'}
{'ref': 2052, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 2047, 'children': [], 'group': 'listener Method'}
{'ref': 2053, 'tag': 'listener Method', 'name': 'Live.TransmuteDevice.TransmuteDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'TransmuteDevice', 'TransmuteDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2047, 'children': [], 'group': 'listener Method'}
{'ref': 2122, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_filter_routing_listener()', 'description': 'add_filter_routing_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;filter_routing&quot; has changed. C++ signature :  void add_filter_routing_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_filter_routing_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2123, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2124, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_modulation_matrix_changed_listener()', 'description': 'add_modulation_matrix_changed_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;modulation_matrix_changed&quot; has changed. C++ signature :  void add_modulation_matrix_changed_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_modulation_matrix_changed_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2125, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_mono_poly_listener()', 'description': 'add_mono_poly_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly&quot; has changed. C++ signature :  void add_mono_poly_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2126, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2127, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_effect_mode_listener()', 'description': 'add_oscillator_1_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_effect_mode&quot; has changed. C++ signature :  void add_oscillator_1_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2128, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_wavetable_category_listener()', 'description': 'add_oscillator_1_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_wavetable_category&quot; has changed. C++ signature :  void add_oscillator_1_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2129, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_wavetable_index_listener()', 'description': 'add_oscillator_1_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_wavetable_index&quot; has changed. C++ signature :  void add_oscillator_1_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2130, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_wavetables_listener()', 'description': 'add_oscillator_1_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_wavetables&quot; has changed. C++ signature :  void add_oscillator_1_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2131, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_effect_mode_listener()', 'description': 'add_oscillator_2_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_effect_mode&quot; has changed. C++ signature :  void add_oscillator_2_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2132, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_wavetable_category_listener()', 'description': 'add_oscillator_2_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetable_category&quot; has changed. C++ signature :  void add_oscillator_2_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2133, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_wavetable_index_listener()', 'description': 'add_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetable_index&quot; has changed. C++ signature :  void add_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)add_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetable_index&quot; has changed. C++ signature :  void add_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2134, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_wavetables_listener()', 'description': 'add_oscillator_2_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetables&quot; has changed. C++ signature :  void add_oscillator_2_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2136, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2137, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_poly_voices_listener()', 'description': 'add_poly_voices_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;poly_voices&quot; has changed. C++ signature :  void add_poly_voices_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_poly_voices_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2138, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_unison_mode_listener()', 'description': 'add_unison_mode_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;unison_mode&quot; has changed. C++ signature :  void add_unison_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_unison_mode_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2139, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_unison_voice_count_listener()', 'description': 'add_unison_voice_count_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;unison_voice_count&quot; has changed. C++ signature :  void add_unison_voice_count_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_unison_voice_count_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2140, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_visible_modulation_target_names_listener()', 'description': 'add_visible_modulation_target_names_listener( (WavetableDevice)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;visible_modulation_target_names&quot; has changed. C++ signature :  void add_visible_modulation_target_names_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_visible_modulation_target_names_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2141, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.filter_routing_has_listener()', 'description': 'filter_routing_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;filter_routing&quot;. C++ signature :  bool filter_routing_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'filter_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2144, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2146, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.modulation_matrix_changed_has_listener()', 'description': 'modulation_matrix_changed_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;modulation_matrix_changed&quot;. C++ signature :  bool modulation_matrix_changed_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'modulation_matrix_changed_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2147, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.mono_poly_has_listener()', 'description': 'mono_poly_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly&quot;. C++ signature :  bool mono_poly_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'mono_poly_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2148, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2149, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_effect_mode_has_listener()', 'description': 'oscillator_1_effect_mode_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_effect_mode&quot;. C++ signature :  bool oscillator_1_effect_mode_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_effect_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2150, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_wavetable_category_has_listener()', 'description': 'oscillator_1_wavetable_category_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_wavetable_category&quot;. C++ signature :  bool oscillator_1_wavetable_category_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_wavetable_category_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2151, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_wavetable_index_has_listener()', 'description': 'oscillator_1_wavetable_index_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_wavetable_index&quot;. C++ signature :  bool oscillator_1_wavetable_index_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_wavetable_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2152, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_wavetables_has_listener()', 'description': 'oscillator_1_wavetables_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_wavetables&quot;. C++ signature :  bool oscillator_1_wavetables_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_wavetables_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2153, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_effect_mode_has_listener()', 'description': 'oscillator_2_effect_mode_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_effect_mode&quot;. C++ signature :  bool oscillator_2_effect_mode_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_effect_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2154, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_wavetable_category_has_listener()', 'description': 'oscillator_2_wavetable_category_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetable_category&quot;. C++ signature :  bool oscillator_2_wavetable_category_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_wavetable_category_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2155, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_wavetable_index_has_listener()', 'description': 'oscillator_2_wavetable_index_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  bool oscillator_2_wavetable_index_has_listener(TWavetableDevicePyHandle,boost::python::api::object)oscillator_2_wavetable_index_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  bool oscillator_2_wavetable_index_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_wavetable_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2156, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_wavetables_has_listener()', 'description': 'oscillator_2_wavetables_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetables&quot;. C++ signature :  bool oscillator_2_wavetables_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_wavetables_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2157, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2158, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.poly_voices_has_listener()', 'description': 'poly_voices_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;poly_voices&quot;. C++ signature :  bool poly_voices_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'poly_voices_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2159, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_filter_routing_listener()', 'description': 'remove_filter_routing_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;filter_routing&quot;. C++ signature :  void remove_filter_routing_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_filter_routing_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2160, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2161, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_modulation_matrix_changed_listener()', 'description': 'remove_modulation_matrix_changed_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;modulation_matrix_changed&quot;. C++ signature :  void remove_modulation_matrix_changed_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_modulation_matrix_changed_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2162, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_mono_poly_listener()', 'description': 'remove_mono_poly_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;mono_poly&quot;. C++ signature :  void remove_mono_poly_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2163, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2164, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_effect_mode_listener()', 'description': 'remove_oscillator_1_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;oscillator_1_effect_mode&quot;. C++ signature :  void remove_oscillator_1_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2165, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_wavetable_category_listener()', 'description': 'remove_oscillator_1_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;oscillator_1_wavetable_category&quot;. C++ signature :  void remove_oscillator_1_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2166, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_wavetable_index_listener()', 'description': 'remove_oscillator_1_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;oscillator_1_wavetable_index&quot;. C++ signature :  void remove_oscillator_1_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2167, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_wavetables_listener()', 'description': 'remove_oscillator_1_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;oscillator_1_wavetables&quot;. C++ signature :  void remove_oscillator_1_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2168, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_effect_mode_listener()', 'description': 'remove_oscillator_2_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;oscillator_2_effect_mode&quot;. C++ signature :  void remove_oscillator_2_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2169, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_wavetable_category_listener()', 'description': 'remove_oscillator_2_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetable_category&quot;. C++ signature :  void remove_oscillator_2_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2170, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_wavetable_index_listener()', 'description': 'remove_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  void remove_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)remove_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  void remove_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2171, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_wavetables_listener()', 'description': 'remove_oscillator_2_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetables&quot;. C++ signature :  void remove_oscillator_2_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2172, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle<ADevice>,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2173, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_poly_voices_listener()', 'description': 'remove_poly_voices_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;poly_voices&quot;. C++ signature :  void remove_poly_voices_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_poly_voices_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2174, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_unison_mode_listener()', 'description': 'remove_unison_mode_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;unison_mode&quot;. C++ signature :  void remove_unison_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_unison_mode_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2175, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_unison_voice_count_listener()', 'description': 'remove_unison_voice_count_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;unison_voice_count&quot;. C++ signature :  void remove_unison_voice_count_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_unison_voice_count_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2176, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_visible_modulation_target_names_listener()', 'description': 'remove_visible_modulation_target_names_listener( (WavetableDevice)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;visible_modulation_target_names&quot;. C++ signature :  void remove_visible_modulation_target_names_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_visible_modulation_target_names_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2179, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.unison_mode_has_listener()', 'description': 'unison_mode_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;unison_mode&quot;. C++ signature :  bool unison_mode_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'unison_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2180, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.unison_voice_count_has_listener()', 'description': 'unison_voice_count_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;unison_voice_count&quot;. C++ signature :  bool unison_voice_count_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'unison_voice_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2181, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.visible_modulation_target_names_has_listener()', 'description': 'visible_modulation_target_names_has_listener( (WavetableDevice)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;visible_modulation_target_names&quot;. C++ signature :  bool visible_modulation_target_names_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'visible_modulation_target_names_has_listener()'], 'hierarchy': 3, 'ref_parent': 2095, 'children': [], 'group': 'listener Method'}
{'ref': 2186, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2182, 'children': [], 'group': 'listener Method'}
{'ref': 2187, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -> bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 2182, 'children': [], 'group': 'listener Method'}
{'ref': 2188, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -> None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData<ADevice>,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2182, 'children': [], 'group': 'listener Method'}
