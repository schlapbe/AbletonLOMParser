dic=[{'ref': 8, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_average_process_usage_listener()', 'description': 'add_average_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;average_process_usage&quot; has changed. C++ signature :  void add_average_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_average_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 9, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_control_surfaces_listener()', 'description': 'add_control_surfaces_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;control_surfaces&quot; has changed. C++ signature :  void add_control_surfaces_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_control_surfaces_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 10, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_open_dialog_count_listener()', 'description': 'add_open_dialog_count_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;open_dialog_count&quot; has changed. C++ signature :  void add_open_dialog_count_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_open_dialog_count_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 11, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_peak_process_usage_listener()', 'description': 'add_peak_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;peak_process_usage&quot; has changed. C++ signature :  void add_peak_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_peak_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 12, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_unavailable_features_listener()', 'description': 'add_unavailable_features_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;unavailable_features&quot; has changed. C++ signature :  void add_unavailable_features_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_unavailable_features_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 13, 'tag': 'listener Method', 'name': 'Live.Application.Application.average_process_usage_has_listener()', 'description': 'average_process_usage_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;average_process_usage&quot;. C++ signature :  bool average_process_usage_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'average_process_usage_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 14, 'tag': 'listener Method', 'name': 'Live.Application.Application.control_surfaces_has_listener()', 'description': 'control_surfaces_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;control_surfaces&quot;. C++ signature :  bool control_surfaces_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'control_surfaces_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 21, 'tag': 'listener Method', 'name': 'Live.Application.Application.open_dialog_count_has_listener()', 'description': 'open_dialog_count_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;open_dialog_count&quot;. C++ signature :  bool open_dialog_count_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'open_dialog_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 22, 'tag': 'listener Method', 'name': 'Live.Application.Application.peak_process_usage_has_listener()', 'description': 'peak_process_usage_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;peak_process_usage&quot;. C++ signature :  bool peak_process_usage_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'peak_process_usage_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 24, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_average_process_usage_listener()', 'description': 'remove_average_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;average_process_usage&quot;. C++ signature :  void remove_average_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_average_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 25, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_control_surfaces_listener()', 'description': 'remove_control_surfaces_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;control_surfaces&quot;. C++ signature :  void remove_control_surfaces_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_control_surfaces_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 26, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_open_dialog_count_listener()', 'description': 'remove_open_dialog_count_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;open_dialog_count&quot;. C++ signature :  void remove_open_dialog_count_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_open_dialog_count_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 27, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_peak_process_usage_listener()', 'description': 'remove_peak_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;peak_process_usage&quot;. C++ signature :  void remove_peak_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_peak_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 28, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_unavailable_features_listener()', 'description': 'remove_unavailable_features_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;unavailable_features&quot;. C++ signature :  void remove_unavailable_features_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_unavailable_features_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 29, 'tag': 'listener Method', 'name': 'Live.Application.Application.unavailable_features_has_listener()', 'description': 'unavailable_features_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;unavailable_features&quot;. C++ signature :  bool unavailable_features_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'unavailable_features_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 59, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_average_process_usage_listener()', 'description': 'add_average_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;average_process_usage&quot; has changed. C++ signature :  void add_average_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_average_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 60, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_control_surfaces_listener()', 'description': 'add_control_surfaces_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;control_surfaces&quot; has changed. C++ signature :  void add_control_surfaces_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_control_surfaces_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 61, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_open_dialog_count_listener()', 'description': 'add_open_dialog_count_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;open_dialog_count&quot; has changed. C++ signature :  void add_open_dialog_count_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_open_dialog_count_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 62, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_peak_process_usage_listener()', 'description': 'add_peak_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;peak_process_usage&quot; has changed. C++ signature :  void add_peak_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_peak_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 63, 'tag': 'listener Method', 'name': 'Live.Application.Application.add_unavailable_features_listener()', 'description': 'add_unavailable_features_listener( (Application)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;unavailable_features&quot; has changed. C++ signature :  void add_unavailable_features_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'add_unavailable_features_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 65, 'tag': 'listener Method', 'name': 'Live.Application.Application.average_process_usage_has_listener()', 'description': 'average_process_usage_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;average_process_usage&quot;. C++ signature :  bool average_process_usage_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'average_process_usage_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 69, 'tag': 'listener Method', 'name': 'Live.Application.Application.control_surfaces_has_listener()', 'description': 'control_surfaces_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;control_surfaces&quot;. C++ signature :  bool control_surfaces_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'control_surfaces_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 79, 'tag': 'listener Method', 'name': 'Live.Application.Application.open_dialog_count_has_listener()', 'description': 'open_dialog_count_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;open_dialog_count&quot;. C++ signature :  bool open_dialog_count_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'open_dialog_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 81, 'tag': 'listener Method', 'name': 'Live.Application.Application.peak_process_usage_has_listener()', 'description': 'peak_process_usage_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;peak_process_usage&quot;. C++ signature :  bool peak_process_usage_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'peak_process_usage_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 83, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_average_process_usage_listener()', 'description': 'remove_average_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;average_process_usage&quot;. C++ signature :  void remove_average_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_average_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 84, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_control_surfaces_listener()', 'description': 'remove_control_surfaces_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;control_surfaces&quot;. C++ signature :  void remove_control_surfaces_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_control_surfaces_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 85, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_open_dialog_count_listener()', 'description': 'remove_open_dialog_count_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;open_dialog_count&quot;. C++ signature :  void remove_open_dialog_count_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_open_dialog_count_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 86, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_peak_process_usage_listener()', 'description': 'remove_peak_process_usage_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;peak_process_usage&quot;. C++ signature :  void remove_peak_process_usage_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_peak_process_usage_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 87, 'tag': 'listener Method', 'name': 'Live.Application.Application.remove_unavailable_features_listener()', 'description': 'remove_unavailable_features_listener( (Application)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;unavailable_features&quot;. C++ signature :  void remove_unavailable_features_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'remove_unavailable_features_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 89, 'tag': 'listener Method', 'name': 'Live.Application.Application.unavailable_features_has_listener()', 'description': 'unavailable_features_has_listener( (Application)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;unavailable_features&quot;. C++ signature :  bool unavailable_features_has_listener(TPyHandle&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'unavailable_features_has_listener()'], 'hierarchy': 3, 'ref_parent': 7, 'children': [], 'group': 'listener Method'},
{'ref': 92, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_browse_mode_listener()', 'description': 'add_browse_mode_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;browse_mode&quot; has changed. C++ signature :  void add_browse_mode_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_browse_mode_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 93, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_focused_document_view_listener()', 'description': 'add_focused_document_view_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;focused_document_view&quot; has changed. C++ signature :  void add_focused_document_view_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_focused_document_view_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 94, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_is_view_visible_listener()', 'description': 'add_is_view_visible_listener( (View)arg1, (object)arg2, (object)arg3) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_view_visible&quot; has changed. C++ signature :  void add_is_view_visible_listener(TPyViewData&lt;ASongApp&gt;,TString,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_is_view_visible_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 95, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_view_focus_changed_listener()', 'description': 'add_view_focus_changed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;view_focus_changed&quot; has changed. C++ signature :  void add_view_focus_changed_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_view_focus_changed_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 97, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.browse_mode_has_listener()', 'description': 'browse_mode_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;browse_mode&quot;. C++ signature :  bool browse_mode_has_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'browse_mode_has_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 99, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.focused_document_view_has_listener()', 'description': 'focused_document_view_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;focused_document_view&quot;. C++ signature :  bool focused_document_view_has_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'focused_document_view_has_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 102, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.is_view_visible_has_listener()', 'description': 'is_view_visible_has_listener( (View)arg1, (object)arg2, (object)arg3) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_view_visible&quot;. C++ signature :  bool is_view_visible_has_listener(TPyViewData&lt;ASongApp&gt;,TString,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'is_view_visible_has_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 103, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_browse_mode_listener()', 'description': 'remove_browse_mode_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;browse_mode&quot;. C++ signature :  void remove_browse_mode_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_browse_mode_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 104, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_focused_document_view_listener()', 'description': 'remove_focused_document_view_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;focused_document_view&quot;. C++ signature :  void remove_focused_document_view_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_focused_document_view_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 105, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_is_view_visible_listener()', 'description': 'remove_is_view_visible_listener( (View)arg1, (object)arg2, (object)arg3) -&gt; None : Remove a previously set listener function or method from property &quot;is_view_visible&quot;. C++ signature :  void remove_is_view_visible_listener(TPyViewData&lt;ASongApp&gt;,TString,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_is_view_visible_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 106, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_view_focus_changed_listener()', 'description': 'remove_view_focus_changed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;view_focus_changed&quot;. C++ signature :  void remove_view_focus_changed_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_view_focus_changed_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 110, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.view_focus_changed_has_listener()', 'description': 'view_focus_changed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;view_focus_changed&quot;. C++ signature :  bool view_focus_changed_has_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'view_focus_changed_has_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 141, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_browse_mode_listener()', 'description': 'add_browse_mode_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;browse_mode&quot; has changed. C++ signature :  void add_browse_mode_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_browse_mode_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 142, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_focused_document_view_listener()', 'description': 'add_focused_document_view_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;focused_document_view&quot; has changed. C++ signature :  void add_focused_document_view_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_focused_document_view_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 143, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_is_view_visible_listener()', 'description': 'add_is_view_visible_listener( (View)arg1, (object)arg2, (object)arg3) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_view_visible&quot; has changed. C++ signature :  void add_is_view_visible_listener(TPyViewData&lt;ASongApp&gt;,TString,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_is_view_visible_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 144, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.add_view_focus_changed_listener()', 'description': 'add_view_focus_changed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;view_focus_changed&quot; has changed. C++ signature :  void add_view_focus_changed_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'add_view_focus_changed_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 147, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.browse_mode_has_listener()', 'description': 'browse_mode_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;browse_mode&quot;. C++ signature :  bool browse_mode_has_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'browse_mode_has_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 151, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.focused_document_view_has_listener()', 'description': 'focused_document_view_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;focused_document_view&quot;. C++ signature :  bool focused_document_view_has_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'focused_document_view_has_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 154, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.is_view_visible_has_listener()', 'description': 'is_view_visible_has_listener( (View)arg1, (object)arg2, (object)arg3) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_view_visible&quot;. C++ signature :  bool is_view_visible_has_listener(TPyViewData&lt;ASongApp&gt;,TString,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'is_view_visible_has_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 155, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_browse_mode_listener()', 'description': 'remove_browse_mode_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;browse_mode&quot;. C++ signature :  void remove_browse_mode_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_browse_mode_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 156, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_focused_document_view_listener()', 'description': 'remove_focused_document_view_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;focused_document_view&quot;. C++ signature :  void remove_focused_document_view_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_focused_document_view_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 157, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_is_view_visible_listener()', 'description': 'remove_is_view_visible_listener( (View)arg1, (object)arg2, (object)arg3) -&gt; None : Remove a previously set listener function or method from property &quot;is_view_visible&quot;. C++ signature :  void remove_is_view_visible_listener(TPyViewData&lt;ASongApp&gt;,TString,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_is_view_visible_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 158, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.remove_view_focus_changed_listener()', 'description': 'remove_view_focus_changed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;view_focus_changed&quot;. C++ signature :  void remove_view_focus_changed_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'remove_view_focus_changed_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 162, 'tag': 'listener Method', 'name': 'Live.Application.Application.View.view_focus_changed_has_listener()', 'description': 'view_focus_changed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;view_focus_changed&quot;. C++ signature :  bool view_focus_changed_has_listener(TPyViewData&lt;ASongApp&gt;,boost::python::api::object)', 'path': ['Live', 'Application', 'Application', 'View', 'view_focus_changed_has_listener()'], 'hierarchy': 4, 'ref_parent': 30, 'children': [], 'group': 'listener Method'},
{'ref': 314, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.add_control_values_arrived_listener()', 'description': 'add_control_values_arrived_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;control_values_arrived&quot; has changed. C++ signature :  void add_control_values_arrived_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'add_control_values_arrived_listener()'], 'hierarchy': 3, 'ref_parent': 313, 'children': [], 'group': 'listener Method'},
{'ref': 315, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.add_midi_received_listener()', 'description': 'add_midi_received_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_received&quot; has changed. C++ signature :  void add_midi_received_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'add_midi_received_listener()'], 'hierarchy': 3, 'ref_parent': 313, 'children': [], 'group': 'listener Method'},
{'ref': 316, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.control_values_arrived_has_listener()', 'description': 'control_values_arrived_has_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;control_values_arrived&quot;. C++ signature :  bool control_values_arrived_has_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'control_values_arrived_has_listener()'], 'hierarchy': 3, 'ref_parent': 313, 'children': [], 'group': 'listener Method'},
{'ref': 321, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.midi_received_has_listener()', 'description': 'midi_received_has_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_received&quot;. C++ signature :  bool midi_received_has_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'midi_received_has_listener()'], 'hierarchy': 3, 'ref_parent': 313, 'children': [], 'group': 'listener Method'},
{'ref': 323, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.remove_control_values_arrived_listener()', 'description': 'remove_control_values_arrived_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;control_values_arrived&quot;. C++ signature :  void remove_control_values_arrived_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'remove_control_values_arrived_listener()'], 'hierarchy': 3, 'ref_parent': 313, 'children': [], 'group': 'listener Method'},
{'ref': 324, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.remove_midi_received_listener()', 'description': 'remove_midi_received_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_received&quot;. C++ signature :  void remove_midi_received_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'remove_midi_received_listener()'], 'hierarchy': 3, 'ref_parent': 313, 'children': [], 'group': 'listener Method'},
{'ref': 354, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.add_control_values_arrived_listener()', 'description': 'add_control_values_arrived_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;control_values_arrived&quot; has changed. C++ signature :  void add_control_values_arrived_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'add_control_values_arrived_listener()'], 'hierarchy': 3, 'ref_parent': 313, 'children': [], 'group': 'listener Method'},
{'ref': 355, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.add_midi_received_listener()', 'description': 'add_midi_received_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_received&quot; has changed. C++ signature :  void add_midi_received_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'add_midi_received_listener()'], 'hierarchy': 3, 'ref_parent': 313, 'children': [], 'group': 'listener Method'},
{'ref': 357, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.control_values_arrived_has_listener()', 'description': 'control_values_arrived_has_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;control_values_arrived&quot;. C++ signature :  bool control_values_arrived_has_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'control_values_arrived_has_listener()'], 'hierarchy': 3, 'ref_parent': 313, 'children': [], 'group': 'listener Method'},
{'ref': 362, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.midi_received_has_listener()', 'description': 'midi_received_has_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_received&quot;. C++ signature :  bool midi_received_has_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'midi_received_has_listener()'], 'hierarchy': 3, 'ref_parent': 313, 'children': [], 'group': 'listener Method'},
{'ref': 364, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.remove_control_values_arrived_listener()', 'description': 'remove_control_values_arrived_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;control_values_arrived&quot;. C++ signature :  void remove_control_values_arrived_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'remove_control_values_arrived_listener()'], 'hierarchy': 3, 'ref_parent': 313, 'children': [], 'group': 'listener Method'},
{'ref': 365, 'tag': 'listener Method', 'name': 'Live.Application.ControlSurfaceProxy.remove_midi_received_listener()', 'description': 'remove_midi_received_listener( (ControlSurfaceProxy)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_received&quot;. C++ signature :  void remove_midi_received_listener(APythonControlSurfaceProxy,boost::python::api::object)', 'path': ['Live', 'Application', 'ControlSurfaceProxy', 'remove_midi_received_listener()'], 'hierarchy': 3, 'ref_parent': 313, 'children': [], 'group': 'listener Method'},
{'ref': 786, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.add_filter_type_listener()', 'description': 'add_filter_type_listener( (Browser)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;filter_type&quot; has changed. C++ signature :  void add_filter_type_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'add_filter_type_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 787, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.add_full_refresh_listener()', 'description': 'add_full_refresh_listener( (Browser)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;full_refresh&quot; has changed. C++ signature :  void add_full_refresh_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'add_full_refresh_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 788, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.add_hotswap_target_listener()', 'description': 'add_hotswap_target_listener( (Browser)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;hotswap_target&quot; has changed. C++ signature :  void add_hotswap_target_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'add_hotswap_target_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 789, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.filter_type_has_listener()', 'description': 'filter_type_has_listener( (Browser)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;filter_type&quot;. C++ signature :  bool filter_type_has_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'filter_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 790, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.full_refresh_has_listener()', 'description': 'full_refresh_has_listener( (Browser)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;full_refresh&quot;. C++ signature :  bool full_refresh_has_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'full_refresh_has_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 791, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.hotswap_target_has_listener()', 'description': 'hotswap_target_has_listener( (Browser)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;hotswap_target&quot;. C++ signature :  bool hotswap_target_has_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'hotswap_target_has_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 795, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.remove_filter_type_listener()', 'description': 'remove_filter_type_listener( (Browser)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;filter_type&quot;. C++ signature :  void remove_filter_type_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'remove_filter_type_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 796, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.remove_full_refresh_listener()', 'description': 'remove_full_refresh_listener( (Browser)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;full_refresh&quot;. C++ signature :  void remove_full_refresh_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'remove_full_refresh_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 797, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.remove_hotswap_target_listener()', 'description': 'remove_hotswap_target_listener( (Browser)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;hotswap_target&quot;. C++ signature :  void remove_hotswap_target_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'remove_hotswap_target_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 827, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.add_filter_type_listener()', 'description': 'add_filter_type_listener( (Browser)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;filter_type&quot; has changed. C++ signature :  void add_filter_type_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'add_filter_type_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 828, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.add_full_refresh_listener()', 'description': 'add_full_refresh_listener( (Browser)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;full_refresh&quot; has changed. C++ signature :  void add_full_refresh_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'add_full_refresh_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 829, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.add_hotswap_target_listener()', 'description': 'add_hotswap_target_listener( (Browser)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;hotswap_target&quot; has changed. C++ signature :  void add_hotswap_target_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'add_hotswap_target_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 836, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.filter_type_has_listener()', 'description': 'filter_type_has_listener( (Browser)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;filter_type&quot;. C++ signature :  bool filter_type_has_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'filter_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 837, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.full_refresh_has_listener()', 'description': 'full_refresh_has_listener( (Browser)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;full_refresh&quot;. C++ signature :  bool full_refresh_has_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'full_refresh_has_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 839, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.hotswap_target_has_listener()', 'description': 'hotswap_target_has_listener( (Browser)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;hotswap_target&quot;. C++ signature :  bool hotswap_target_has_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'hotswap_target_has_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 849, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.remove_filter_type_listener()', 'description': 'remove_filter_type_listener( (Browser)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;filter_type&quot;. C++ signature :  void remove_filter_type_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'remove_filter_type_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 850, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.remove_full_refresh_listener()', 'description': 'remove_full_refresh_listener( (Browser)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;full_refresh&quot;. C++ signature :  void remove_full_refresh_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'remove_full_refresh_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 851, 'tag': 'listener Method', 'name': 'Live.Browser.Browser.remove_hotswap_target_listener()', 'description': 'remove_hotswap_target_listener( (Browser)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;hotswap_target&quot;. C++ signature :  void remove_hotswap_target_listener(TPyHandle&lt;ABrowserDelegate&gt;,boost::python::api::object)', 'path': ['Live', 'Browser', 'Browser', 'remove_hotswap_target_listener()'], 'hierarchy': 3, 'ref_parent': 785, 'children': [], 'group': 'listener Method'},
{'ref': 1130, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_color_index_listener()', 'description': 'add_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1131, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_color_listener()', 'description': 'add_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1132, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_devices_listener()', 'description': 'add_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;devices&quot; has changed. C++ signature :  void add_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_devices_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1133, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_is_auto_colored_listener()', 'description': 'add_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_auto_colored&quot; has changed. C++ signature :  void add_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1134, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_mute_listener()', 'description': 'add_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1135, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_muted_via_solo_listener()', 'description': 'add_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted_via_solo&quot; has changed. C++ signature :  void add_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1136, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_name_listener()', 'description': 'add_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1137, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_solo_listener()', 'description': 'add_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1138, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.color_has_listener()', 'description': 'color_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1139, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.color_index_has_listener()', 'description': 'color_index_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1141, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.devices_has_listener()', 'description': 'devices_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;devices&quot;. C++ signature :  bool devices_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'devices_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1142, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.is_auto_colored_has_listener()', 'description': 'is_auto_colored_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_auto_colored&quot;. C++ signature :  bool is_auto_colored_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'is_auto_colored_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1143, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.mute_has_listener()', 'description': 'mute_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1144, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.muted_via_solo_has_listener()', 'description': 'muted_via_solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted_via_solo&quot;. C++ signature :  bool muted_via_solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'muted_via_solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1145, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.name_has_listener()', 'description': 'name_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1146, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1147, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_color_listener()', 'description': 'remove_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1148, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_devices_listener()', 'description': 'remove_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;devices&quot;. C++ signature :  void remove_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_devices_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1149, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_is_auto_colored_listener()', 'description': 'remove_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_auto_colored&quot;. C++ signature :  void remove_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1150, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_mute_listener()', 'description': 'remove_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1151, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_muted_via_solo_listener()', 'description': 'remove_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted_via_solo&quot;. C++ signature :  void remove_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1152, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_name_listener()', 'description': 'remove_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1153, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_solo_listener()', 'description': 'remove_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1154, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.solo_has_listener()', 'description': 'solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1183, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_color_index_listener()', 'description': 'add_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1184, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_color_listener()', 'description': 'add_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1185, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_devices_listener()', 'description': 'add_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;devices&quot; has changed. C++ signature :  void add_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_devices_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1186, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_is_auto_colored_listener()', 'description': 'add_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_auto_colored&quot; has changed. C++ signature :  void add_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1187, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_mute_listener()', 'description': 'add_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1188, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_muted_via_solo_listener()', 'description': 'add_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted_via_solo&quot; has changed. C++ signature :  void add_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1189, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_name_listener()', 'description': 'add_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1190, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.add_solo_listener()', 'description': 'add_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1193, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.color_has_listener()', 'description': 'color_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1195, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.color_index_has_listener()', 'description': 'color_index_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1198, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.devices_has_listener()', 'description': 'devices_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;devices&quot;. C++ signature :  bool devices_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'devices_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1204, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.is_auto_colored_has_listener()', 'description': 'is_auto_colored_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_auto_colored&quot;. C++ signature :  bool is_auto_colored_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'is_auto_colored_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1207, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.mute_has_listener()', 'description': 'mute_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1209, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.muted_via_solo_has_listener()', 'description': 'muted_via_solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted_via_solo&quot;. C++ signature :  bool muted_via_solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'muted_via_solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1211, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.name_has_listener()', 'description': 'name_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1212, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1213, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_color_listener()', 'description': 'remove_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1214, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_devices_listener()', 'description': 'remove_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;devices&quot;. C++ signature :  void remove_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_devices_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1215, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_is_auto_colored_listener()', 'description': 'remove_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_auto_colored&quot;. C++ signature :  void remove_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1216, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_mute_listener()', 'description': 'remove_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1217, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_muted_via_solo_listener()', 'description': 'remove_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted_via_solo&quot;. C++ signature :  void remove_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1218, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_name_listener()', 'description': 'remove_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1219, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.remove_solo_listener()', 'description': 'remove_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1221, 'tag': 'listener Method', 'name': 'Live.Chain.Chain.solo_has_listener()', 'description': 'solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'Chain', 'Chain', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 1129, 'children': [], 'group': 'listener Method'},
{'ref': 1224, 'tag': 'listener Method', 'name': 'Live.ChainMixerDevice.ChainMixerDevice.add_sends_listener()', 'description': 'add_sends_listener( (ChainMixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sends&quot; has changed. C++ signature :  void add_sends_listener(TPyHandle&lt;ABranchMixerDevice&gt;,boost::python::api::object)', 'path': ['Live', 'ChainMixerDevice', 'ChainMixerDevice', 'add_sends_listener()'], 'hierarchy': 3, 'ref_parent': 1223, 'children': [], 'group': 'listener Method'},
{'ref': 1225, 'tag': 'listener Method', 'name': 'Live.ChainMixerDevice.ChainMixerDevice.remove_sends_listener()', 'description': 'remove_sends_listener( (ChainMixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sends&quot;. C++ signature :  void remove_sends_listener(TPyHandle&lt;ABranchMixerDevice&gt;,boost::python::api::object)', 'path': ['Live', 'ChainMixerDevice', 'ChainMixerDevice', 'remove_sends_listener()'], 'hierarchy': 3, 'ref_parent': 1223, 'children': [], 'group': 'listener Method'},
{'ref': 1226, 'tag': 'listener Method', 'name': 'Live.ChainMixerDevice.ChainMixerDevice.sends_has_listener()', 'description': 'sends_has_listener( (ChainMixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sends&quot;. C++ signature :  bool sends_has_listener(TPyHandle&lt;ABranchMixerDevice&gt;,boost::python::api::object)', 'path': ['Live', 'ChainMixerDevice', 'ChainMixerDevice', 'sends_has_listener()'], 'hierarchy': 3, 'ref_parent': 1223, 'children': [], 'group': 'listener Method'},
{'ref': 1255, 'tag': 'listener Method', 'name': 'Live.ChainMixerDevice.ChainMixerDevice.add_sends_listener()', 'description': 'add_sends_listener( (ChainMixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sends&quot; has changed. C++ signature :  void add_sends_listener(TPyHandle&lt;ABranchMixerDevice&gt;,boost::python::api::object)', 'path': ['Live', 'ChainMixerDevice', 'ChainMixerDevice', 'add_sends_listener()'], 'hierarchy': 3, 'ref_parent': 1223, 'children': [], 'group': 'listener Method'},
{'ref': 1259, 'tag': 'listener Method', 'name': 'Live.ChainMixerDevice.ChainMixerDevice.remove_sends_listener()', 'description': 'remove_sends_listener( (ChainMixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sends&quot;. C++ signature :  void remove_sends_listener(TPyHandle&lt;ABranchMixerDevice&gt;,boost::python::api::object)', 'path': ['Live', 'ChainMixerDevice', 'ChainMixerDevice', 'remove_sends_listener()'], 'hierarchy': 3, 'ref_parent': 1223, 'children': [], 'group': 'listener Method'},
{'ref': 1261, 'tag': 'listener Method', 'name': 'Live.ChainMixerDevice.ChainMixerDevice.sends_has_listener()', 'description': 'sends_has_listener( (ChainMixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sends&quot;. C++ signature :  bool sends_has_listener(TPyHandle&lt;ABranchMixerDevice&gt;,boost::python::api::object)', 'path': ['Live', 'ChainMixerDevice', 'ChainMixerDevice', 'sends_has_listener()'], 'hierarchy': 3, 'ref_parent': 1223, 'children': [], 'group': 'listener Method'},
{'ref': 1296, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_color_index_listener()', 'description': 'add_color_index_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1297, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_color_listener()', 'description': 'add_color_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1298, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_end_marker_listener()', 'description': 'add_end_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;end_marker&quot; has changed. C++ signature :  void add_end_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1299, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_end_time_listener()', 'description': 'add_end_time_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;end_time&quot; has changed. C++ signature :  void add_end_time_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_end_time_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1300, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_file_path_listener()', 'description': 'add_file_path_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;file_path&quot; has changed. C++ signature :  void add_file_path_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1301, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_gain_listener()', 'description': 'add_gain_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;gain&quot; has changed. C++ signature :  void add_gain_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_gain_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1302, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_groove_listener()', 'description': 'add_groove_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;groove&quot; has changed. C++ signature :  void add_groove_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_groove_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1303, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_has_envelopes_listener()', 'description': 'add_has_envelopes_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_envelopes&quot; has changed. C++ signature :  void add_has_envelopes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_has_envelopes_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1304, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_is_overdubbing_listener()', 'description': 'add_is_overdubbing_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_overdubbing&quot; has changed. C++ signature :  void add_is_overdubbing_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_is_overdubbing_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1305, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_is_recording_listener()', 'description': 'add_is_recording_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_recording&quot; has changed. C++ signature :  void add_is_recording_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_is_recording_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1306, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_launch_mode_listener()', 'description': 'add_launch_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;launch_mode&quot; has changed. C++ signature :  void add_launch_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_launch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1307, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_launch_quantization_listener()', 'description': 'add_launch_quantization_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;launch_quantization&quot; has changed. C++ signature :  void add_launch_quantization_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_launch_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1308, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_legato_listener()', 'description': 'add_legato_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;legato&quot; has changed. C++ signature :  void add_legato_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_legato_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1309, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_loop_end_listener()', 'description': 'add_loop_end_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_end&quot; has changed. C++ signature :  void add_loop_end_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_loop_end_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1310, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_loop_jump_listener()', 'description': 'add_loop_jump_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_jump&quot; has changed. C++ signature :  void add_loop_jump_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_loop_jump_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1311, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_loop_start_listener()', 'description': 'add_loop_start_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_start&quot; has changed. C++ signature :  void add_loop_start_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1312, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_looping_listener()', 'description': 'add_looping_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;looping&quot; has changed. C++ signature :  void add_looping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_looping_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1313, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_muted_listener()', 'description': 'add_muted_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted&quot; has changed. C++ signature :  void add_muted_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_muted_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1314, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_name_listener()', 'description': 'add_name_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1316, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_notes_listener()', 'description': 'add_notes_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;notes&quot; has changed. C++ signature :  void add_notes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_notes_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1317, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_pitch_coarse_listener()', 'description': 'add_pitch_coarse_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_coarse&quot; has changed. C++ signature :  void add_pitch_coarse_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_pitch_coarse_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1318, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_pitch_fine_listener()', 'description': 'add_pitch_fine_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_fine&quot; has changed. C++ signature :  void add_pitch_fine_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_pitch_fine_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1319, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_playing_position_listener()', 'description': 'add_playing_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_position&quot; has changed. C++ signature :  void add_playing_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1320, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_playing_status_listener()', 'description': 'add_playing_status_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_status&quot; has changed. C++ signature :  void add_playing_status_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1321, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_position_listener()', 'description': 'add_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;position&quot; has changed. C++ signature :  void add_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_position_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1322, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_ram_mode_listener()', 'description': 'add_ram_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ram_mode&quot; has changed. C++ signature :  void add_ram_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_ram_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1323, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_signature_denominator_listener()', 'description': 'add_signature_denominator_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_denominator&quot; has changed. C++ signature :  void add_signature_denominator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1324, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_signature_numerator_listener()', 'description': 'add_signature_numerator_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_numerator&quot; has changed. C++ signature :  void add_signature_numerator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1325, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_start_marker_listener()', 'description': 'add_start_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;start_marker&quot; has changed. C++ signature :  void add_start_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1326, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_velocity_amount_listener()', 'description': 'add_velocity_amount_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;velocity_amount&quot; has changed. C++ signature :  void add_velocity_amount_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1328, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_warp_markers_listener()', 'description': 'add_warp_markers_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_markers&quot; has changed. C++ signature :  void add_warp_markers_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1329, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_warp_mode_listener()', 'description': 'add_warp_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_mode&quot; has changed. C++ signature :  void add_warp_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1330, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_warping_listener()', 'description': 'add_warping_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warping&quot; has changed. C++ signature :  void add_warping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_warping_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1336, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.color_has_listener()', 'description': 'color_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1337, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.color_index_has_listener()', 'description': 'color_index_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1344, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.end_marker_has_listener()', 'description': 'end_marker_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;end_marker&quot;. C++ signature :  bool end_marker_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'end_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1345, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.end_time_has_listener()', 'description': 'end_time_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;end_time&quot;. C++ signature :  bool end_time_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'end_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1346, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.file_path_has_listener()', 'description': 'file_path_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;file_path&quot;. C++ signature :  bool file_path_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'file_path_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1348, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.gain_has_listener()', 'description': 'gain_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;gain&quot;. C++ signature :  bool gain_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'gain_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1355, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.groove_has_listener()', 'description': 'groove_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;groove&quot;. C++ signature :  bool groove_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'groove_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1356, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.has_envelopes_has_listener()', 'description': 'has_envelopes_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_envelopes&quot;. C++ signature :  bool has_envelopes_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'has_envelopes_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1357, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.is_overdubbing_has_listener()', 'description': 'is_overdubbing_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_overdubbing&quot;. C++ signature :  bool is_overdubbing_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'is_overdubbing_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1358, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.is_recording_has_listener()', 'description': 'is_recording_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_recording&quot;. C++ signature :  bool is_recording_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'is_recording_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1359, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.launch_mode_has_listener()', 'description': 'launch_mode_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;launch_mode&quot;. C++ signature :  bool launch_mode_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'launch_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1360, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.launch_quantization_has_listener()', 'description': 'launch_quantization_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;launch_quantization&quot;. C++ signature :  bool launch_quantization_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'launch_quantization_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1361, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.legato_has_listener()', 'description': 'legato_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;legato&quot;. C++ signature :  bool legato_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'legato_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1362, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.loop_end_has_listener()', 'description': 'loop_end_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_end&quot;. C++ signature :  bool loop_end_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'loop_end_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1363, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.loop_jump_has_listener()', 'description': 'loop_jump_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_jump&quot;. C++ signature :  bool loop_jump_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'loop_jump_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1364, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.loop_start_has_listener()', 'description': 'loop_start_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_start&quot;. C++ signature :  bool loop_start_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'loop_start_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1365, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.looping_has_listener()', 'description': 'looping_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;looping&quot;. C++ signature :  bool looping_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'looping_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1368, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.muted_has_listener()', 'description': 'muted_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted&quot;. C++ signature :  bool muted_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'muted_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1369, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.name_has_listener()', 'description': 'name_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1370, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.notes_has_listener()', 'description': 'notes_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;notes&quot;. C++ signature :  bool notes_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'notes_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1371, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.pitch_coarse_has_listener()', 'description': 'pitch_coarse_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_coarse&quot;. C++ signature :  bool pitch_coarse_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'pitch_coarse_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1372, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.pitch_fine_has_listener()', 'description': 'pitch_fine_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_fine&quot;. C++ signature :  bool pitch_fine_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'pitch_fine_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1373, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.playing_position_has_listener()', 'description': 'playing_position_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_position&quot;. C++ signature :  bool playing_position_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'playing_position_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1374, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.playing_status_has_listener()', 'description': 'playing_status_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_status&quot;. C++ signature :  bool playing_status_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'playing_status_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1375, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.position_has_listener()', 'description': 'position_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;position&quot;. C++ signature :  bool position_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'position_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1378, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.ram_mode_has_listener()', 'description': 'ram_mode_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ram_mode&quot;. C++ signature :  bool ram_mode_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'ram_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1379, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1380, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_color_listener()', 'description': 'remove_color_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1381, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_end_marker_listener()', 'description': 'remove_end_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;end_marker&quot;. C++ signature :  void remove_end_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1382, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_end_time_listener()', 'description': 'remove_end_time_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;end_time&quot;. C++ signature :  void remove_end_time_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_end_time_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1383, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_file_path_listener()', 'description': 'remove_file_path_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;file_path&quot;. C++ signature :  void remove_file_path_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1384, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_gain_listener()', 'description': 'remove_gain_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;gain&quot;. C++ signature :  void remove_gain_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_gain_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1385, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_groove_listener()', 'description': 'remove_groove_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;groove&quot;. C++ signature :  void remove_groove_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_groove_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1386, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_has_envelopes_listener()', 'description': 'remove_has_envelopes_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_envelopes&quot;. C++ signature :  void remove_has_envelopes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_has_envelopes_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1387, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_is_overdubbing_listener()', 'description': 'remove_is_overdubbing_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_overdubbing&quot;. C++ signature :  void remove_is_overdubbing_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_is_overdubbing_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1388, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_is_recording_listener()', 'description': 'remove_is_recording_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_recording&quot;. C++ signature :  void remove_is_recording_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_is_recording_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1389, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_launch_mode_listener()', 'description': 'remove_launch_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;launch_mode&quot;. C++ signature :  void remove_launch_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_launch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1390, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_launch_quantization_listener()', 'description': 'remove_launch_quantization_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;launch_quantization&quot;. C++ signature :  void remove_launch_quantization_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_launch_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1391, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_legato_listener()', 'description': 'remove_legato_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;legato&quot;. C++ signature :  void remove_legato_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_legato_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1392, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_loop_end_listener()', 'description': 'remove_loop_end_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_end&quot;. C++ signature :  void remove_loop_end_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_loop_end_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1393, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_loop_jump_listener()', 'description': 'remove_loop_jump_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_jump&quot;. C++ signature :  void remove_loop_jump_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_loop_jump_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1394, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_loop_start_listener()', 'description': 'remove_loop_start_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_start&quot;. C++ signature :  void remove_loop_start_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1395, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_looping_listener()', 'description': 'remove_looping_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;looping&quot;. C++ signature :  void remove_looping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_looping_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1396, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_muted_listener()', 'description': 'remove_muted_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted&quot;. C++ signature :  void remove_muted_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_muted_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1397, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_name_listener()', 'description': 'remove_name_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1401, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_notes_listener()', 'description': 'remove_notes_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;notes&quot;. C++ signature :  void remove_notes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_notes_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1402, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_pitch_coarse_listener()', 'description': 'remove_pitch_coarse_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_coarse&quot;. C++ signature :  void remove_pitch_coarse_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_pitch_coarse_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1403, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_pitch_fine_listener()', 'description': 'remove_pitch_fine_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_fine&quot;. C++ signature :  void remove_pitch_fine_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_pitch_fine_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1404, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_playing_position_listener()', 'description': 'remove_playing_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_position&quot;. C++ signature :  void remove_playing_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1405, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_playing_status_listener()', 'description': 'remove_playing_status_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_status&quot;. C++ signature :  void remove_playing_status_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1406, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_position_listener()', 'description': 'remove_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;position&quot;. C++ signature :  void remove_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_position_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1407, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_ram_mode_listener()', 'description': 'remove_ram_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ram_mode&quot;. C++ signature :  void remove_ram_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_ram_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1408, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_signature_denominator_listener()', 'description': 'remove_signature_denominator_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_denominator&quot;. C++ signature :  void remove_signature_denominator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1409, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_signature_numerator_listener()', 'description': 'remove_signature_numerator_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_numerator&quot;. C++ signature :  void remove_signature_numerator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1410, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_start_marker_listener()', 'description': 'remove_start_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;start_marker&quot;. C++ signature :  void remove_start_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1411, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_velocity_amount_listener()', 'description': 'remove_velocity_amount_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;velocity_amount&quot;. C++ signature :  void remove_velocity_amount_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1413, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_warp_markers_listener()', 'description': 'remove_warp_markers_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_markers&quot;. C++ signature :  void remove_warp_markers_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1414, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_warp_mode_listener()', 'description': 'remove_warp_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_mode&quot;. C++ signature :  void remove_warp_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1415, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_warping_listener()', 'description': 'remove_warping_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warping&quot;. C++ signature :  void remove_warping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_warping_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1424, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.signature_denominator_has_listener()', 'description': 'signature_denominator_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_denominator&quot;. C++ signature :  bool signature_denominator_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'signature_denominator_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1425, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.signature_numerator_has_listener()', 'description': 'signature_numerator_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_numerator&quot;. C++ signature :  bool signature_numerator_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'signature_numerator_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1426, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.start_marker_has_listener()', 'description': 'start_marker_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;start_marker&quot;. C++ signature :  bool start_marker_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'start_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1429, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.velocity_amount_has_listener()', 'description': 'velocity_amount_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;velocity_amount&quot;. C++ signature :  bool velocity_amount_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'velocity_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1430, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.warp_markers_has_listener()', 'description': 'warp_markers_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_markers&quot;. C++ signature :  bool warp_markers_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'warp_markers_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1431, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.warp_mode_has_listener()', 'description': 'warp_mode_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_mode&quot;. C++ signature :  bool warp_mode_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'warp_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1432, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.warping_has_listener()', 'description': 'warping_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warping&quot;. C++ signature :  bool warping_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'warping_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1462, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_color_index_listener()', 'description': 'add_color_index_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1463, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_color_listener()', 'description': 'add_color_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1464, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_end_marker_listener()', 'description': 'add_end_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;end_marker&quot; has changed. C++ signature :  void add_end_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1465, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_end_time_listener()', 'description': 'add_end_time_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;end_time&quot; has changed. C++ signature :  void add_end_time_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_end_time_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1466, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_file_path_listener()', 'description': 'add_file_path_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;file_path&quot; has changed. C++ signature :  void add_file_path_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1467, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_gain_listener()', 'description': 'add_gain_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;gain&quot; has changed. C++ signature :  void add_gain_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_gain_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1468, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_groove_listener()', 'description': 'add_groove_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;groove&quot; has changed. C++ signature :  void add_groove_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_groove_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1469, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_has_envelopes_listener()', 'description': 'add_has_envelopes_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_envelopes&quot; has changed. C++ signature :  void add_has_envelopes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_has_envelopes_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1470, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_is_overdubbing_listener()', 'description': 'add_is_overdubbing_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_overdubbing&quot; has changed. C++ signature :  void add_is_overdubbing_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_is_overdubbing_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1471, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_is_recording_listener()', 'description': 'add_is_recording_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_recording&quot; has changed. C++ signature :  void add_is_recording_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_is_recording_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1472, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_launch_mode_listener()', 'description': 'add_launch_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;launch_mode&quot; has changed. C++ signature :  void add_launch_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_launch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1473, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_launch_quantization_listener()', 'description': 'add_launch_quantization_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;launch_quantization&quot; has changed. C++ signature :  void add_launch_quantization_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_launch_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1474, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_legato_listener()', 'description': 'add_legato_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;legato&quot; has changed. C++ signature :  void add_legato_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_legato_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1475, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_loop_end_listener()', 'description': 'add_loop_end_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_end&quot; has changed. C++ signature :  void add_loop_end_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_loop_end_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1476, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_loop_jump_listener()', 'description': 'add_loop_jump_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_jump&quot; has changed. C++ signature :  void add_loop_jump_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_loop_jump_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1477, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_loop_start_listener()', 'description': 'add_loop_start_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_start&quot; has changed. C++ signature :  void add_loop_start_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1478, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_looping_listener()', 'description': 'add_looping_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;looping&quot; has changed. C++ signature :  void add_looping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_looping_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1479, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_muted_listener()', 'description': 'add_muted_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted&quot; has changed. C++ signature :  void add_muted_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_muted_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1480, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_name_listener()', 'description': 'add_name_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1482, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_notes_listener()', 'description': 'add_notes_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;notes&quot; has changed. C++ signature :  void add_notes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_notes_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1483, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_pitch_coarse_listener()', 'description': 'add_pitch_coarse_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_coarse&quot; has changed. C++ signature :  void add_pitch_coarse_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_pitch_coarse_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1484, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_pitch_fine_listener()', 'description': 'add_pitch_fine_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_fine&quot; has changed. C++ signature :  void add_pitch_fine_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_pitch_fine_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1485, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_playing_position_listener()', 'description': 'add_playing_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_position&quot; has changed. C++ signature :  void add_playing_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1486, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_playing_status_listener()', 'description': 'add_playing_status_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_status&quot; has changed. C++ signature :  void add_playing_status_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1487, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_position_listener()', 'description': 'add_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;position&quot; has changed. C++ signature :  void add_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_position_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1488, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_ram_mode_listener()', 'description': 'add_ram_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ram_mode&quot; has changed. C++ signature :  void add_ram_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_ram_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1489, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_signature_denominator_listener()', 'description': 'add_signature_denominator_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_denominator&quot; has changed. C++ signature :  void add_signature_denominator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1490, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_signature_numerator_listener()', 'description': 'add_signature_numerator_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_numerator&quot; has changed. C++ signature :  void add_signature_numerator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1491, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_start_marker_listener()', 'description': 'add_start_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;start_marker&quot; has changed. C++ signature :  void add_start_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1492, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_velocity_amount_listener()', 'description': 'add_velocity_amount_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;velocity_amount&quot; has changed. C++ signature :  void add_velocity_amount_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1494, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_warp_markers_listener()', 'description': 'add_warp_markers_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_markers&quot; has changed. C++ signature :  void add_warp_markers_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1495, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_warp_mode_listener()', 'description': 'add_warp_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_mode&quot; has changed. C++ signature :  void add_warp_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1496, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.add_warping_listener()', 'description': 'add_warping_listener( (Clip)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warping&quot; has changed. C++ signature :  void add_warping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'add_warping_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1505, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.color_has_listener()', 'description': 'color_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1507, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.color_index_has_listener()', 'description': 'color_index_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1515, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.end_marker_has_listener()', 'description': 'end_marker_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;end_marker&quot;. C++ signature :  bool end_marker_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'end_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1517, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.end_time_has_listener()', 'description': 'end_time_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;end_time&quot;. C++ signature :  bool end_time_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'end_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1519, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.file_path_has_listener()', 'description': 'file_path_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;file_path&quot;. C++ signature :  bool file_path_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'file_path_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1523, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.gain_has_listener()', 'description': 'gain_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;gain&quot;. C++ signature :  bool gain_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'gain_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1531, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.groove_has_listener()', 'description': 'groove_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;groove&quot;. C++ signature :  bool groove_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'groove_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1533, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.has_envelopes_has_listener()', 'description': 'has_envelopes_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_envelopes&quot;. C++ signature :  bool has_envelopes_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'has_envelopes_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1539, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.is_overdubbing_has_listener()', 'description': 'is_overdubbing_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_overdubbing&quot;. C++ signature :  bool is_overdubbing_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'is_overdubbing_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1542, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.is_recording_has_listener()', 'description': 'is_recording_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_recording&quot;. C++ signature :  bool is_recording_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'is_recording_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1545, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.launch_mode_has_listener()', 'description': 'launch_mode_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;launch_mode&quot;. C++ signature :  bool launch_mode_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'launch_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1547, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.launch_quantization_has_listener()', 'description': 'launch_quantization_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;launch_quantization&quot;. C++ signature :  bool launch_quantization_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'launch_quantization_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1549, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.legato_has_listener()', 'description': 'legato_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;legato&quot;. C++ signature :  bool legato_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'legato_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1552, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.loop_end_has_listener()', 'description': 'loop_end_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_end&quot;. C++ signature :  bool loop_end_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'loop_end_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1553, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.loop_jump_has_listener()', 'description': 'loop_jump_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_jump&quot;. C++ signature :  bool loop_jump_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'loop_jump_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1555, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.loop_start_has_listener()', 'description': 'loop_start_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_start&quot;. C++ signature :  bool loop_start_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'loop_start_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1557, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.looping_has_listener()', 'description': 'looping_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;looping&quot;. C++ signature :  bool looping_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'looping_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1561, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.muted_has_listener()', 'description': 'muted_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted&quot;. C++ signature :  bool muted_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'muted_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1563, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.name_has_listener()', 'description': 'name_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1564, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.notes_has_listener()', 'description': 'notes_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;notes&quot;. C++ signature :  bool notes_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'notes_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1566, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.pitch_coarse_has_listener()', 'description': 'pitch_coarse_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_coarse&quot;. C++ signature :  bool pitch_coarse_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'pitch_coarse_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1568, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.pitch_fine_has_listener()', 'description': 'pitch_fine_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_fine&quot;. C++ signature :  bool pitch_fine_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'pitch_fine_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1570, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.playing_position_has_listener()', 'description': 'playing_position_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_position&quot;. C++ signature :  bool playing_position_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'playing_position_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1571, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.playing_status_has_listener()', 'description': 'playing_status_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_status&quot;. C++ signature :  bool playing_status_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'playing_status_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1573, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.position_has_listener()', 'description': 'position_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;position&quot;. C++ signature :  bool position_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'position_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1577, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.ram_mode_has_listener()', 'description': 'ram_mode_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ram_mode&quot;. C++ signature :  bool ram_mode_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'ram_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1578, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1579, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_color_listener()', 'description': 'remove_color_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1580, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_end_marker_listener()', 'description': 'remove_end_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;end_marker&quot;. C++ signature :  void remove_end_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1581, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_end_time_listener()', 'description': 'remove_end_time_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;end_time&quot;. C++ signature :  void remove_end_time_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_end_time_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1582, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_file_path_listener()', 'description': 'remove_file_path_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;file_path&quot;. C++ signature :  void remove_file_path_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1583, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_gain_listener()', 'description': 'remove_gain_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;gain&quot;. C++ signature :  void remove_gain_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_gain_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1584, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_groove_listener()', 'description': 'remove_groove_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;groove&quot;. C++ signature :  void remove_groove_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_groove_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1585, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_has_envelopes_listener()', 'description': 'remove_has_envelopes_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_envelopes&quot;. C++ signature :  void remove_has_envelopes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_has_envelopes_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1586, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_is_overdubbing_listener()', 'description': 'remove_is_overdubbing_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_overdubbing&quot;. C++ signature :  void remove_is_overdubbing_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_is_overdubbing_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1587, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_is_recording_listener()', 'description': 'remove_is_recording_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_recording&quot;. C++ signature :  void remove_is_recording_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_is_recording_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1588, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_launch_mode_listener()', 'description': 'remove_launch_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;launch_mode&quot;. C++ signature :  void remove_launch_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_launch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1589, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_launch_quantization_listener()', 'description': 'remove_launch_quantization_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;launch_quantization&quot;. C++ signature :  void remove_launch_quantization_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_launch_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1590, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_legato_listener()', 'description': 'remove_legato_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;legato&quot;. C++ signature :  void remove_legato_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_legato_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1591, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_loop_end_listener()', 'description': 'remove_loop_end_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_end&quot;. C++ signature :  void remove_loop_end_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_loop_end_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1592, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_loop_jump_listener()', 'description': 'remove_loop_jump_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_jump&quot;. C++ signature :  void remove_loop_jump_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_loop_jump_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1593, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_loop_start_listener()', 'description': 'remove_loop_start_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_start&quot;. C++ signature :  void remove_loop_start_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1594, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_looping_listener()', 'description': 'remove_looping_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;looping&quot;. C++ signature :  void remove_looping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_looping_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1595, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_muted_listener()', 'description': 'remove_muted_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted&quot;. C++ signature :  void remove_muted_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_muted_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1596, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_name_listener()', 'description': 'remove_name_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1600, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_notes_listener()', 'description': 'remove_notes_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;notes&quot;. C++ signature :  void remove_notes_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_notes_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1601, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_pitch_coarse_listener()', 'description': 'remove_pitch_coarse_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_coarse&quot;. C++ signature :  void remove_pitch_coarse_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_pitch_coarse_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1602, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_pitch_fine_listener()', 'description': 'remove_pitch_fine_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_fine&quot;. C++ signature :  void remove_pitch_fine_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_pitch_fine_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1603, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_playing_position_listener()', 'description': 'remove_playing_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_position&quot;. C++ signature :  void remove_playing_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1604, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_playing_status_listener()', 'description': 'remove_playing_status_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_status&quot;. C++ signature :  void remove_playing_status_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1605, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_position_listener()', 'description': 'remove_position_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;position&quot;. C++ signature :  void remove_position_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_position_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1606, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_ram_mode_listener()', 'description': 'remove_ram_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ram_mode&quot;. C++ signature :  void remove_ram_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_ram_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1607, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_signature_denominator_listener()', 'description': 'remove_signature_denominator_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_denominator&quot;. C++ signature :  void remove_signature_denominator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1608, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_signature_numerator_listener()', 'description': 'remove_signature_numerator_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_numerator&quot;. C++ signature :  void remove_signature_numerator_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1609, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_start_marker_listener()', 'description': 'remove_start_marker_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;start_marker&quot;. C++ signature :  void remove_start_marker_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1610, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_velocity_amount_listener()', 'description': 'remove_velocity_amount_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;velocity_amount&quot;. C++ signature :  void remove_velocity_amount_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1612, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_warp_markers_listener()', 'description': 'remove_warp_markers_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_markers&quot;. C++ signature :  void remove_warp_markers_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1613, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_warp_mode_listener()', 'description': 'remove_warp_mode_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_mode&quot;. C++ signature :  void remove_warp_mode_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1614, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.remove_warping_listener()', 'description': 'remove_warping_listener( (Clip)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warping&quot;. C++ signature :  void remove_warping_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'remove_warping_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1626, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.signature_denominator_has_listener()', 'description': 'signature_denominator_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_denominator&quot;. C++ signature :  bool signature_denominator_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'signature_denominator_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1628, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.signature_numerator_has_listener()', 'description': 'signature_numerator_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_numerator&quot;. C++ signature :  bool signature_numerator_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'signature_numerator_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1630, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.start_marker_has_listener()', 'description': 'start_marker_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;start_marker&quot;. C++ signature :  bool start_marker_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'start_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1635, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.velocity_amount_has_listener()', 'description': 'velocity_amount_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;velocity_amount&quot;. C++ signature :  bool velocity_amount_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'velocity_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1638, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.warp_markers_has_listener()', 'description': 'warp_markers_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_markers&quot;. C++ signature :  bool warp_markers_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'warp_markers_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1640, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.warp_mode_has_listener()', 'description': 'warp_mode_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_mode&quot;. C++ signature :  bool warp_mode_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'warp_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 1642, 'tag': 'listener Method', 'name': 'Live.Clip.Clip.warping_has_listener()', 'description': 'warping_has_listener( (Clip)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warping&quot;. C++ signature :  bool warping_has_listener(TPyHandle&lt;AClip&gt;,boost::python::api::object)', 'path': ['Live', 'Clip', 'Clip', 'warping_has_listener()'], 'hierarchy': 3, 'ref_parent': 1295, 'children': [], 'group': 'listener Method'},
{'ref': 2201, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_color_index_listener()', 'description': 'add_color_index_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2202, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_color_listener()', 'description': 'add_color_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2203, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_controls_other_clips_listener()', 'description': 'add_controls_other_clips_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;controls_other_clips&quot; has changed. C++ signature :  void add_controls_other_clips_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_controls_other_clips_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2204, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_has_clip_listener()', 'description': 'add_has_clip_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_clip&quot; has changed. C++ signature :  void add_has_clip_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_has_clip_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2205, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_has_stop_button_listener()', 'description': 'add_has_stop_button_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_stop_button&quot; has changed. C++ signature :  void add_has_stop_button_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_has_stop_button_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2206, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_is_triggered_listener()', 'description': 'add_is_triggered_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_triggered&quot; has changed. C++ signature :  void add_is_triggered_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2207, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_playing_status_listener()', 'description': 'add_playing_status_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_status&quot; has changed. C++ signature :  void add_playing_status_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2208, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.color_has_listener()', 'description': 'color_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2209, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.color_index_has_listener()', 'description': 'color_index_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2210, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.controls_other_clips_has_listener()', 'description': 'controls_other_clips_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;controls_other_clips&quot;. C++ signature :  bool controls_other_clips_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'controls_other_clips_has_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2215, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.has_clip_has_listener()', 'description': 'has_clip_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_clip&quot;. C++ signature :  bool has_clip_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'has_clip_has_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2216, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.has_stop_button_has_listener()', 'description': 'has_stop_button_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_stop_button&quot;. C++ signature :  bool has_stop_button_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'has_stop_button_has_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2217, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.is_triggered_has_listener()', 'description': 'is_triggered_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_triggered&quot;. C++ signature :  bool is_triggered_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'is_triggered_has_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2218, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.playing_status_has_listener()', 'description': 'playing_status_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_status&quot;. C++ signature :  bool playing_status_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'playing_status_has_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2219, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_color_index_listener()', 'description': 'remove_color_index_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2220, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_color_listener()', 'description': 'remove_color_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2221, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_controls_other_clips_listener()', 'description': 'remove_controls_other_clips_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;controls_other_clips&quot;. C++ signature :  void remove_controls_other_clips_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_controls_other_clips_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2222, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_has_clip_listener()', 'description': 'remove_has_clip_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_clip&quot;. C++ signature :  void remove_has_clip_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_has_clip_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2223, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_has_stop_button_listener()', 'description': 'remove_has_stop_button_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_stop_button&quot;. C++ signature :  void remove_has_stop_button_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_has_stop_button_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2224, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_is_triggered_listener()', 'description': 'remove_is_triggered_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_triggered&quot;. C++ signature :  void remove_is_triggered_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2225, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_playing_status_listener()', 'description': 'remove_playing_status_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_status&quot;. C++ signature :  void remove_playing_status_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2256, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_color_index_listener()', 'description': 'add_color_index_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2257, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_color_listener()', 'description': 'add_color_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2258, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_controls_other_clips_listener()', 'description': 'add_controls_other_clips_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;controls_other_clips&quot; has changed. C++ signature :  void add_controls_other_clips_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_controls_other_clips_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2259, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_has_clip_listener()', 'description': 'add_has_clip_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_clip&quot; has changed. C++ signature :  void add_has_clip_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_has_clip_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2260, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_has_stop_button_listener()', 'description': 'add_has_stop_button_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_stop_button&quot; has changed. C++ signature :  void add_has_stop_button_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_has_stop_button_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2261, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_is_triggered_listener()', 'description': 'add_is_triggered_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_triggered&quot; has changed. C++ signature :  void add_is_triggered_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2262, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.add_playing_status_listener()', 'description': 'add_playing_status_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_status&quot; has changed. C++ signature :  void add_playing_status_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'add_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2266, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.color_has_listener()', 'description': 'color_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2268, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.color_index_has_listener()', 'description': 'color_index_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2270, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.controls_other_clips_has_listener()', 'description': 'controls_other_clips_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;controls_other_clips&quot;. C++ signature :  bool controls_other_clips_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'controls_other_clips_has_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2276, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.has_clip_has_listener()', 'description': 'has_clip_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_clip&quot;. C++ signature :  bool has_clip_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'has_clip_has_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2278, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.has_stop_button_has_listener()', 'description': 'has_stop_button_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_stop_button&quot;. C++ signature :  bool has_stop_button_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'has_stop_button_has_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2283, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.is_triggered_has_listener()', 'description': 'is_triggered_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_triggered&quot;. C++ signature :  bool is_triggered_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'is_triggered_has_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2285, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.playing_status_has_listener()', 'description': 'playing_status_has_listener( (ClipSlot)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_status&quot;. C++ signature :  bool playing_status_has_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'playing_status_has_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2286, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_color_index_listener()', 'description': 'remove_color_index_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2287, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_color_listener()', 'description': 'remove_color_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2288, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_controls_other_clips_listener()', 'description': 'remove_controls_other_clips_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;controls_other_clips&quot;. C++ signature :  void remove_controls_other_clips_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_controls_other_clips_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2289, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_has_clip_listener()', 'description': 'remove_has_clip_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_clip&quot;. C++ signature :  void remove_has_clip_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_has_clip_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2290, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_has_stop_button_listener()', 'description': 'remove_has_stop_button_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_stop_button&quot;. C++ signature :  void remove_has_stop_button_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_has_stop_button_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2291, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_is_triggered_listener()', 'description': 'remove_is_triggered_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_triggered&quot;. C++ signature :  void remove_is_triggered_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2292, 'tag': 'listener Method', 'name': 'Live.ClipSlot.ClipSlot.remove_playing_status_listener()', 'description': 'remove_playing_status_listener( (ClipSlot)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_status&quot;. C++ signature :  void remove_playing_status_listener(TPyHandle&lt;AGroupAndClipSlotBase&gt;,boost::python::api::object)', 'path': ['Live', 'ClipSlot', 'ClipSlot', 'remove_playing_status_listener()'], 'hierarchy': 3, 'ref_parent': 2200, 'children': [], 'group': 'listener Method'},
{'ref': 2378, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_available_input_routing_channels_listener()', 'description': 'add_available_input_routing_channels_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_channels&quot; has changed. C++ signature :  void add_available_input_routing_channels_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2379, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_available_input_routing_types_listener()', 'description': 'add_available_input_routing_types_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_types&quot; has changed. C++ signature :  void add_available_input_routing_types_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2380, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_input_routing_channel_listener()', 'description': 'add_input_routing_channel_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_channel&quot; has changed. C++ signature :  void add_input_routing_channel_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2381, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_input_routing_type_listener()', 'description': 'add_input_routing_type_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_type&quot; has changed. C++ signature :  void add_input_routing_type_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2382, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2383, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2384, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2385, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2386, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2387, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.available_input_routing_channels_has_listener()', 'description': 'available_input_routing_channels_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_channels&quot;. C++ signature :  bool available_input_routing_channels_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'available_input_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2388, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.available_input_routing_types_has_listener()', 'description': 'available_input_routing_types_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_types&quot;. C++ signature :  bool available_input_routing_types_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'available_input_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2389, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.input_routing_channel_has_listener()', 'description': 'input_routing_channel_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_channel&quot;. C++ signature :  bool input_routing_channel_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'input_routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2390, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.input_routing_type_has_listener()', 'description': 'input_routing_type_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_type&quot;. C++ signature :  bool input_routing_type_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'input_routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2391, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2392, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2393, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2394, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2395, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2396, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_available_input_routing_channels_listener()', 'description': 'remove_available_input_routing_channels_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_channels&quot;. C++ signature :  void remove_available_input_routing_channels_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2397, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_available_input_routing_types_listener()', 'description': 'remove_available_input_routing_types_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_types&quot;. C++ signature :  void remove_available_input_routing_types_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2398, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_input_routing_channel_listener()', 'description': 'remove_input_routing_channel_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_channel&quot;. C++ signature :  void remove_input_routing_channel_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2399, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_input_routing_type_listener()', 'description': 'remove_input_routing_type_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_type&quot;. C++ signature :  void remove_input_routing_type_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2400, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2401, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2402, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2403, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2404, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2435, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_available_input_routing_channels_listener()', 'description': 'add_available_input_routing_channels_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_channels&quot; has changed. C++ signature :  void add_available_input_routing_channels_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2436, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_available_input_routing_types_listener()', 'description': 'add_available_input_routing_types_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_types&quot; has changed. C++ signature :  void add_available_input_routing_types_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2437, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_input_routing_channel_listener()', 'description': 'add_input_routing_channel_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_channel&quot; has changed. C++ signature :  void add_input_routing_channel_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2438, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_input_routing_type_listener()', 'description': 'add_input_routing_type_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_type&quot; has changed. C++ signature :  void add_input_routing_type_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2439, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2440, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2441, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2442, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2443, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2445, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.available_input_routing_channels_has_listener()', 'description': 'available_input_routing_channels_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_channels&quot;. C++ signature :  bool available_input_routing_channels_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'available_input_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2447, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.available_input_routing_types_has_listener()', 'description': 'available_input_routing_types_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_types&quot;. C++ signature :  bool available_input_routing_types_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'available_input_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2454, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.input_routing_channel_has_listener()', 'description': 'input_routing_channel_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_channel&quot;. C++ signature :  bool input_routing_channel_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'input_routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2456, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.input_routing_type_has_listener()', 'description': 'input_routing_type_has_listener( (CompressorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_type&quot;. C++ signature :  bool input_routing_type_has_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'input_routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2458, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2460, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2462, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2464, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2466, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2467, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_available_input_routing_channels_listener()', 'description': 'remove_available_input_routing_channels_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_channels&quot;. C++ signature :  void remove_available_input_routing_channels_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2468, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_available_input_routing_types_listener()', 'description': 'remove_available_input_routing_types_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_types&quot;. C++ signature :  void remove_available_input_routing_types_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2469, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_input_routing_channel_listener()', 'description': 'remove_input_routing_channel_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_channel&quot;. C++ signature :  void remove_input_routing_channel_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2470, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_input_routing_type_listener()', 'description': 'remove_input_routing_type_listener( (CompressorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_type&quot;. C++ signature :  void remove_input_routing_type_listener(TCompressorDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2471, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2472, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2473, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2474, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2475, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 2377, 'children': [], 'group': 'listener Method'},
{'ref': 2480, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2406, 'children': [], 'group': 'listener Method'},
{'ref': 2481, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 2406, 'children': [], 'group': 'listener Method'},
{'ref': 2482, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2406, 'children': [], 'group': 'listener Method'},
{'ref': 2511, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2406, 'children': [], 'group': 'listener Method'},
{'ref': 2514, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 2406, 'children': [], 'group': 'listener Method'},
{'ref': 2515, 'tag': 'listener Method', 'name': 'Live.CompressorDevice.CompressorDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'CompressorDevice', 'CompressorDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2406, 'children': [], 'group': 'listener Method'},
{'ref': 2644, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2645, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2646, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2647, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2648, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2649, 'tag': 'listener Method', 'name': 'Live.Device.Device.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2650, 'tag': 'listener Method', 'name': 'Live.Device.Device.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2651, 'tag': 'listener Method', 'name': 'Live.Device.Device.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2652, 'tag': 'listener Method', 'name': 'Live.Device.Device.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2653, 'tag': 'listener Method', 'name': 'Live.Device.Device.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2654, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2655, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2656, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2657, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2658, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2689, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2690, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2691, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2692, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2693, 'tag': 'listener Method', 'name': 'Live.Device.Device.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2700, 'tag': 'listener Method', 'name': 'Live.Device.Device.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2702, 'tag': 'listener Method', 'name': 'Live.Device.Device.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2704, 'tag': 'listener Method', 'name': 'Live.Device.Device.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2706, 'tag': 'listener Method', 'name': 'Live.Device.Device.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2708, 'tag': 'listener Method', 'name': 'Live.Device.Device.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2709, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2710, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2711, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2712, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2713, 'tag': 'listener Method', 'name': 'Live.Device.Device.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 2643, 'children': [], 'group': 'listener Method'},
{'ref': 2718, 'tag': 'listener Method', 'name': 'Live.Device.Device.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2660, 'children': [], 'group': 'listener Method'},
{'ref': 2719, 'tag': 'listener Method', 'name': 'Live.Device.Device.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 2660, 'children': [], 'group': 'listener Method'},
{'ref': 2720, 'tag': 'listener Method', 'name': 'Live.Device.Device.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2660, 'children': [], 'group': 'listener Method'},
{'ref': 2749, 'tag': 'listener Method', 'name': 'Live.Device.Device.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2660, 'children': [], 'group': 'listener Method'},
{'ref': 2752, 'tag': 'listener Method', 'name': 'Live.Device.Device.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 2660, 'children': [], 'group': 'listener Method'},
{'ref': 2753, 'tag': 'listener Method', 'name': 'Live.Device.Device.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Device', 'Device', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 2660, 'children': [], 'group': 'listener Method'},
{'ref': 2837, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_available_routing_channels_listener()', 'description': 'add_available_routing_channels_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_routing_channels&quot; has changed. C++ signature :  void add_available_routing_channels_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_available_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2838, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_available_routing_types_listener()', 'description': 'add_available_routing_types_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_routing_types&quot; has changed. C++ signature :  void add_available_routing_types_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_available_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2839, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_routing_channel_listener()', 'description': 'add_routing_channel_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;routing_channel&quot; has changed. C++ signature :  void add_routing_channel_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2840, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_routing_type_listener()', 'description': 'add_routing_type_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;routing_type&quot; has changed. C++ signature :  void add_routing_type_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2841, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.available_routing_channels_has_listener()', 'description': 'available_routing_channels_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_routing_channels&quot;. C++ signature :  bool available_routing_channels_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'available_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2842, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.available_routing_types_has_listener()', 'description': 'available_routing_types_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_routing_types&quot;. C++ signature :  bool available_routing_types_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'available_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2843, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_available_routing_channels_listener()', 'description': 'remove_available_routing_channels_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_routing_channels&quot;. C++ signature :  void remove_available_routing_channels_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_available_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2844, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_available_routing_types_listener()', 'description': 'remove_available_routing_types_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_routing_types&quot;. C++ signature :  void remove_available_routing_types_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_available_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2845, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_routing_channel_listener()', 'description': 'remove_routing_channel_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;routing_channel&quot;. C++ signature :  void remove_routing_channel_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2846, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_routing_type_listener()', 'description': 'remove_routing_type_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;routing_type&quot;. C++ signature :  void remove_routing_type_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2847, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.routing_channel_has_listener()', 'description': 'routing_channel_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;routing_channel&quot;. C++ signature :  bool routing_channel_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2848, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.routing_type_has_listener()', 'description': 'routing_type_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;routing_type&quot;. C++ signature :  bool routing_type_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2877, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_available_routing_channels_listener()', 'description': 'add_available_routing_channels_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_routing_channels&quot; has changed. C++ signature :  void add_available_routing_channels_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_available_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2878, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_available_routing_types_listener()', 'description': 'add_available_routing_types_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_routing_types&quot; has changed. C++ signature :  void add_available_routing_types_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_available_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2879, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_routing_channel_listener()', 'description': 'add_routing_channel_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;routing_channel&quot; has changed. C++ signature :  void add_routing_channel_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2880, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.add_routing_type_listener()', 'description': 'add_routing_type_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;routing_type&quot; has changed. C++ signature :  void add_routing_type_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'add_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2882, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.available_routing_channels_has_listener()', 'description': 'available_routing_channels_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_routing_channels&quot;. C++ signature :  bool available_routing_channels_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'available_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2884, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.available_routing_types_has_listener()', 'description': 'available_routing_types_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_routing_types&quot;. C++ signature :  bool available_routing_types_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'available_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2887, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_available_routing_channels_listener()', 'description': 'remove_available_routing_channels_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_routing_channels&quot;. C++ signature :  void remove_available_routing_channels_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_available_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2888, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_available_routing_types_listener()', 'description': 'remove_available_routing_types_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_routing_types&quot;. C++ signature :  void remove_available_routing_types_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_available_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2889, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_routing_channel_listener()', 'description': 'remove_routing_channel_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;routing_channel&quot;. C++ signature :  void remove_routing_channel_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2890, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.remove_routing_type_listener()', 'description': 'remove_routing_type_listener( (DeviceIO)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;routing_type&quot;. C++ signature :  void remove_routing_type_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'remove_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2892, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.routing_channel_has_listener()', 'description': 'routing_channel_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;routing_channel&quot;. C++ signature :  bool routing_channel_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2894, 'tag': 'listener Method', 'name': 'Live.DeviceIO.DeviceIO.routing_type_has_listener()', 'description': 'routing_type_has_listener( (DeviceIO)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;routing_type&quot;. C++ signature :  bool routing_type_has_listener(TPyHandle&lt;AMxDRoutable&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceIO', 'DeviceIO', 'routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 2836, 'children': [], 'group': 'listener Method'},
{'ref': 2977, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_automation_state_listener()', 'description': 'add_automation_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;automation_state&quot; has changed. C++ signature :  void add_automation_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_automation_state_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 2978, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_name_listener()', 'description': 'add_name_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 2979, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_state_listener()', 'description': 'add_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;state&quot; has changed. C++ signature :  void add_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_state_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 2980, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_value_listener()', 'description': 'add_value_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;value&quot; has changed. C++ signature :  void add_value_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_value_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 2981, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.automation_state_has_listener()', 'description': 'automation_state_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;automation_state&quot;. C++ signature :  bool automation_state_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'automation_state_has_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 2984, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.name_has_listener()', 'description': 'name_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 2986, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_automation_state_listener()', 'description': 'remove_automation_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;automation_state&quot;. C++ signature :  void remove_automation_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_automation_state_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 2987, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_name_listener()', 'description': 'remove_name_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 2988, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_state_listener()', 'description': 'remove_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;state&quot;. C++ signature :  void remove_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_state_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 2989, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_value_listener()', 'description': 'remove_value_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;value&quot;. C++ signature :  void remove_value_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_value_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 2990, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.state_has_listener()', 'description': 'state_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;state&quot;. C++ signature :  bool state_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'state_has_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 2992, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.value_has_listener()', 'description': 'value_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;value&quot;. C++ signature :  bool value_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'value_has_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 3021, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_automation_state_listener()', 'description': 'add_automation_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;automation_state&quot; has changed. C++ signature :  void add_automation_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_automation_state_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 3022, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_name_listener()', 'description': 'add_name_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 3023, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_state_listener()', 'description': 'add_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;state&quot; has changed. C++ signature :  void add_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_state_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 3024, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.add_value_listener()', 'description': 'add_value_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;value&quot; has changed. C++ signature :  void add_value_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'add_value_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 3026, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.automation_state_has_listener()', 'description': 'automation_state_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;automation_state&quot;. C++ signature :  bool automation_state_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'automation_state_has_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 3036, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.name_has_listener()', 'description': 'name_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 3039, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_automation_state_listener()', 'description': 'remove_automation_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;automation_state&quot;. C++ signature :  void remove_automation_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_automation_state_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 3040, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_name_listener()', 'description': 'remove_name_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 3041, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_state_listener()', 'description': 'remove_state_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;state&quot;. C++ signature :  void remove_state_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_state_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 3042, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.remove_value_listener()', 'description': 'remove_value_listener( (DeviceParameter)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;value&quot;. C++ signature :  void remove_value_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'remove_value_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 3045, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.state_has_listener()', 'description': 'state_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;state&quot;. C++ signature :  bool state_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'state_has_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 3048, 'tag': 'listener Method', 'name': 'Live.DeviceParameter.DeviceParameter.value_has_listener()', 'description': 'value_has_listener( (DeviceParameter)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;value&quot;. C++ signature :  bool value_has_listener(TPyHandle&lt;ATimeableValue&gt;,boost::python::api::object)', 'path': ['Live', 'DeviceParameter', 'DeviceParameter', 'value_has_listener()'], 'hierarchy': 3, 'ref_parent': 2976, 'children': [], 'group': 'listener Method'},
{'ref': 3132, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3133, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3134, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3135, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_filter_source_1_index_listener()', 'description': 'add_mod_matrix_filter_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_filter_source_1_index&quot; has changed. C++ signature :  void add_mod_matrix_filter_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_filter_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3136, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_filter_source_2_index_listener()', 'description': 'add_mod_matrix_filter_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_filter_source_2_index&quot; has changed. C++ signature :  void add_mod_matrix_filter_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_filter_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3137, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_lfo_source_index_listener()', 'description': 'add_mod_matrix_lfo_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_lfo_source_index&quot; has changed. C++ signature :  void add_mod_matrix_lfo_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_lfo_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3138, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_pitch_source_1_index_listener()', 'description': 'add_mod_matrix_pitch_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_pitch_source_1_index&quot; has changed. C++ signature :  void add_mod_matrix_pitch_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_pitch_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3139, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_pitch_source_2_index_listener()', 'description': 'add_mod_matrix_pitch_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_pitch_source_2_index&quot; has changed. C++ signature :  void add_mod_matrix_pitch_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_pitch_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3140, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_shape_source_index_listener()', 'description': 'add_mod_matrix_shape_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_shape_source_index&quot; has changed. C++ signature :  void add_mod_matrix_shape_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_shape_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3141, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_source_1_index_listener()', 'description': 'add_mod_matrix_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_source_1_index&quot; has changed. C++ signature :  void add_mod_matrix_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3142, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_source_2_index_listener()', 'description': 'add_mod_matrix_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_source_2_index&quot; has changed. C++ signature :  void add_mod_matrix_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3143, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_source_3_index_listener()', 'description': 'add_mod_matrix_source_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_source_3_index&quot; has changed. C++ signature :  void add_mod_matrix_source_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_source_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3144, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_target_1_index_listener()', 'description': 'add_mod_matrix_target_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_target_1_index&quot; has changed. C++ signature :  void add_mod_matrix_target_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_target_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3145, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_target_2_index_listener()', 'description': 'add_mod_matrix_target_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_target_2_index&quot; has changed. C++ signature :  void add_mod_matrix_target_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_target_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3146, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_target_3_index_listener()', 'description': 'add_mod_matrix_target_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_target_3_index&quot; has changed. C++ signature :  void add_mod_matrix_target_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_target_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3147, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3148, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3149, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_pitch_bend_range_listener()', 'description': 'add_pitch_bend_range_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_bend_range&quot; has changed. C++ signature :  void add_pitch_bend_range_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3150, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_voice_count_index_listener()', 'description': 'add_voice_count_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;voice_count_index&quot; has changed. C++ signature :  void add_voice_count_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_voice_count_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3151, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_voice_mode_index_listener()', 'description': 'add_voice_mode_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;voice_mode_index&quot; has changed. C++ signature :  void add_voice_mode_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_voice_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3152, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3153, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3154, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3155, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_filter_source_1_index_has_listener()', 'description': 'mod_matrix_filter_source_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_filter_source_1_index&quot;. C++ signature :  bool mod_matrix_filter_source_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_filter_source_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3156, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_filter_source_2_index_has_listener()', 'description': 'mod_matrix_filter_source_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_filter_source_2_index&quot;. C++ signature :  bool mod_matrix_filter_source_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_filter_source_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3157, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_lfo_source_index_has_listener()', 'description': 'mod_matrix_lfo_source_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_lfo_source_index&quot;. C++ signature :  bool mod_matrix_lfo_source_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_lfo_source_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3158, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_pitch_source_1_index_has_listener()', 'description': 'mod_matrix_pitch_source_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_pitch_source_1_index&quot;. C++ signature :  bool mod_matrix_pitch_source_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_pitch_source_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3159, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_pitch_source_2_index_has_listener()', 'description': 'mod_matrix_pitch_source_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_pitch_source_2_index&quot;. C++ signature :  bool mod_matrix_pitch_source_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_pitch_source_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3160, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_shape_source_index_has_listener()', 'description': 'mod_matrix_shape_source_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_shape_source_index&quot;. C++ signature :  bool mod_matrix_shape_source_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_shape_source_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3161, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_source_1_index_has_listener()', 'description': 'mod_matrix_source_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_source_1_index&quot;. C++ signature :  bool mod_matrix_source_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_source_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3162, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_source_2_index_has_listener()', 'description': 'mod_matrix_source_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_source_2_index&quot;. C++ signature :  bool mod_matrix_source_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_source_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3163, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_source_3_index_has_listener()', 'description': 'mod_matrix_source_3_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_source_3_index&quot;. C++ signature :  bool mod_matrix_source_3_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_source_3_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3164, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_target_1_index_has_listener()', 'description': 'mod_matrix_target_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_target_1_index&quot;. C++ signature :  bool mod_matrix_target_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_target_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3165, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_target_2_index_has_listener()', 'description': 'mod_matrix_target_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_target_2_index&quot;. C++ signature :  bool mod_matrix_target_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_target_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3166, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_target_3_index_has_listener()', 'description': 'mod_matrix_target_3_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_target_3_index&quot;. C++ signature :  bool mod_matrix_target_3_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_target_3_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3167, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3168, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3169, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.pitch_bend_range_has_listener()', 'description': 'pitch_bend_range_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_bend_range&quot;. C++ signature :  bool pitch_bend_range_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3170, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3171, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3172, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3173, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_filter_source_1_index_listener()', 'description': 'remove_mod_matrix_filter_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_filter_source_1_index&quot;. C++ signature :  void remove_mod_matrix_filter_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_filter_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3174, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_filter_source_2_index_listener()', 'description': 'remove_mod_matrix_filter_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_filter_source_2_index&quot;. C++ signature :  void remove_mod_matrix_filter_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_filter_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3175, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_lfo_source_index_listener()', 'description': 'remove_mod_matrix_lfo_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_lfo_source_index&quot;. C++ signature :  void remove_mod_matrix_lfo_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_lfo_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3176, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_pitch_source_1_index_listener()', 'description': 'remove_mod_matrix_pitch_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_pitch_source_1_index&quot;. C++ signature :  void remove_mod_matrix_pitch_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_pitch_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3177, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_pitch_source_2_index_listener()', 'description': 'remove_mod_matrix_pitch_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_pitch_source_2_index&quot;. C++ signature :  void remove_mod_matrix_pitch_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_pitch_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3178, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_shape_source_index_listener()', 'description': 'remove_mod_matrix_shape_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_shape_source_index&quot;. C++ signature :  void remove_mod_matrix_shape_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_shape_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3179, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_source_1_index_listener()', 'description': 'remove_mod_matrix_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_source_1_index&quot;. C++ signature :  void remove_mod_matrix_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3180, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_source_2_index_listener()', 'description': 'remove_mod_matrix_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_source_2_index&quot;. C++ signature :  void remove_mod_matrix_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3181, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_source_3_index_listener()', 'description': 'remove_mod_matrix_source_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_source_3_index&quot;. C++ signature :  void remove_mod_matrix_source_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_source_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3182, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_target_1_index_listener()', 'description': 'remove_mod_matrix_target_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_target_1_index&quot;. C++ signature :  void remove_mod_matrix_target_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_target_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3183, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_target_2_index_listener()', 'description': 'remove_mod_matrix_target_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_target_2_index&quot;. C++ signature :  void remove_mod_matrix_target_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_target_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3184, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_target_3_index_listener()', 'description': 'remove_mod_matrix_target_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_target_3_index&quot;. C++ signature :  void remove_mod_matrix_target_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_target_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3185, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3186, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3187, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_pitch_bend_range_listener()', 'description': 'remove_pitch_bend_range_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_bend_range&quot;. C++ signature :  void remove_pitch_bend_range_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3188, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_voice_count_index_listener()', 'description': 'remove_voice_count_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;voice_count_index&quot;. C++ signature :  void remove_voice_count_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_voice_count_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3189, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_voice_mode_index_listener()', 'description': 'remove_voice_mode_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;voice_mode_index&quot;. C++ signature :  void remove_voice_mode_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_voice_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3191, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.voice_count_index_has_listener()', 'description': 'voice_count_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;voice_count_index&quot;. C++ signature :  bool voice_count_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'voice_count_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3192, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.voice_mode_index_has_listener()', 'description': 'voice_mode_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;voice_mode_index&quot;. C++ signature :  bool voice_mode_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'voice_mode_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3222, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3223, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3224, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3225, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_filter_source_1_index_listener()', 'description': 'add_mod_matrix_filter_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_filter_source_1_index&quot; has changed. C++ signature :  void add_mod_matrix_filter_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_filter_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3226, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_filter_source_2_index_listener()', 'description': 'add_mod_matrix_filter_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_filter_source_2_index&quot; has changed. C++ signature :  void add_mod_matrix_filter_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_filter_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3227, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_lfo_source_index_listener()', 'description': 'add_mod_matrix_lfo_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_lfo_source_index&quot; has changed. C++ signature :  void add_mod_matrix_lfo_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_lfo_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3228, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_pitch_source_1_index_listener()', 'description': 'add_mod_matrix_pitch_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_pitch_source_1_index&quot; has changed. C++ signature :  void add_mod_matrix_pitch_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_pitch_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3229, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_pitch_source_2_index_listener()', 'description': 'add_mod_matrix_pitch_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_pitch_source_2_index&quot; has changed. C++ signature :  void add_mod_matrix_pitch_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_pitch_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3230, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_shape_source_index_listener()', 'description': 'add_mod_matrix_shape_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_shape_source_index&quot; has changed. C++ signature :  void add_mod_matrix_shape_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_shape_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3231, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_source_1_index_listener()', 'description': 'add_mod_matrix_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_source_1_index&quot; has changed. C++ signature :  void add_mod_matrix_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3232, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_source_2_index_listener()', 'description': 'add_mod_matrix_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_source_2_index&quot; has changed. C++ signature :  void add_mod_matrix_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3233, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_source_3_index_listener()', 'description': 'add_mod_matrix_source_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_source_3_index&quot; has changed. C++ signature :  void add_mod_matrix_source_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_source_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3234, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_target_1_index_listener()', 'description': 'add_mod_matrix_target_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_target_1_index&quot; has changed. C++ signature :  void add_mod_matrix_target_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_target_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3235, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_target_2_index_listener()', 'description': 'add_mod_matrix_target_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_target_2_index&quot; has changed. C++ signature :  void add_mod_matrix_target_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_target_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3236, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_mod_matrix_target_3_index_listener()', 'description': 'add_mod_matrix_target_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_matrix_target_3_index&quot; has changed. C++ signature :  void add_mod_matrix_target_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_mod_matrix_target_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3237, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3238, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3239, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_pitch_bend_range_listener()', 'description': 'add_pitch_bend_range_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_bend_range&quot; has changed. C++ signature :  void add_pitch_bend_range_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3240, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_voice_count_index_listener()', 'description': 'add_voice_count_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;voice_count_index&quot; has changed. C++ signature :  void add_voice_count_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_voice_count_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3241, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.add_voice_mode_index_listener()', 'description': 'add_voice_mode_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;voice_mode_index&quot; has changed. C++ signature :  void add_voice_mode_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'add_voice_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3248, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3250, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3252, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3254, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_filter_source_1_index_has_listener()', 'description': 'mod_matrix_filter_source_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_filter_source_1_index&quot;. C++ signature :  bool mod_matrix_filter_source_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_filter_source_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3257, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_filter_source_2_index_has_listener()', 'description': 'mod_matrix_filter_source_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_filter_source_2_index&quot;. C++ signature :  bool mod_matrix_filter_source_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_filter_source_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3260, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_lfo_source_index_has_listener()', 'description': 'mod_matrix_lfo_source_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_lfo_source_index&quot;. C++ signature :  bool mod_matrix_lfo_source_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_lfo_source_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3263, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_pitch_source_1_index_has_listener()', 'description': 'mod_matrix_pitch_source_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_pitch_source_1_index&quot;. C++ signature :  bool mod_matrix_pitch_source_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_pitch_source_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3266, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_pitch_source_2_index_has_listener()', 'description': 'mod_matrix_pitch_source_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_pitch_source_2_index&quot;. C++ signature :  bool mod_matrix_pitch_source_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_pitch_source_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3269, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_shape_source_index_has_listener()', 'description': 'mod_matrix_shape_source_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_shape_source_index&quot;. C++ signature :  bool mod_matrix_shape_source_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_shape_source_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3272, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_source_1_index_has_listener()', 'description': 'mod_matrix_source_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_source_1_index&quot;. C++ signature :  bool mod_matrix_source_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_source_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3275, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_source_2_index_has_listener()', 'description': 'mod_matrix_source_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_source_2_index&quot;. C++ signature :  bool mod_matrix_source_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_source_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3278, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_source_3_index_has_listener()', 'description': 'mod_matrix_source_3_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_source_3_index&quot;. C++ signature :  bool mod_matrix_source_3_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_source_3_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3281, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_target_1_index_has_listener()', 'description': 'mod_matrix_target_1_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_target_1_index&quot;. C++ signature :  bool mod_matrix_target_1_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_target_1_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3284, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_target_2_index_has_listener()', 'description': 'mod_matrix_target_2_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_target_2_index&quot;. C++ signature :  bool mod_matrix_target_2_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_target_2_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3287, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.mod_matrix_target_3_index_has_listener()', 'description': 'mod_matrix_target_3_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_matrix_target_3_index&quot;. C++ signature :  bool mod_matrix_target_3_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'mod_matrix_target_3_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3290, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3292, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3294, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.pitch_bend_range_has_listener()', 'description': 'pitch_bend_range_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_bend_range&quot;. C++ signature :  bool pitch_bend_range_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3295, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3296, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3297, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3298, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_filter_source_1_index_listener()', 'description': 'remove_mod_matrix_filter_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_filter_source_1_index&quot;. C++ signature :  void remove_mod_matrix_filter_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_filter_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3299, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_filter_source_2_index_listener()', 'description': 'remove_mod_matrix_filter_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_filter_source_2_index&quot;. C++ signature :  void remove_mod_matrix_filter_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_filter_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3300, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_lfo_source_index_listener()', 'description': 'remove_mod_matrix_lfo_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_lfo_source_index&quot;. C++ signature :  void remove_mod_matrix_lfo_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_lfo_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3301, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_pitch_source_1_index_listener()', 'description': 'remove_mod_matrix_pitch_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_pitch_source_1_index&quot;. C++ signature :  void remove_mod_matrix_pitch_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_pitch_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3302, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_pitch_source_2_index_listener()', 'description': 'remove_mod_matrix_pitch_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_pitch_source_2_index&quot;. C++ signature :  void remove_mod_matrix_pitch_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_pitch_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3303, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_shape_source_index_listener()', 'description': 'remove_mod_matrix_shape_source_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_shape_source_index&quot;. C++ signature :  void remove_mod_matrix_shape_source_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_shape_source_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3304, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_source_1_index_listener()', 'description': 'remove_mod_matrix_source_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_source_1_index&quot;. C++ signature :  void remove_mod_matrix_source_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_source_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3305, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_source_2_index_listener()', 'description': 'remove_mod_matrix_source_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_source_2_index&quot;. C++ signature :  void remove_mod_matrix_source_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_source_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3306, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_source_3_index_listener()', 'description': 'remove_mod_matrix_source_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_source_3_index&quot;. C++ signature :  void remove_mod_matrix_source_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_source_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3307, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_target_1_index_listener()', 'description': 'remove_mod_matrix_target_1_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_target_1_index&quot;. C++ signature :  void remove_mod_matrix_target_1_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_target_1_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3308, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_target_2_index_listener()', 'description': 'remove_mod_matrix_target_2_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_target_2_index&quot;. C++ signature :  void remove_mod_matrix_target_2_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_target_2_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3309, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_mod_matrix_target_3_index_listener()', 'description': 'remove_mod_matrix_target_3_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_matrix_target_3_index&quot;. C++ signature :  void remove_mod_matrix_target_3_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_mod_matrix_target_3_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3310, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3311, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3312, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_pitch_bend_range_listener()', 'description': 'remove_pitch_bend_range_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_bend_range&quot;. C++ signature :  void remove_pitch_bend_range_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3313, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_voice_count_index_listener()', 'description': 'remove_voice_count_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;voice_count_index&quot;. C++ signature :  void remove_voice_count_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_voice_count_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3314, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.remove_voice_mode_index_listener()', 'description': 'remove_voice_mode_index_listener( (DriftDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;voice_mode_index&quot;. C++ signature :  void remove_voice_mode_index_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'remove_voice_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3319, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.voice_count_index_has_listener()', 'description': 'voice_count_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;voice_count_index&quot;. C++ signature :  bool voice_count_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'voice_count_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3322, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.voice_mode_index_has_listener()', 'description': 'voice_mode_index_has_listener( (DriftDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;voice_mode_index&quot;. C++ signature :  bool voice_mode_index_has_listener(TDriftDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'voice_mode_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3131, 'children': [], 'group': 'listener Method'},
{'ref': 3325, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3193, 'children': [], 'group': 'listener Method'},
{'ref': 3326, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 3193, 'children': [], 'group': 'listener Method'},
{'ref': 3327, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3193, 'children': [], 'group': 'listener Method'},
{'ref': 3356, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3193, 'children': [], 'group': 'listener Method'},
{'ref': 3359, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 3193, 'children': [], 'group': 'listener Method'},
{'ref': 3360, 'tag': 'listener Method', 'name': 'Live.DriftDevice.DriftDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'DriftDevice', 'DriftDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3193, 'children': [], 'group': 'listener Method'},
{'ref': 3363, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_choke_group_listener()', 'description': 'add_choke_group_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;choke_group&quot; has changed. C++ signature :  void add_choke_group_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_choke_group_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3364, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_color_index_listener()', 'description': 'add_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3365, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_color_listener()', 'description': 'add_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3366, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_devices_listener()', 'description': 'add_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;devices&quot; has changed. C++ signature :  void add_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_devices_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3367, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_is_auto_colored_listener()', 'description': 'add_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_auto_colored&quot; has changed. C++ signature :  void add_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3368, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_mute_listener()', 'description': 'add_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3369, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_muted_via_solo_listener()', 'description': 'add_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted_via_solo&quot; has changed. C++ signature :  void add_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3370, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_name_listener()', 'description': 'add_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3371, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_out_note_listener()', 'description': 'add_out_note_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;out_note&quot; has changed. C++ signature :  void add_out_note_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_out_note_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3372, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_solo_listener()', 'description': 'add_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3373, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.choke_group_has_listener()', 'description': 'choke_group_has_listener( (DrumChain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;choke_group&quot;. C++ signature :  bool choke_group_has_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'choke_group_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3374, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.color_has_listener()', 'description': 'color_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3375, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.color_index_has_listener()', 'description': 'color_index_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3377, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.devices_has_listener()', 'description': 'devices_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;devices&quot;. C++ signature :  bool devices_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'devices_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3378, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.is_auto_colored_has_listener()', 'description': 'is_auto_colored_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_auto_colored&quot;. C++ signature :  bool is_auto_colored_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'is_auto_colored_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3379, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.mute_has_listener()', 'description': 'mute_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3380, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.muted_via_solo_has_listener()', 'description': 'muted_via_solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted_via_solo&quot;. C++ signature :  bool muted_via_solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'muted_via_solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3381, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.name_has_listener()', 'description': 'name_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3382, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.out_note_has_listener()', 'description': 'out_note_has_listener( (DrumChain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;out_note&quot;. C++ signature :  bool out_note_has_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'out_note_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3383, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_choke_group_listener()', 'description': 'remove_choke_group_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;choke_group&quot;. C++ signature :  void remove_choke_group_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_choke_group_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3384, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3385, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_color_listener()', 'description': 'remove_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3386, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_devices_listener()', 'description': 'remove_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;devices&quot;. C++ signature :  void remove_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_devices_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3387, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_is_auto_colored_listener()', 'description': 'remove_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_auto_colored&quot;. C++ signature :  void remove_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3388, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_mute_listener()', 'description': 'remove_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3389, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_muted_via_solo_listener()', 'description': 'remove_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted_via_solo&quot;. C++ signature :  void remove_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3390, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_name_listener()', 'description': 'remove_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3391, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_out_note_listener()', 'description': 'remove_out_note_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;out_note&quot;. C++ signature :  void remove_out_note_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_out_note_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3392, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_solo_listener()', 'description': 'remove_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3393, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.solo_has_listener()', 'description': 'solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3422, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_choke_group_listener()', 'description': 'add_choke_group_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;choke_group&quot; has changed. C++ signature :  void add_choke_group_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_choke_group_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3423, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_color_index_listener()', 'description': 'add_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3424, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_color_listener()', 'description': 'add_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3425, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_devices_listener()', 'description': 'add_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;devices&quot; has changed. C++ signature :  void add_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_devices_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3426, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_is_auto_colored_listener()', 'description': 'add_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_auto_colored&quot; has changed. C++ signature :  void add_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3427, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_mute_listener()', 'description': 'add_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3428, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_muted_via_solo_listener()', 'description': 'add_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted_via_solo&quot; has changed. C++ signature :  void add_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3429, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_name_listener()', 'description': 'add_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3430, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_out_note_listener()', 'description': 'add_out_note_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;out_note&quot; has changed. C++ signature :  void add_out_note_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_out_note_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3431, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.add_solo_listener()', 'description': 'add_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3434, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.choke_group_has_listener()', 'description': 'choke_group_has_listener( (DrumChain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;choke_group&quot;. C++ signature :  bool choke_group_has_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'choke_group_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3436, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.color_has_listener()', 'description': 'color_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3438, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.color_index_has_listener()', 'description': 'color_index_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3441, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.devices_has_listener()', 'description': 'devices_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;devices&quot;. C++ signature :  bool devices_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'devices_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3447, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.is_auto_colored_has_listener()', 'description': 'is_auto_colored_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_auto_colored&quot;. C++ signature :  bool is_auto_colored_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'is_auto_colored_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3450, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.mute_has_listener()', 'description': 'mute_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3452, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.muted_via_solo_has_listener()', 'description': 'muted_via_solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted_via_solo&quot;. C++ signature :  bool muted_via_solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'muted_via_solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3454, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.name_has_listener()', 'description': 'name_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3456, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.out_note_has_listener()', 'description': 'out_note_has_listener( (DrumChain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;out_note&quot;. C++ signature :  bool out_note_has_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'out_note_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3457, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_choke_group_listener()', 'description': 'remove_choke_group_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;choke_group&quot;. C++ signature :  void remove_choke_group_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_choke_group_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3458, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3459, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_color_listener()', 'description': 'remove_color_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3460, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_devices_listener()', 'description': 'remove_devices_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;devices&quot;. C++ signature :  void remove_devices_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_devices_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3461, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_is_auto_colored_listener()', 'description': 'remove_is_auto_colored_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_auto_colored&quot;. C++ signature :  void remove_is_auto_colored_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_is_auto_colored_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3462, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_mute_listener()', 'description': 'remove_mute_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3463, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_muted_via_solo_listener()', 'description': 'remove_muted_via_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted_via_solo&quot;. C++ signature :  void remove_muted_via_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3464, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_name_listener()', 'description': 'remove_name_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3465, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_out_note_listener()', 'description': 'remove_out_note_listener( (DrumChain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;out_note&quot;. C++ signature :  void remove_out_note_listener(TDrumChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_out_note_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3466, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.remove_solo_listener()', 'description': 'remove_solo_listener( (Chain)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3468, 'tag': 'listener Method', 'name': 'Live.DrumChain.DrumChain.solo_has_listener()', 'description': 'solo_has_listener( (Chain)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TChainPyHandle,boost::python::api::object)', 'path': ['Live', 'DrumChain', 'DrumChain', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 3362, 'children': [], 'group': 'listener Method'},
{'ref': 3471, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_chains_listener()', 'description': 'add_chains_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;chains&quot; has changed. C++ signature :  void add_chains_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_chains_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3472, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_mute_listener()', 'description': 'add_mute_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3473, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_name_listener()', 'description': 'add_name_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3474, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_solo_listener()', 'description': 'add_solo_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3475, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.chains_has_listener()', 'description': 'chains_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;chains&quot;. C++ signature :  bool chains_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3477, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.mute_has_listener()', 'description': 'mute_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3478, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.name_has_listener()', 'description': 'name_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3479, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_chains_listener()', 'description': 'remove_chains_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;chains&quot;. C++ signature :  void remove_chains_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_chains_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3480, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_mute_listener()', 'description': 'remove_mute_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3481, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_name_listener()', 'description': 'remove_name_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3482, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_solo_listener()', 'description': 'remove_solo_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3483, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.solo_has_listener()', 'description': 'solo_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3512, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_chains_listener()', 'description': 'add_chains_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;chains&quot; has changed. C++ signature :  void add_chains_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_chains_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3513, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_mute_listener()', 'description': 'add_mute_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3514, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_name_listener()', 'description': 'add_name_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3515, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.add_solo_listener()', 'description': 'add_solo_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3518, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.chains_has_listener()', 'description': 'chains_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;chains&quot;. C++ signature :  bool chains_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3521, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.mute_has_listener()', 'description': 'mute_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3523, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.name_has_listener()', 'description': 'name_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3525, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_chains_listener()', 'description': 'remove_chains_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;chains&quot;. C++ signature :  void remove_chains_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_chains_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3526, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_mute_listener()', 'description': 'remove_mute_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3527, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_name_listener()', 'description': 'remove_name_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3528, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.remove_solo_listener()', 'description': 'remove_solo_listener( (DrumPad)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3530, 'tag': 'listener Method', 'name': 'Live.DrumPad.DrumPad.solo_has_listener()', 'description': 'solo_has_listener( (DrumPad)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TPyHandle&lt;ADrumGroupDevicePad&gt;,boost::python::api::object)', 'path': ['Live', 'DrumPad', 'DrumPad', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 3470, 'children': [], 'group': 'listener Method'},
{'ref': 3612, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_edit_mode_listener()', 'description': 'add_edit_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;edit_mode&quot; has changed. C++ signature :  void add_edit_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_edit_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3613, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_global_mode_listener()', 'description': 'add_global_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;global_mode&quot; has changed. C++ signature :  void add_global_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_global_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3614, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3615, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3616, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3617, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3618, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_oversample_listener()', 'description': 'add_oversample_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oversample&quot; has changed. C++ signature :  void add_oversample_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_oversample_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3619, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3620, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.edit_mode_has_listener()', 'description': 'edit_mode_has_listener( (Eq8Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;edit_mode&quot;. C++ signature :  bool edit_mode_has_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'edit_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3621, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.global_mode_has_listener()', 'description': 'global_mode_has_listener( (Eq8Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;global_mode&quot;. C++ signature :  bool global_mode_has_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'global_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3622, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3623, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3624, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3625, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3626, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.oversample_has_listener()', 'description': 'oversample_has_listener( (Eq8Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oversample&quot;. C++ signature :  bool oversample_has_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'oversample_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3627, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3628, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_edit_mode_listener()', 'description': 'remove_edit_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;edit_mode&quot;. C++ signature :  void remove_edit_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_edit_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3629, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_global_mode_listener()', 'description': 'remove_global_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;global_mode&quot;. C++ signature :  void remove_global_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_global_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3630, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3631, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3632, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3633, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3634, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_oversample_listener()', 'description': 'remove_oversample_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oversample&quot;. C++ signature :  void remove_oversample_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_oversample_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3635, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3666, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_edit_mode_listener()', 'description': 'add_edit_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;edit_mode&quot; has changed. C++ signature :  void add_edit_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_edit_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3667, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_global_mode_listener()', 'description': 'add_global_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;global_mode&quot; has changed. C++ signature :  void add_global_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_global_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3668, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3669, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3670, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3671, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3672, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_oversample_listener()', 'description': 'add_oversample_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oversample&quot; has changed. C++ signature :  void add_oversample_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_oversample_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3673, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3680, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.edit_mode_has_listener()', 'description': 'edit_mode_has_listener( (Eq8Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;edit_mode&quot;. C++ signature :  bool edit_mode_has_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'edit_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3682, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.global_mode_has_listener()', 'description': 'global_mode_has_listener( (Eq8Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;global_mode&quot;. C++ signature :  bool global_mode_has_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'global_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3684, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3686, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3688, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3690, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3692, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.oversample_has_listener()', 'description': 'oversample_has_listener( (Eq8Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oversample&quot;. C++ signature :  bool oversample_has_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'oversample_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3694, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3695, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_edit_mode_listener()', 'description': 'remove_edit_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;edit_mode&quot;. C++ signature :  void remove_edit_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_edit_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3696, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_global_mode_listener()', 'description': 'remove_global_mode_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;global_mode&quot;. C++ signature :  void remove_global_mode_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_global_mode_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3697, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3698, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3699, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3700, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3701, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_oversample_listener()', 'description': 'remove_oversample_listener( (Eq8Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oversample&quot;. C++ signature :  void remove_oversample_listener(TEq8DevicePyHandle,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_oversample_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3702, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 3611, 'children': [], 'group': 'listener Method'},
{'ref': 3707, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3637, 'children': [], 'group': 'listener Method'},
{'ref': 3708, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.add_selected_band_listener()', 'description': 'add_selected_band_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_band&quot; has changed. C++ signature :  void add_selected_band_listener(TEq8DevicePyViewData,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'add_selected_band_listener()'], 'hierarchy': 4, 'ref_parent': 3637, 'children': [], 'group': 'listener Method'},
{'ref': 3709, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 3637, 'children': [], 'group': 'listener Method'},
{'ref': 3710, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3637, 'children': [], 'group': 'listener Method'},
{'ref': 3711, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.remove_selected_band_listener()', 'description': 'remove_selected_band_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_band&quot;. C++ signature :  void remove_selected_band_listener(TEq8DevicePyViewData,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'remove_selected_band_listener()'], 'hierarchy': 4, 'ref_parent': 3637, 'children': [], 'group': 'listener Method'},
{'ref': 3712, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.selected_band_has_listener()', 'description': 'selected_band_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_band&quot;. C++ signature :  bool selected_band_has_listener(TEq8DevicePyViewData,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'selected_band_has_listener()'], 'hierarchy': 4, 'ref_parent': 3637, 'children': [], 'group': 'listener Method'},
{'ref': 3741, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3637, 'children': [], 'group': 'listener Method'},
{'ref': 3742, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.add_selected_band_listener()', 'description': 'add_selected_band_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_band&quot; has changed. C++ signature :  void add_selected_band_listener(TEq8DevicePyViewData,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'add_selected_band_listener()'], 'hierarchy': 4, 'ref_parent': 3637, 'children': [], 'group': 'listener Method'},
{'ref': 3745, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 3637, 'children': [], 'group': 'listener Method'},
{'ref': 3746, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 3637, 'children': [], 'group': 'listener Method'},
{'ref': 3747, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.remove_selected_band_listener()', 'description': 'remove_selected_band_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_band&quot;. C++ signature :  void remove_selected_band_listener(TEq8DevicePyViewData,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'remove_selected_band_listener()'], 'hierarchy': 4, 'ref_parent': 3637, 'children': [], 'group': 'listener Method'},
{'ref': 3749, 'tag': 'listener Method', 'name': 'Live.Eq8Device.Eq8Device.View.selected_band_has_listener()', 'description': 'selected_band_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_band&quot;. C++ signature :  bool selected_band_has_listener(TEq8DevicePyViewData,boost::python::api::object)', 'path': ['Live', 'Eq8Device', 'Eq8Device', 'View', 'selected_band_has_listener()'], 'hierarchy': 4, 'ref_parent': 3637, 'children': [], 'group': 'listener Method'},
{'ref': 3916, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_name_listener()', 'description': 'add_name_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3917, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_quantization_amount_listener()', 'description': 'add_quantization_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;quantization_amount&quot; has changed. C++ signature :  void add_quantization_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_quantization_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3918, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_random_amount_listener()', 'description': 'add_random_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;random_amount&quot; has changed. C++ signature :  void add_random_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_random_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3919, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_timing_amount_listener()', 'description': 'add_timing_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;timing_amount&quot; has changed. C++ signature :  void add_timing_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_timing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3920, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_velocity_amount_listener()', 'description': 'add_velocity_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;velocity_amount&quot; has changed. C++ signature :  void add_velocity_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3921, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.name_has_listener()', 'description': 'name_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3922, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.quantization_amount_has_listener()', 'description': 'quantization_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;quantization_amount&quot;. C++ signature :  bool quantization_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'quantization_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3923, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.random_amount_has_listener()', 'description': 'random_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;random_amount&quot;. C++ signature :  bool random_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'random_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3924, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_name_listener()', 'description': 'remove_name_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3925, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_quantization_amount_listener()', 'description': 'remove_quantization_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;quantization_amount&quot;. C++ signature :  void remove_quantization_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_quantization_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3926, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_random_amount_listener()', 'description': 'remove_random_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;random_amount&quot;. C++ signature :  void remove_random_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_random_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3927, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_timing_amount_listener()', 'description': 'remove_timing_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;timing_amount&quot;. C++ signature :  void remove_timing_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_timing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3928, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_velocity_amount_listener()', 'description': 'remove_velocity_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;velocity_amount&quot;. C++ signature :  void remove_velocity_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3929, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.timing_amount_has_listener()', 'description': 'timing_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;timing_amount&quot;. C++ signature :  bool timing_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'timing_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3930, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.velocity_amount_has_listener()', 'description': 'velocity_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;velocity_amount&quot;. C++ signature :  bool velocity_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'velocity_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3959, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_name_listener()', 'description': 'add_name_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3960, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_quantization_amount_listener()', 'description': 'add_quantization_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;quantization_amount&quot; has changed. C++ signature :  void add_quantization_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_quantization_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3961, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_random_amount_listener()', 'description': 'add_random_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;random_amount&quot; has changed. C++ signature :  void add_random_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_random_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3962, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_timing_amount_listener()', 'description': 'add_timing_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;timing_amount&quot; has changed. C++ signature :  void add_timing_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_timing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3963, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.add_velocity_amount_listener()', 'description': 'add_velocity_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;velocity_amount&quot; has changed. C++ signature :  void add_velocity_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'add_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3967, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.name_has_listener()', 'description': 'name_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3969, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.quantization_amount_has_listener()', 'description': 'quantization_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;quantization_amount&quot;. C++ signature :  bool quantization_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'quantization_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3971, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.random_amount_has_listener()', 'description': 'random_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;random_amount&quot;. C++ signature :  bool random_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'random_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3972, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_name_listener()', 'description': 'remove_name_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3973, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_quantization_amount_listener()', 'description': 'remove_quantization_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;quantization_amount&quot;. C++ signature :  void remove_quantization_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_quantization_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3974, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_random_amount_listener()', 'description': 'remove_random_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;random_amount&quot;. C++ signature :  void remove_random_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_random_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3975, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_timing_amount_listener()', 'description': 'remove_timing_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;timing_amount&quot;. C++ signature :  void remove_timing_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_timing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3976, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.remove_velocity_amount_listener()', 'description': 'remove_velocity_amount_listener( (Groove)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;velocity_amount&quot;. C++ signature :  void remove_velocity_amount_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'remove_velocity_amount_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3978, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.timing_amount_has_listener()', 'description': 'timing_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;timing_amount&quot;. C++ signature :  bool timing_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'timing_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3980, 'tag': 'listener Method', 'name': 'Live.Groove.Groove.velocity_amount_has_listener()', 'description': 'velocity_amount_has_listener( (Groove)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;velocity_amount&quot;. C++ signature :  bool velocity_amount_has_listener(TPyHandle&lt;AGroove&gt;,boost::python::api::object)', 'path': ['Live', 'Groove', 'Groove', 'velocity_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 3915, 'children': [], 'group': 'listener Method'},
{'ref': 3983, 'tag': 'listener Method', 'name': 'Live.GroovePool.GroovePool.add_grooves_listener()', 'description': 'add_grooves_listener( (GroovePool)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;grooves&quot; has changed. C++ signature :  void add_grooves_listener(TPyHandle&lt;AGroovePool&gt;,boost::python::api::object)', 'path': ['Live', 'GroovePool', 'GroovePool', 'add_grooves_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3984, 'tag': 'listener Method', 'name': 'Live.GroovePool.GroovePool.grooves_has_listener()', 'description': 'grooves_has_listener( (GroovePool)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;grooves&quot;. C++ signature :  bool grooves_has_listener(TPyHandle&lt;AGroovePool&gt;,boost::python::api::object)', 'path': ['Live', 'GroovePool', 'GroovePool', 'grooves_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 3985, 'tag': 'listener Method', 'name': 'Live.GroovePool.GroovePool.remove_grooves_listener()', 'description': 'remove_grooves_listener( (GroovePool)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;grooves&quot;. C++ signature :  void remove_grooves_listener(TPyHandle&lt;AGroovePool&gt;,boost::python::api::object)', 'path': ['Live', 'GroovePool', 'GroovePool', 'remove_grooves_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4014, 'tag': 'listener Method', 'name': 'Live.GroovePool.GroovePool.add_grooves_listener()', 'description': 'add_grooves_listener( (GroovePool)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;grooves&quot; has changed. C++ signature :  void add_grooves_listener(TPyHandle&lt;AGroovePool&gt;,boost::python::api::object)', 'path': ['Live', 'GroovePool', 'GroovePool', 'add_grooves_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4017, 'tag': 'listener Method', 'name': 'Live.GroovePool.GroovePool.grooves_has_listener()', 'description': 'grooves_has_listener( (GroovePool)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;grooves&quot;. C++ signature :  bool grooves_has_listener(TPyHandle&lt;AGroovePool&gt;,boost::python::api::object)', 'path': ['Live', 'GroovePool', 'GroovePool', 'grooves_has_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4018, 'tag': 'listener Method', 'name': 'Live.GroovePool.GroovePool.remove_grooves_listener()', 'description': 'remove_grooves_listener( (GroovePool)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;grooves&quot;. C++ signature :  void remove_grooves_listener(TPyHandle&lt;AGroovePool&gt;,boost::python::api::object)', 'path': ['Live', 'GroovePool', 'GroovePool', 'remove_grooves_listener()'], 'hierarchy': 3, 'ref_parent': 3982, 'children': [], 'group': 'listener Method'},
{'ref': 4021, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_attack_time_listener()', 'description': 'add_ir_attack_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_attack_time&quot; has changed. C++ signature :  void add_ir_attack_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_attack_time_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4022, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_category_index_listener()', 'description': 'add_ir_category_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_category_index&quot; has changed. C++ signature :  void add_ir_category_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_category_index_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4023, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_decay_time_listener()', 'description': 'add_ir_decay_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_decay_time&quot; has changed. C++ signature :  void add_ir_decay_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_decay_time_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4024, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_file_index_listener()', 'description': 'add_ir_file_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_file_index&quot; has changed. C++ signature :  void add_ir_file_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_file_index_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4025, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_file_list_listener()', 'description': 'add_ir_file_list_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_file_list&quot; has changed. C++ signature :  void add_ir_file_list_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_file_list_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4026, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_size_factor_listener()', 'description': 'add_ir_size_factor_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_size_factor&quot; has changed. C++ signature :  void add_ir_size_factor_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_size_factor_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4027, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_time_shaping_on_listener()', 'description': 'add_ir_time_shaping_on_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_time_shaping_on&quot; has changed. C++ signature :  void add_ir_time_shaping_on_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_time_shaping_on_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4028, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4029, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4030, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4031, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4032, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4033, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_attack_time_has_listener()', 'description': 'ir_attack_time_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_attack_time&quot;. C++ signature :  bool ir_attack_time_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_attack_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4034, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_category_index_has_listener()', 'description': 'ir_category_index_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_category_index&quot;. C++ signature :  bool ir_category_index_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_category_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4035, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_decay_time_has_listener()', 'description': 'ir_decay_time_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_decay_time&quot;. C++ signature :  bool ir_decay_time_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_decay_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4036, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_file_index_has_listener()', 'description': 'ir_file_index_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_file_index&quot;. C++ signature :  bool ir_file_index_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_file_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4037, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_file_list_has_listener()', 'description': 'ir_file_list_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_file_list&quot;. C++ signature :  bool ir_file_list_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_file_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4038, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_size_factor_has_listener()', 'description': 'ir_size_factor_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_size_factor&quot;. C++ signature :  bool ir_size_factor_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_size_factor_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4039, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_time_shaping_on_has_listener()', 'description': 'ir_time_shaping_on_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_time_shaping_on&quot;. C++ signature :  bool ir_time_shaping_on_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_time_shaping_on_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4040, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4041, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4042, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4043, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4044, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4045, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_attack_time_listener()', 'description': 'remove_ir_attack_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_attack_time&quot;. C++ signature :  void remove_ir_attack_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_attack_time_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4046, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_category_index_listener()', 'description': 'remove_ir_category_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_category_index&quot;. C++ signature :  void remove_ir_category_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_category_index_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4047, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_decay_time_listener()', 'description': 'remove_ir_decay_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_decay_time&quot;. C++ signature :  void remove_ir_decay_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_decay_time_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4048, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_file_index_listener()', 'description': 'remove_ir_file_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_file_index&quot;. C++ signature :  void remove_ir_file_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_file_index_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4049, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_file_list_listener()', 'description': 'remove_ir_file_list_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_file_list&quot;. C++ signature :  void remove_ir_file_list_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_file_list_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4050, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_size_factor_listener()', 'description': 'remove_ir_size_factor_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_size_factor&quot;. C++ signature :  void remove_ir_size_factor_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_size_factor_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4051, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_time_shaping_on_listener()', 'description': 'remove_ir_time_shaping_on_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_time_shaping_on&quot;. C++ signature :  void remove_ir_time_shaping_on_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_time_shaping_on_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4052, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4053, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4054, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4055, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4056, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4087, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_attack_time_listener()', 'description': 'add_ir_attack_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_attack_time&quot; has changed. C++ signature :  void add_ir_attack_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_attack_time_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4088, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_category_index_listener()', 'description': 'add_ir_category_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_category_index&quot; has changed. C++ signature :  void add_ir_category_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_category_index_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4089, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_decay_time_listener()', 'description': 'add_ir_decay_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_decay_time&quot; has changed. C++ signature :  void add_ir_decay_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_decay_time_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4090, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_file_index_listener()', 'description': 'add_ir_file_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_file_index&quot; has changed. C++ signature :  void add_ir_file_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_file_index_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4091, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_file_list_listener()', 'description': 'add_ir_file_list_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_file_list&quot; has changed. C++ signature :  void add_ir_file_list_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_file_list_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4092, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_size_factor_listener()', 'description': 'add_ir_size_factor_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_size_factor&quot; has changed. C++ signature :  void add_ir_size_factor_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_size_factor_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4093, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_ir_time_shaping_on_listener()', 'description': 'add_ir_time_shaping_on_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;ir_time_shaping_on&quot; has changed. C++ signature :  void add_ir_time_shaping_on_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_ir_time_shaping_on_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4094, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4095, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4096, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4097, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4098, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4105, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_attack_time_has_listener()', 'description': 'ir_attack_time_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_attack_time&quot;. C++ signature :  bool ir_attack_time_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_attack_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4107, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_category_index_has_listener()', 'description': 'ir_category_index_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_category_index&quot;. C++ signature :  bool ir_category_index_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_category_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4110, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_decay_time_has_listener()', 'description': 'ir_decay_time_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_decay_time&quot;. C++ signature :  bool ir_decay_time_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_decay_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4112, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_file_index_has_listener()', 'description': 'ir_file_index_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_file_index&quot;. C++ signature :  bool ir_file_index_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_file_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4114, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_file_list_has_listener()', 'description': 'ir_file_list_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_file_list&quot;. C++ signature :  bool ir_file_list_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_file_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4116, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_size_factor_has_listener()', 'description': 'ir_size_factor_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_size_factor&quot;. C++ signature :  bool ir_size_factor_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_size_factor_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4118, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.ir_time_shaping_on_has_listener()', 'description': 'ir_time_shaping_on_has_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;ir_time_shaping_on&quot;. C++ signature :  bool ir_time_shaping_on_has_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'ir_time_shaping_on_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4120, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4122, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4124, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4126, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4128, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4129, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_attack_time_listener()', 'description': 'remove_ir_attack_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_attack_time&quot;. C++ signature :  void remove_ir_attack_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_attack_time_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4130, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_category_index_listener()', 'description': 'remove_ir_category_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_category_index&quot;. C++ signature :  void remove_ir_category_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_category_index_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4131, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_decay_time_listener()', 'description': 'remove_ir_decay_time_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_decay_time&quot;. C++ signature :  void remove_ir_decay_time_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_decay_time_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4132, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_file_index_listener()', 'description': 'remove_ir_file_index_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_file_index&quot;. C++ signature :  void remove_ir_file_index_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_file_index_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4133, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_file_list_listener()', 'description': 'remove_ir_file_list_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_file_list&quot;. C++ signature :  void remove_ir_file_list_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_file_list_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4134, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_size_factor_listener()', 'description': 'remove_ir_size_factor_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_size_factor&quot;. C++ signature :  void remove_ir_size_factor_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_size_factor_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4135, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_ir_time_shaping_on_listener()', 'description': 'remove_ir_time_shaping_on_listener( (HybridReverbDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;ir_time_shaping_on&quot;. C++ signature :  void remove_ir_time_shaping_on_listener(THybridReverbDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_ir_time_shaping_on_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4136, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4137, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4138, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4139, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4140, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4020, 'children': [], 'group': 'listener Method'},
{'ref': 4145, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4058, 'children': [], 'group': 'listener Method'},
{'ref': 4146, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 4058, 'children': [], 'group': 'listener Method'},
{'ref': 4147, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4058, 'children': [], 'group': 'listener Method'},
{'ref': 4176, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4058, 'children': [], 'group': 'listener Method'},
{'ref': 4179, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 4058, 'children': [], 'group': 'listener Method'},
{'ref': 4180, 'tag': 'listener Method', 'name': 'Live.HybridReverbDevice.HybridReverbDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'HybridReverbDevice', 'HybridReverbDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4058, 'children': [], 'group': 'listener Method'},
{'ref': 4285, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_audio_inputs_listener()', 'description': 'add_audio_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;audio_inputs&quot; has changed. C++ signature :  void add_audio_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_audio_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4286, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_audio_outputs_listener()', 'description': 'add_audio_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;audio_outputs&quot; has changed. C++ signature :  void add_audio_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_audio_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4287, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_bank_parameters_changed_listener()', 'description': 'add_bank_parameters_changed_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;bank_parameters_changed&quot; has changed. C++ signature :  void add_bank_parameters_changed_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_bank_parameters_changed_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4288, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4289, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4290, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4291, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_midi_inputs_listener()', 'description': 'add_midi_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_inputs&quot; has changed. C++ signature :  void add_midi_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_midi_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4292, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_midi_outputs_listener()', 'description': 'add_midi_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_outputs&quot; has changed. C++ signature :  void add_midi_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_midi_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4293, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4294, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4295, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.audio_inputs_has_listener()', 'description': 'audio_inputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;audio_inputs&quot;. C++ signature :  bool audio_inputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'audio_inputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4296, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.audio_outputs_has_listener()', 'description': 'audio_outputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;audio_outputs&quot;. C++ signature :  bool audio_outputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'audio_outputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4297, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.bank_parameters_changed_has_listener()', 'description': 'bank_parameters_changed_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;bank_parameters_changed&quot;. C++ signature :  bool bank_parameters_changed_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'bank_parameters_changed_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4302, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4303, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4304, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4305, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.midi_inputs_has_listener()', 'description': 'midi_inputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_inputs&quot;. C++ signature :  bool midi_inputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'midi_inputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4306, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.midi_outputs_has_listener()', 'description': 'midi_outputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_outputs&quot;. C++ signature :  bool midi_outputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'midi_outputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4307, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4308, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4309, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_audio_inputs_listener()', 'description': 'remove_audio_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;audio_inputs&quot;. C++ signature :  void remove_audio_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_audio_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4310, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_audio_outputs_listener()', 'description': 'remove_audio_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;audio_outputs&quot;. C++ signature :  void remove_audio_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_audio_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4311, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_bank_parameters_changed_listener()', 'description': 'remove_bank_parameters_changed_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;bank_parameters_changed&quot;. C++ signature :  void remove_bank_parameters_changed_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_bank_parameters_changed_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4312, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4313, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4314, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4315, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_midi_inputs_listener()', 'description': 'remove_midi_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_inputs&quot;. C++ signature :  void remove_midi_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_midi_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4316, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_midi_outputs_listener()', 'description': 'remove_midi_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_outputs&quot;. C++ signature :  void remove_midi_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_midi_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4317, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4318, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4349, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_audio_inputs_listener()', 'description': 'add_audio_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;audio_inputs&quot; has changed. C++ signature :  void add_audio_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_audio_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4350, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_audio_outputs_listener()', 'description': 'add_audio_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;audio_outputs&quot; has changed. C++ signature :  void add_audio_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_audio_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4351, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_bank_parameters_changed_listener()', 'description': 'add_bank_parameters_changed_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;bank_parameters_changed&quot; has changed. C++ signature :  void add_bank_parameters_changed_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_bank_parameters_changed_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4352, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4353, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4354, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4355, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_midi_inputs_listener()', 'description': 'add_midi_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_inputs&quot; has changed. C++ signature :  void add_midi_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_midi_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4356, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_midi_outputs_listener()', 'description': 'add_midi_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_outputs&quot; has changed. C++ signature :  void add_midi_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_midi_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4357, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4358, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4360, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.audio_inputs_has_listener()', 'description': 'audio_inputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;audio_inputs&quot;. C++ signature :  bool audio_inputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'audio_inputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4362, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.audio_outputs_has_listener()', 'description': 'audio_outputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;audio_outputs&quot;. C++ signature :  bool audio_outputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'audio_outputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4363, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.bank_parameters_changed_has_listener()', 'description': 'bank_parameters_changed_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;bank_parameters_changed&quot;. C++ signature :  bool bank_parameters_changed_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'bank_parameters_changed_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4374, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4376, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4378, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4380, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.midi_inputs_has_listener()', 'description': 'midi_inputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_inputs&quot;. C++ signature :  bool midi_inputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'midi_inputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4382, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.midi_outputs_has_listener()', 'description': 'midi_outputs_has_listener( (MaxDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_outputs&quot;. C++ signature :  bool midi_outputs_has_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'midi_outputs_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4384, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4386, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4387, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_audio_inputs_listener()', 'description': 'remove_audio_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;audio_inputs&quot;. C++ signature :  void remove_audio_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_audio_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4388, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_audio_outputs_listener()', 'description': 'remove_audio_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;audio_outputs&quot;. C++ signature :  void remove_audio_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_audio_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4389, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_bank_parameters_changed_listener()', 'description': 'remove_bank_parameters_changed_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;bank_parameters_changed&quot;. C++ signature :  void remove_bank_parameters_changed_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_bank_parameters_changed_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4390, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4391, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4392, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4393, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_midi_inputs_listener()', 'description': 'remove_midi_inputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_inputs&quot;. C++ signature :  void remove_midi_inputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_midi_inputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4394, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_midi_outputs_listener()', 'description': 'remove_midi_outputs_listener( (MaxDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_outputs&quot;. C++ signature :  void remove_midi_outputs_listener(TMaxDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_midi_outputs_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4395, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4396, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4284, 'children': [], 'group': 'listener Method'},
{'ref': 4401, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4320, 'children': [], 'group': 'listener Method'},
{'ref': 4402, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 4320, 'children': [], 'group': 'listener Method'},
{'ref': 4403, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4320, 'children': [], 'group': 'listener Method'},
{'ref': 4432, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4320, 'children': [], 'group': 'listener Method'},
{'ref': 4435, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 4320, 'children': [], 'group': 'listener Method'},
{'ref': 4436, 'tag': 'listener Method', 'name': 'Live.MaxDevice.MaxDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'MaxDevice', 'MaxDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4320, 'children': [], 'group': 'listener Method'},
{'ref': 4635, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.add_crossfade_assign_listener()', 'description': 'add_crossfade_assign_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;crossfade_assign&quot; has changed. C++ signature :  void add_crossfade_assign_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'add_crossfade_assign_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4636, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.add_panning_mode_listener()', 'description': 'add_panning_mode_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;panning_mode&quot; has changed. C++ signature :  void add_panning_mode_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'add_panning_mode_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4637, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.add_sends_listener()', 'description': 'add_sends_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sends&quot; has changed. C++ signature :  void add_sends_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'add_sends_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4638, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.crossfade_assign_has_listener()', 'description': 'crossfade_assign_has_listener( (MixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;crossfade_assign&quot;. C++ signature :  bool crossfade_assign_has_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'crossfade_assign_has_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4639, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.panning_mode_has_listener()', 'description': 'panning_mode_has_listener( (MixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;panning_mode&quot;. C++ signature :  bool panning_mode_has_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'panning_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4640, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.remove_crossfade_assign_listener()', 'description': 'remove_crossfade_assign_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;crossfade_assign&quot;. C++ signature :  void remove_crossfade_assign_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'remove_crossfade_assign_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4641, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.remove_panning_mode_listener()', 'description': 'remove_panning_mode_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;panning_mode&quot;. C++ signature :  void remove_panning_mode_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'remove_panning_mode_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4642, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.remove_sends_listener()', 'description': 'remove_sends_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sends&quot;. C++ signature :  void remove_sends_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'remove_sends_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4643, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.sends_has_listener()', 'description': 'sends_has_listener( (MixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sends&quot;. C++ signature :  bool sends_has_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'sends_has_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4672, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.add_crossfade_assign_listener()', 'description': 'add_crossfade_assign_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;crossfade_assign&quot; has changed. C++ signature :  void add_crossfade_assign_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'add_crossfade_assign_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4673, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.add_panning_mode_listener()', 'description': 'add_panning_mode_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;panning_mode&quot; has changed. C++ signature :  void add_panning_mode_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'add_panning_mode_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4674, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.add_sends_listener()', 'description': 'add_sends_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sends&quot; has changed. C++ signature :  void add_sends_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'add_sends_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4677, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.crossfade_assign_has_listener()', 'description': 'crossfade_assign_has_listener( (MixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;crossfade_assign&quot;. C++ signature :  bool crossfade_assign_has_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'crossfade_assign_has_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4684, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.panning_mode_has_listener()', 'description': 'panning_mode_has_listener( (MixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;panning_mode&quot;. C++ signature :  bool panning_mode_has_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'panning_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4686, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.remove_crossfade_assign_listener()', 'description': 'remove_crossfade_assign_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;crossfade_assign&quot;. C++ signature :  void remove_crossfade_assign_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'remove_crossfade_assign_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4687, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.remove_panning_mode_listener()', 'description': 'remove_panning_mode_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;panning_mode&quot;. C++ signature :  void remove_panning_mode_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'remove_panning_mode_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4688, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.remove_sends_listener()', 'description': 'remove_sends_listener( (MixerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sends&quot;. C++ signature :  void remove_sends_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'remove_sends_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4691, 'tag': 'listener Method', 'name': 'Live.MixerDevice.MixerDevice.sends_has_listener()', 'description': 'sends_has_listener( (MixerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sends&quot;. C++ signature :  bool sends_has_listener(TPyHandle&lt;ATrackDevice&gt;,boost::python::api::object)', 'path': ['Live', 'MixerDevice', 'MixerDevice', 'sends_has_listener()'], 'hierarchy': 3, 'ref_parent': 4634, 'children': [], 'group': 'listener Method'},
{'ref': 4856, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4857, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4858, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4859, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4860, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4861, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_presets_listener()', 'description': 'add_presets_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;presets&quot; has changed. C++ signature :  void add_presets_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_presets_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4862, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_selected_preset_index_listener()', 'description': 'add_selected_preset_index_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_preset_index&quot; has changed. C++ signature :  void add_selected_preset_index_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_selected_preset_index_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4864, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4865, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4866, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4867, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4868, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4869, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.presets_has_listener()', 'description': 'presets_has_listener( (PluginDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;presets&quot;. C++ signature :  bool presets_has_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'presets_has_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4870, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4871, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4872, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4873, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4874, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4875, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_presets_listener()', 'description': 'remove_presets_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;presets&quot;. C++ signature :  void remove_presets_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_presets_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4876, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_selected_preset_index_listener()', 'description': 'remove_selected_preset_index_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_preset_index&quot;. C++ signature :  void remove_selected_preset_index_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_selected_preset_index_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4877, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.selected_preset_index_has_listener()', 'description': 'selected_preset_index_has_listener( (PluginDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_preset_index&quot;. C++ signature :  bool selected_preset_index_has_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'selected_preset_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4908, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4909, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4910, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4911, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4912, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4913, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_presets_listener()', 'description': 'add_presets_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;presets&quot; has changed. C++ signature :  void add_presets_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_presets_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4914, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.add_selected_preset_index_listener()', 'description': 'add_selected_preset_index_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_preset_index&quot; has changed. C++ signature :  void add_selected_preset_index_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'add_selected_preset_index_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4922, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4924, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4926, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4928, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4930, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4932, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.presets_has_listener()', 'description': 'presets_has_listener( (PluginDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;presets&quot;. C++ signature :  bool presets_has_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'presets_has_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4933, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4934, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4935, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4936, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4937, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4938, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_presets_listener()', 'description': 'remove_presets_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;presets&quot;. C++ signature :  void remove_presets_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_presets_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4939, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.remove_selected_preset_index_listener()', 'description': 'remove_selected_preset_index_listener( (PluginDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_preset_index&quot;. C++ signature :  void remove_selected_preset_index_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'remove_selected_preset_index_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4941, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.selected_preset_index_has_listener()', 'description': 'selected_preset_index_has_listener( (PluginDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_preset_index&quot;. C++ signature :  bool selected_preset_index_has_listener(TPluginDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'selected_preset_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 4855, 'children': [], 'group': 'listener Method'},
{'ref': 4946, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4879, 'children': [], 'group': 'listener Method'},
{'ref': 4947, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 4879, 'children': [], 'group': 'listener Method'},
{'ref': 4948, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4879, 'children': [], 'group': 'listener Method'},
{'ref': 4977, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4879, 'children': [], 'group': 'listener Method'},
{'ref': 4980, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 4879, 'children': [], 'group': 'listener Method'},
{'ref': 4981, 'tag': 'listener Method', 'name': 'Live.PluginDevice.PluginDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'PluginDevice', 'PluginDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 4879, 'children': [], 'group': 'listener Method'},
{'ref': 4984, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_chains_listener()', 'description': 'add_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;chains&quot; has changed. C++ signature :  void add_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_chains_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 4985, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_drum_pads_listener()', 'description': 'add_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;drum_pads&quot; has changed. C++ signature :  void add_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 4986, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_has_drum_pads_listener()', 'description': 'add_has_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_drum_pads&quot; has changed. C++ signature :  void add_has_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_has_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 4987, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_has_macro_mappings_listener()', 'description': 'add_has_macro_mappings_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_macro_mappings&quot; has changed. C++ signature :  void add_has_macro_mappings_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_has_macro_mappings_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 4988, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 4989, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_is_showing_chains_listener()', 'description': 'add_is_showing_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_showing_chains&quot; has changed. C++ signature :  void add_is_showing_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 4990, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 4991, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 4993, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_macros_mapped_listener()', 'description': 'add_macros_mapped_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;macros_mapped&quot; has changed. C++ signature :  void add_macros_mapped_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_macros_mapped_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 4994, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 4995, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 4996, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_return_chains_listener()', 'description': 'add_return_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;return_chains&quot; has changed. C++ signature :  void add_return_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_return_chains_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 4997, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_variation_count_listener()', 'description': 'add_variation_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;variation_count&quot; has changed. C++ signature :  void add_variation_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_variation_count_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 4998, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_visible_drum_pads_listener()', 'description': 'add_visible_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_drum_pads&quot; has changed. C++ signature :  void add_visible_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_visible_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 4999, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_visible_macro_count_listener()', 'description': 'add_visible_macro_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_macro_count&quot; has changed. C++ signature :  void add_visible_macro_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_visible_macro_count_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5000, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.chains_has_listener()', 'description': 'chains_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;chains&quot;. C++ signature :  bool chains_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5003, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.drum_pads_has_listener()', 'description': 'drum_pads_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;drum_pads&quot;. C++ signature :  bool drum_pads_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'drum_pads_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5004, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.has_drum_pads_has_listener()', 'description': 'has_drum_pads_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_drum_pads&quot;. C++ signature :  bool has_drum_pads_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'has_drum_pads_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5005, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.has_macro_mappings_has_listener()', 'description': 'has_macro_mappings_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_macro_mappings&quot;. C++ signature :  bool has_macro_mappings_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'has_macro_mappings_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5006, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5007, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.is_showing_chains_has_listener()', 'description': 'is_showing_chains_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_showing_chains&quot;. C++ signature :  bool is_showing_chains_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'is_showing_chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5008, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5009, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5010, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.macros_mapped_has_listener()', 'description': 'macros_mapped_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;macros_mapped&quot;. C++ signature :  bool macros_mapped_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'macros_mapped_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5011, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5012, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5016, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_chains_listener()', 'description': 'remove_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;chains&quot;. C++ signature :  void remove_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_chains_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5017, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_drum_pads_listener()', 'description': 'remove_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;drum_pads&quot;. C++ signature :  void remove_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5018, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_has_drum_pads_listener()', 'description': 'remove_has_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_drum_pads&quot;. C++ signature :  void remove_has_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_has_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5019, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_has_macro_mappings_listener()', 'description': 'remove_has_macro_mappings_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_macro_mappings&quot;. C++ signature :  void remove_has_macro_mappings_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_has_macro_mappings_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5020, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5021, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_is_showing_chains_listener()', 'description': 'remove_is_showing_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_showing_chains&quot;. C++ signature :  void remove_is_showing_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5022, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5023, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5025, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_macros_mapped_listener()', 'description': 'remove_macros_mapped_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;macros_mapped&quot;. C++ signature :  void remove_macros_mapped_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_macros_mapped_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5026, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5027, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5028, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_return_chains_listener()', 'description': 'remove_return_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;return_chains&quot;. C++ signature :  void remove_return_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_return_chains_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5029, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_variation_count_listener()', 'description': 'remove_variation_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;variation_count&quot;. C++ signature :  void remove_variation_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_variation_count_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5030, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_visible_drum_pads_listener()', 'description': 'remove_visible_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_drum_pads&quot;. C++ signature :  void remove_visible_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_visible_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5031, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_visible_macro_count_listener()', 'description': 'remove_visible_macro_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_macro_count&quot;. C++ signature :  void remove_visible_macro_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_visible_macro_count_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5032, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.return_chains_has_listener()', 'description': 'return_chains_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;return_chains&quot;. C++ signature :  bool return_chains_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'return_chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5035, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.variation_count_has_listener()', 'description': 'variation_count_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;variation_count&quot;. C++ signature :  bool variation_count_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'variation_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5036, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.visible_drum_pads_has_listener()', 'description': 'visible_drum_pads_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_drum_pads&quot;. C++ signature :  bool visible_drum_pads_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'visible_drum_pads_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5037, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.visible_macro_count_has_listener()', 'description': 'visible_macro_count_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_macro_count&quot;. C++ signature :  bool visible_macro_count_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'visible_macro_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5067, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_chains_listener()', 'description': 'add_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;chains&quot; has changed. C++ signature :  void add_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_chains_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5068, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_drum_pads_listener()', 'description': 'add_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;drum_pads&quot; has changed. C++ signature :  void add_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5069, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_has_drum_pads_listener()', 'description': 'add_has_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_drum_pads&quot; has changed. C++ signature :  void add_has_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_has_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5070, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_has_macro_mappings_listener()', 'description': 'add_has_macro_mappings_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_macro_mappings&quot; has changed. C++ signature :  void add_has_macro_mappings_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_has_macro_mappings_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5071, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5072, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_is_showing_chains_listener()', 'description': 'add_is_showing_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_showing_chains&quot; has changed. C++ signature :  void add_is_showing_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5073, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5074, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5076, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_macros_mapped_listener()', 'description': 'add_macros_mapped_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;macros_mapped&quot; has changed. C++ signature :  void add_macros_mapped_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_macros_mapped_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5077, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5078, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5079, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_return_chains_listener()', 'description': 'add_return_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;return_chains&quot; has changed. C++ signature :  void add_return_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_return_chains_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5080, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_variation_count_listener()', 'description': 'add_variation_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;variation_count&quot; has changed. C++ signature :  void add_variation_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_variation_count_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5081, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_visible_drum_pads_listener()', 'description': 'add_visible_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_drum_pads&quot; has changed. C++ signature :  void add_visible_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_visible_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5082, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.add_visible_macro_count_listener()', 'description': 'add_visible_macro_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_macro_count&quot; has changed. C++ signature :  void add_visible_macro_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'add_visible_macro_count_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5089, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.chains_has_listener()', 'description': 'chains_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;chains&quot;. C++ signature :  bool chains_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5095, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.drum_pads_has_listener()', 'description': 'drum_pads_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;drum_pads&quot;. C++ signature :  bool drum_pads_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'drum_pads_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5097, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.has_drum_pads_has_listener()', 'description': 'has_drum_pads_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_drum_pads&quot;. C++ signature :  bool has_drum_pads_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'has_drum_pads_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5099, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.has_macro_mappings_has_listener()', 'description': 'has_macro_mappings_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_macro_mappings&quot;. C++ signature :  bool has_macro_mappings_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'has_macro_mappings_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5101, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5103, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.is_showing_chains_has_listener()', 'description': 'is_showing_chains_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_showing_chains&quot;. C++ signature :  bool is_showing_chains_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'is_showing_chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5105, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5107, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5109, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.macros_mapped_has_listener()', 'description': 'macros_mapped_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;macros_mapped&quot;. C++ signature :  bool macros_mapped_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'macros_mapped_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5111, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5113, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5117, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_chains_listener()', 'description': 'remove_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;chains&quot;. C++ signature :  void remove_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_chains_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5118, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_drum_pads_listener()', 'description': 'remove_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;drum_pads&quot;. C++ signature :  void remove_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5119, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_has_drum_pads_listener()', 'description': 'remove_has_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_drum_pads&quot;. C++ signature :  void remove_has_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_has_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5120, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_has_macro_mappings_listener()', 'description': 'remove_has_macro_mappings_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_macro_mappings&quot;. C++ signature :  void remove_has_macro_mappings_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_has_macro_mappings_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5121, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5122, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_is_showing_chains_listener()', 'description': 'remove_is_showing_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_showing_chains&quot;. C++ signature :  void remove_is_showing_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5123, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5124, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5126, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_macros_mapped_listener()', 'description': 'remove_macros_mapped_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;macros_mapped&quot;. C++ signature :  void remove_macros_mapped_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_macros_mapped_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5127, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5128, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5129, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_return_chains_listener()', 'description': 'remove_return_chains_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;return_chains&quot;. C++ signature :  void remove_return_chains_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_return_chains_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5130, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_variation_count_listener()', 'description': 'remove_variation_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;variation_count&quot;. C++ signature :  void remove_variation_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_variation_count_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5131, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_visible_drum_pads_listener()', 'description': 'remove_visible_drum_pads_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_drum_pads&quot;. C++ signature :  void remove_visible_drum_pads_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_visible_drum_pads_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5132, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.remove_visible_macro_count_listener()', 'description': 'remove_visible_macro_count_listener( (RackDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_macro_count&quot;. C++ signature :  void remove_visible_macro_count_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'remove_visible_macro_count_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5134, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.return_chains_has_listener()', 'description': 'return_chains_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;return_chains&quot;. C++ signature :  bool return_chains_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'return_chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5140, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.variation_count_has_listener()', 'description': 'variation_count_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;variation_count&quot;. C++ signature :  bool variation_count_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'variation_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5143, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.visible_drum_pads_has_listener()', 'description': 'visible_drum_pads_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_drum_pads&quot;. C++ signature :  bool visible_drum_pads_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'visible_drum_pads_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5145, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.visible_macro_count_has_listener()', 'description': 'visible_macro_count_has_listener( (RackDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_macro_count&quot;. C++ signature :  bool visible_macro_count_has_listener(TRackDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'visible_macro_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 4983, 'children': [], 'group': 'listener Method'},
{'ref': 5147, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_drum_pads_scroll_position_listener()', 'description': 'add_drum_pads_scroll_position_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;drum_pads_scroll_position&quot; has changed. C++ signature :  void add_drum_pads_scroll_position_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_drum_pads_scroll_position_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5148, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5149, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_is_showing_chain_devices_listener()', 'description': 'add_is_showing_chain_devices_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_showing_chain_devices&quot; has changed. C++ signature :  void add_is_showing_chain_devices_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_is_showing_chain_devices_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5150, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_selected_chain_listener()', 'description': 'add_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_chain&quot; has changed. C++ signature :  void add_selected_chain_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5151, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_selected_drum_pad_listener()', 'description': 'add_selected_drum_pad_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_drum_pad&quot; has changed. C++ signature :  void add_selected_drum_pad_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_selected_drum_pad_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5152, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.drum_pads_scroll_position_has_listener()', 'description': 'drum_pads_scroll_position_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;drum_pads_scroll_position&quot;. C++ signature :  bool drum_pads_scroll_position_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'drum_pads_scroll_position_has_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5153, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5154, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.is_showing_chain_devices_has_listener()', 'description': 'is_showing_chain_devices_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_showing_chain_devices&quot;. C++ signature :  bool is_showing_chain_devices_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'is_showing_chain_devices_has_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5155, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_drum_pads_scroll_position_listener()', 'description': 'remove_drum_pads_scroll_position_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;drum_pads_scroll_position&quot;. C++ signature :  void remove_drum_pads_scroll_position_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_drum_pads_scroll_position_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5156, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5157, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_is_showing_chain_devices_listener()', 'description': 'remove_is_showing_chain_devices_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_showing_chain_devices&quot;. C++ signature :  void remove_is_showing_chain_devices_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_is_showing_chain_devices_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5158, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_selected_chain_listener()', 'description': 'remove_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_chain&quot;. C++ signature :  void remove_selected_chain_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5159, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_selected_drum_pad_listener()', 'description': 'remove_selected_drum_pad_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_drum_pad&quot;. C++ signature :  void remove_selected_drum_pad_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_selected_drum_pad_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5160, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.selected_chain_has_listener()', 'description': 'selected_chain_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_chain&quot;. C++ signature :  bool selected_chain_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'selected_chain_has_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5161, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.selected_drum_pad_has_listener()', 'description': 'selected_drum_pad_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_drum_pad&quot;. C++ signature :  bool selected_drum_pad_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'selected_drum_pad_has_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5190, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_drum_pads_scroll_position_listener()', 'description': 'add_drum_pads_scroll_position_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;drum_pads_scroll_position&quot; has changed. C++ signature :  void add_drum_pads_scroll_position_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_drum_pads_scroll_position_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5191, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5192, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_is_showing_chain_devices_listener()', 'description': 'add_is_showing_chain_devices_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_showing_chain_devices&quot; has changed. C++ signature :  void add_is_showing_chain_devices_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_is_showing_chain_devices_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5193, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_selected_chain_listener()', 'description': 'add_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_chain&quot; has changed. C++ signature :  void add_selected_chain_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5194, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.add_selected_drum_pad_listener()', 'description': 'add_selected_drum_pad_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_drum_pad&quot; has changed. C++ signature :  void add_selected_drum_pad_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'add_selected_drum_pad_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5197, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.drum_pads_scroll_position_has_listener()', 'description': 'drum_pads_scroll_position_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;drum_pads_scroll_position&quot;. C++ signature :  bool drum_pads_scroll_position_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'drum_pads_scroll_position_has_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5199, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5201, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.is_showing_chain_devices_has_listener()', 'description': 'is_showing_chain_devices_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_showing_chain_devices&quot;. C++ signature :  bool is_showing_chain_devices_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'is_showing_chain_devices_has_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5202, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_drum_pads_scroll_position_listener()', 'description': 'remove_drum_pads_scroll_position_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;drum_pads_scroll_position&quot;. C++ signature :  void remove_drum_pads_scroll_position_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_drum_pads_scroll_position_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5203, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5204, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_is_showing_chain_devices_listener()', 'description': 'remove_is_showing_chain_devices_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_showing_chain_devices&quot;. C++ signature :  void remove_is_showing_chain_devices_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_is_showing_chain_devices_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5205, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_selected_chain_listener()', 'description': 'remove_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_chain&quot;. C++ signature :  void remove_selected_chain_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5206, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.remove_selected_drum_pad_listener()', 'description': 'remove_selected_drum_pad_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_drum_pad&quot;. C++ signature :  void remove_selected_drum_pad_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'remove_selected_drum_pad_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5208, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.selected_chain_has_listener()', 'description': 'selected_chain_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_chain&quot;. C++ signature :  bool selected_chain_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'selected_chain_has_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5210, 'tag': 'listener Method', 'name': 'Live.RackDevice.RackDevice.View.selected_drum_pad_has_listener()', 'description': 'selected_drum_pad_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_drum_pad&quot;. C++ signature :  bool selected_drum_pad_has_listener(TRackDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'RackDevice', 'RackDevice', 'View', 'selected_drum_pad_has_listener()'], 'hierarchy': 4, 'ref_parent': 5038, 'children': [], 'group': 'listener Method'},
{'ref': 5213, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_beats_granulation_resolution_listener()', 'description': 'add_beats_granulation_resolution_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;beats_granulation_resolution&quot; has changed. C++ signature :  void add_beats_granulation_resolution_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_beats_granulation_resolution_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5214, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_beats_transient_envelope_listener()', 'description': 'add_beats_transient_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;beats_transient_envelope&quot; has changed. C++ signature :  void add_beats_transient_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_beats_transient_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5215, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_beats_transient_loop_mode_listener()', 'description': 'add_beats_transient_loop_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;beats_transient_loop_mode&quot; has changed. C++ signature :  void add_beats_transient_loop_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_beats_transient_loop_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5216, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_complex_pro_envelope_listener()', 'description': 'add_complex_pro_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;complex_pro_envelope&quot; has changed. C++ signature :  void add_complex_pro_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_complex_pro_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5217, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_complex_pro_formants_listener()', 'description': 'add_complex_pro_formants_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;complex_pro_formants&quot; has changed. C++ signature :  void add_complex_pro_formants_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_complex_pro_formants_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5218, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_end_marker_listener()', 'description': 'add_end_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;end_marker&quot; has changed. C++ signature :  void add_end_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5219, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_file_path_listener()', 'description': 'add_file_path_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;file_path&quot; has changed. C++ signature :  void add_file_path_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5220, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_gain_listener()', 'description': 'add_gain_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;gain&quot; has changed. C++ signature :  void add_gain_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_gain_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5221, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slices_listener()', 'description': 'add_slices_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slices&quot; has changed. C++ signature :  void add_slices_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slices_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5222, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_beat_division_listener()', 'description': 'add_slicing_beat_division_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_beat_division&quot; has changed. C++ signature :  void add_slicing_beat_division_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_beat_division_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5223, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_region_count_listener()', 'description': 'add_slicing_region_count_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_region_count&quot; has changed. C++ signature :  void add_slicing_region_count_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_region_count_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5224, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_sensitivity_listener()', 'description': 'add_slicing_sensitivity_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_sensitivity&quot; has changed. C++ signature :  void add_slicing_sensitivity_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_sensitivity_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5225, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_style_listener()', 'description': 'add_slicing_style_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_style&quot; has changed. C++ signature :  void add_slicing_style_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_style_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5226, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_start_marker_listener()', 'description': 'add_start_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;start_marker&quot; has changed. C++ signature :  void add_start_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5227, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_texture_flux_listener()', 'description': 'add_texture_flux_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;texture_flux&quot; has changed. C++ signature :  void add_texture_flux_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_texture_flux_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5228, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_texture_grain_size_listener()', 'description': 'add_texture_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;texture_grain_size&quot; has changed. C++ signature :  void add_texture_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_texture_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5229, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_tones_grain_size_listener()', 'description': 'add_tones_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tones_grain_size&quot; has changed. C++ signature :  void add_tones_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_tones_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5230, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_warp_markers_listener()', 'description': 'add_warp_markers_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_markers&quot; has changed. C++ signature :  void add_warp_markers_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5231, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_warp_mode_listener()', 'description': 'add_warp_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_mode&quot; has changed. C++ signature :  void add_warp_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5232, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_warping_listener()', 'description': 'add_warping_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warping&quot; has changed. C++ signature :  void add_warping_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_warping_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5234, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.beats_granulation_resolution_has_listener()', 'description': 'beats_granulation_resolution_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;beats_granulation_resolution&quot;. C++ signature :  bool beats_granulation_resolution_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'beats_granulation_resolution_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5235, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.beats_transient_envelope_has_listener()', 'description': 'beats_transient_envelope_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;beats_transient_envelope&quot;. C++ signature :  bool beats_transient_envelope_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'beats_transient_envelope_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5236, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.beats_transient_loop_mode_has_listener()', 'description': 'beats_transient_loop_mode_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;beats_transient_loop_mode&quot;. C++ signature :  bool beats_transient_loop_mode_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'beats_transient_loop_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5238, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.complex_pro_envelope_has_listener()', 'description': 'complex_pro_envelope_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;complex_pro_envelope&quot;. C++ signature :  bool complex_pro_envelope_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'complex_pro_envelope_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5239, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.complex_pro_formants_has_listener()', 'description': 'complex_pro_formants_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;complex_pro_formants&quot;. C++ signature :  bool complex_pro_formants_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'complex_pro_formants_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5240, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.end_marker_has_listener()', 'description': 'end_marker_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;end_marker&quot;. C++ signature :  bool end_marker_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'end_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5241, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.file_path_has_listener()', 'description': 'file_path_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;file_path&quot;. C++ signature :  bool file_path_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'file_path_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5243, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.gain_has_listener()', 'description': 'gain_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;gain&quot;. C++ signature :  bool gain_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'gain_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5246, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_beats_granulation_resolution_listener()', 'description': 'remove_beats_granulation_resolution_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;beats_granulation_resolution&quot;. C++ signature :  void remove_beats_granulation_resolution_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_beats_granulation_resolution_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5247, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_beats_transient_envelope_listener()', 'description': 'remove_beats_transient_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;beats_transient_envelope&quot;. C++ signature :  void remove_beats_transient_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_beats_transient_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5248, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_beats_transient_loop_mode_listener()', 'description': 'remove_beats_transient_loop_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;beats_transient_loop_mode&quot;. C++ signature :  void remove_beats_transient_loop_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_beats_transient_loop_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5249, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_complex_pro_envelope_listener()', 'description': 'remove_complex_pro_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;complex_pro_envelope&quot;. C++ signature :  void remove_complex_pro_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_complex_pro_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5250, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_complex_pro_formants_listener()', 'description': 'remove_complex_pro_formants_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;complex_pro_formants&quot;. C++ signature :  void remove_complex_pro_formants_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_complex_pro_formants_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5251, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_end_marker_listener()', 'description': 'remove_end_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;end_marker&quot;. C++ signature :  void remove_end_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5252, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_file_path_listener()', 'description': 'remove_file_path_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;file_path&quot;. C++ signature :  void remove_file_path_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5253, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_gain_listener()', 'description': 'remove_gain_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;gain&quot;. C++ signature :  void remove_gain_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_gain_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5255, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slices_listener()', 'description': 'remove_slices_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slices&quot;. C++ signature :  void remove_slices_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slices_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5256, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_beat_division_listener()', 'description': 'remove_slicing_beat_division_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_beat_division&quot;. C++ signature :  void remove_slicing_beat_division_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_beat_division_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5257, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_region_count_listener()', 'description': 'remove_slicing_region_count_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_region_count&quot;. C++ signature :  void remove_slicing_region_count_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_region_count_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5258, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_sensitivity_listener()', 'description': 'remove_slicing_sensitivity_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_sensitivity&quot;. C++ signature :  void remove_slicing_sensitivity_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_sensitivity_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5259, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_style_listener()', 'description': 'remove_slicing_style_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_style&quot;. C++ signature :  void remove_slicing_style_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_style_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5260, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_start_marker_listener()', 'description': 'remove_start_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;start_marker&quot;. C++ signature :  void remove_start_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5261, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_texture_flux_listener()', 'description': 'remove_texture_flux_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;texture_flux&quot;. C++ signature :  void remove_texture_flux_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_texture_flux_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5262, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_texture_grain_size_listener()', 'description': 'remove_texture_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;texture_grain_size&quot;. C++ signature :  void remove_texture_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_texture_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5263, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_tones_grain_size_listener()', 'description': 'remove_tones_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tones_grain_size&quot;. C++ signature :  void remove_tones_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_tones_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5264, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_warp_markers_listener()', 'description': 'remove_warp_markers_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_markers&quot;. C++ signature :  void remove_warp_markers_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5265, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_warp_mode_listener()', 'description': 'remove_warp_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_mode&quot;. C++ signature :  void remove_warp_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5266, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_warping_listener()', 'description': 'remove_warping_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warping&quot;. C++ signature :  void remove_warping_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_warping_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5269, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slices_has_listener()', 'description': 'slices_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slices&quot;. C++ signature :  bool slices_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slices_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5270, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_beat_division_has_listener()', 'description': 'slicing_beat_division_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_beat_division&quot;. C++ signature :  bool slicing_beat_division_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_beat_division_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5271, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_region_count_has_listener()', 'description': 'slicing_region_count_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_region_count&quot;. C++ signature :  bool slicing_region_count_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_region_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5272, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_sensitivity_has_listener()', 'description': 'slicing_sensitivity_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_sensitivity&quot;. C++ signature :  bool slicing_sensitivity_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_sensitivity_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5273, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_style_has_listener()', 'description': 'slicing_style_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_style&quot;. C++ signature :  bool slicing_style_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_style_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5274, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.start_marker_has_listener()', 'description': 'start_marker_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;start_marker&quot;. C++ signature :  bool start_marker_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'start_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5275, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.texture_flux_has_listener()', 'description': 'texture_flux_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;texture_flux&quot;. C++ signature :  bool texture_flux_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'texture_flux_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5276, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.texture_grain_size_has_listener()', 'description': 'texture_grain_size_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;texture_grain_size&quot;. C++ signature :  bool texture_grain_size_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'texture_grain_size_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5277, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.tones_grain_size_has_listener()', 'description': 'tones_grain_size_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tones_grain_size&quot;. C++ signature :  bool tones_grain_size_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'tones_grain_size_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5278, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.warp_markers_has_listener()', 'description': 'warp_markers_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_markers&quot;. C++ signature :  bool warp_markers_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'warp_markers_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5279, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.warp_mode_has_listener()', 'description': 'warp_mode_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_mode&quot;. C++ signature :  bool warp_mode_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'warp_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5280, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.warping_has_listener()', 'description': 'warping_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warping&quot;. C++ signature :  bool warping_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'warping_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5309, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_beats_granulation_resolution_listener()', 'description': 'add_beats_granulation_resolution_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;beats_granulation_resolution&quot; has changed. C++ signature :  void add_beats_granulation_resolution_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_beats_granulation_resolution_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5310, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_beats_transient_envelope_listener()', 'description': 'add_beats_transient_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;beats_transient_envelope&quot; has changed. C++ signature :  void add_beats_transient_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_beats_transient_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5311, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_beats_transient_loop_mode_listener()', 'description': 'add_beats_transient_loop_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;beats_transient_loop_mode&quot; has changed. C++ signature :  void add_beats_transient_loop_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_beats_transient_loop_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5312, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_complex_pro_envelope_listener()', 'description': 'add_complex_pro_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;complex_pro_envelope&quot; has changed. C++ signature :  void add_complex_pro_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_complex_pro_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5313, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_complex_pro_formants_listener()', 'description': 'add_complex_pro_formants_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;complex_pro_formants&quot; has changed. C++ signature :  void add_complex_pro_formants_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_complex_pro_formants_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5314, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_end_marker_listener()', 'description': 'add_end_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;end_marker&quot; has changed. C++ signature :  void add_end_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5315, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_file_path_listener()', 'description': 'add_file_path_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;file_path&quot; has changed. C++ signature :  void add_file_path_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5316, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_gain_listener()', 'description': 'add_gain_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;gain&quot; has changed. C++ signature :  void add_gain_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_gain_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5317, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slices_listener()', 'description': 'add_slices_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slices&quot; has changed. C++ signature :  void add_slices_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slices_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5318, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_beat_division_listener()', 'description': 'add_slicing_beat_division_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_beat_division&quot; has changed. C++ signature :  void add_slicing_beat_division_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_beat_division_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5319, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_region_count_listener()', 'description': 'add_slicing_region_count_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_region_count&quot; has changed. C++ signature :  void add_slicing_region_count_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_region_count_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5320, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_sensitivity_listener()', 'description': 'add_slicing_sensitivity_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_sensitivity&quot; has changed. C++ signature :  void add_slicing_sensitivity_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_sensitivity_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5321, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_slicing_style_listener()', 'description': 'add_slicing_style_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_style&quot; has changed. C++ signature :  void add_slicing_style_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_slicing_style_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5322, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_start_marker_listener()', 'description': 'add_start_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;start_marker&quot; has changed. C++ signature :  void add_start_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5323, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_texture_flux_listener()', 'description': 'add_texture_flux_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;texture_flux&quot; has changed. C++ signature :  void add_texture_flux_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_texture_flux_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5324, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_texture_grain_size_listener()', 'description': 'add_texture_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;texture_grain_size&quot; has changed. C++ signature :  void add_texture_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_texture_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5325, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_tones_grain_size_listener()', 'description': 'add_tones_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tones_grain_size&quot; has changed. C++ signature :  void add_tones_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_tones_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5326, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_warp_markers_listener()', 'description': 'add_warp_markers_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_markers&quot; has changed. C++ signature :  void add_warp_markers_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5327, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_warp_mode_listener()', 'description': 'add_warp_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warp_mode&quot; has changed. C++ signature :  void add_warp_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5328, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.add_warping_listener()', 'description': 'add_warping_listener( (Sample)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;warping&quot; has changed. C++ signature :  void add_warping_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'add_warping_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5331, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.beats_granulation_resolution_has_listener()', 'description': 'beats_granulation_resolution_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;beats_granulation_resolution&quot;. C++ signature :  bool beats_granulation_resolution_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'beats_granulation_resolution_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5333, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.beats_transient_envelope_has_listener()', 'description': 'beats_transient_envelope_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;beats_transient_envelope&quot;. C++ signature :  bool beats_transient_envelope_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'beats_transient_envelope_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5335, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.beats_transient_loop_mode_has_listener()', 'description': 'beats_transient_loop_mode_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;beats_transient_loop_mode&quot;. C++ signature :  bool beats_transient_loop_mode_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'beats_transient_loop_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5339, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.complex_pro_envelope_has_listener()', 'description': 'complex_pro_envelope_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;complex_pro_envelope&quot;. C++ signature :  bool complex_pro_envelope_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'complex_pro_envelope_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5341, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.complex_pro_formants_has_listener()', 'description': 'complex_pro_formants_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;complex_pro_formants&quot;. C++ signature :  bool complex_pro_formants_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'complex_pro_formants_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5343, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.end_marker_has_listener()', 'description': 'end_marker_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;end_marker&quot;. C++ signature :  bool end_marker_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'end_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5345, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.file_path_has_listener()', 'description': 'file_path_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;file_path&quot;. C++ signature :  bool file_path_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'file_path_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5348, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.gain_has_listener()', 'description': 'gain_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;gain&quot;. C++ signature :  bool gain_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'gain_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5352, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_beats_granulation_resolution_listener()', 'description': 'remove_beats_granulation_resolution_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;beats_granulation_resolution&quot;. C++ signature :  void remove_beats_granulation_resolution_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_beats_granulation_resolution_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5353, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_beats_transient_envelope_listener()', 'description': 'remove_beats_transient_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;beats_transient_envelope&quot;. C++ signature :  void remove_beats_transient_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_beats_transient_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5354, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_beats_transient_loop_mode_listener()', 'description': 'remove_beats_transient_loop_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;beats_transient_loop_mode&quot;. C++ signature :  void remove_beats_transient_loop_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_beats_transient_loop_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5355, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_complex_pro_envelope_listener()', 'description': 'remove_complex_pro_envelope_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;complex_pro_envelope&quot;. C++ signature :  void remove_complex_pro_envelope_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_complex_pro_envelope_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5356, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_complex_pro_formants_listener()', 'description': 'remove_complex_pro_formants_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;complex_pro_formants&quot;. C++ signature :  void remove_complex_pro_formants_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_complex_pro_formants_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5357, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_end_marker_listener()', 'description': 'remove_end_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;end_marker&quot;. C++ signature :  void remove_end_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_end_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5358, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_file_path_listener()', 'description': 'remove_file_path_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;file_path&quot;. C++ signature :  void remove_file_path_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_file_path_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5359, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_gain_listener()', 'description': 'remove_gain_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;gain&quot;. C++ signature :  void remove_gain_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_gain_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5361, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slices_listener()', 'description': 'remove_slices_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slices&quot;. C++ signature :  void remove_slices_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slices_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5362, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_beat_division_listener()', 'description': 'remove_slicing_beat_division_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_beat_division&quot;. C++ signature :  void remove_slicing_beat_division_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_beat_division_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5363, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_region_count_listener()', 'description': 'remove_slicing_region_count_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_region_count&quot;. C++ signature :  void remove_slicing_region_count_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_region_count_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5364, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_sensitivity_listener()', 'description': 'remove_slicing_sensitivity_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_sensitivity&quot;. C++ signature :  void remove_slicing_sensitivity_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_sensitivity_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5365, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_slicing_style_listener()', 'description': 'remove_slicing_style_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_style&quot;. C++ signature :  void remove_slicing_style_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_slicing_style_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5366, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_start_marker_listener()', 'description': 'remove_start_marker_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;start_marker&quot;. C++ signature :  void remove_start_marker_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_start_marker_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5367, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_texture_flux_listener()', 'description': 'remove_texture_flux_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;texture_flux&quot;. C++ signature :  void remove_texture_flux_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_texture_flux_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5368, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_texture_grain_size_listener()', 'description': 'remove_texture_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;texture_grain_size&quot;. C++ signature :  void remove_texture_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_texture_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5369, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_tones_grain_size_listener()', 'description': 'remove_tones_grain_size_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tones_grain_size&quot;. C++ signature :  void remove_tones_grain_size_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_tones_grain_size_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5370, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_warp_markers_listener()', 'description': 'remove_warp_markers_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_markers&quot;. C++ signature :  void remove_warp_markers_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_warp_markers_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5371, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_warp_mode_listener()', 'description': 'remove_warp_mode_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warp_mode&quot;. C++ signature :  void remove_warp_mode_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_warp_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5372, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.remove_warping_listener()', 'description': 'remove_warping_listener( (Sample)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;warping&quot;. C++ signature :  void remove_warping_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'remove_warping_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5377, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slices_has_listener()', 'description': 'slices_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slices&quot;. C++ signature :  bool slices_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slices_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5379, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_beat_division_has_listener()', 'description': 'slicing_beat_division_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_beat_division&quot;. C++ signature :  bool slicing_beat_division_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_beat_division_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5381, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_region_count_has_listener()', 'description': 'slicing_region_count_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_region_count&quot;. C++ signature :  bool slicing_region_count_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_region_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5383, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_sensitivity_has_listener()', 'description': 'slicing_sensitivity_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_sensitivity&quot;. C++ signature :  bool slicing_sensitivity_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_sensitivity_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5385, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.slicing_style_has_listener()', 'description': 'slicing_style_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_style&quot;. C++ signature :  bool slicing_style_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'slicing_style_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5387, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.start_marker_has_listener()', 'description': 'start_marker_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;start_marker&quot;. C++ signature :  bool start_marker_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'start_marker_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5389, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.texture_flux_has_listener()', 'description': 'texture_flux_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;texture_flux&quot;. C++ signature :  bool texture_flux_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'texture_flux_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5391, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.texture_grain_size_has_listener()', 'description': 'texture_grain_size_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;texture_grain_size&quot;. C++ signature :  bool texture_grain_size_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'texture_grain_size_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5393, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.tones_grain_size_has_listener()', 'description': 'tones_grain_size_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tones_grain_size&quot;. C++ signature :  bool tones_grain_size_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'tones_grain_size_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5395, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.warp_markers_has_listener()', 'description': 'warp_markers_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_markers&quot;. C++ signature :  bool warp_markers_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'warp_markers_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5397, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.warp_mode_has_listener()', 'description': 'warp_mode_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warp_mode&quot;. C++ signature :  bool warp_mode_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'warp_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5399, 'tag': 'listener Method', 'name': 'Live.Sample.Sample.warping_has_listener()', 'description': 'warping_has_listener( (Sample)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;warping&quot;. C++ signature :  bool warping_has_listener(TPyHandle&lt;AMultiSamplePart&gt;,boost::python::api::object)', 'path': ['Live', 'Sample', 'Sample', 'warping_has_listener()'], 'hierarchy': 3, 'ref_parent': 5212, 'children': [], 'group': 'listener Method'},
{'ref': 5651, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_clip_slots_listener()', 'description': 'add_clip_slots_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;clip_slots&quot; has changed. C++ signature :  void add_clip_slots_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5652, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_color_index_listener()', 'description': 'add_color_index_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5653, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_color_listener()', 'description': 'add_color_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5654, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_is_triggered_listener()', 'description': 'add_is_triggered_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_triggered&quot; has changed. C++ signature :  void add_is_triggered_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5655, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_name_listener()', 'description': 'add_name_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5656, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_tempo_enabled_listener()', 'description': 'add_tempo_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo_enabled&quot; has changed. C++ signature :  void add_tempo_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_tempo_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5657, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_tempo_listener()', 'description': 'add_tempo_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo&quot; has changed. C++ signature :  void add_tempo_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5658, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_time_signature_denominator_listener()', 'description': 'add_time_signature_denominator_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time_signature_denominator&quot; has changed. C++ signature :  void add_time_signature_denominator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_time_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5659, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_time_signature_enabled_listener()', 'description': 'add_time_signature_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time_signature_enabled&quot; has changed. C++ signature :  void add_time_signature_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_time_signature_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5660, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_time_signature_numerator_listener()', 'description': 'add_time_signature_numerator_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time_signature_numerator&quot; has changed. C++ signature :  void add_time_signature_numerator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_time_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5661, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.clip_slots_has_listener()', 'description': 'clip_slots_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;clip_slots&quot;. C++ signature :  bool clip_slots_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'clip_slots_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5662, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.color_has_listener()', 'description': 'color_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5663, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.color_index_has_listener()', 'description': 'color_index_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5666, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.is_triggered_has_listener()', 'description': 'is_triggered_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_triggered&quot;. C++ signature :  bool is_triggered_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'is_triggered_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5667, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.name_has_listener()', 'description': 'name_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5668, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_clip_slots_listener()', 'description': 'remove_clip_slots_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;clip_slots&quot;. C++ signature :  void remove_clip_slots_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5669, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5670, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_color_listener()', 'description': 'remove_color_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5671, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_is_triggered_listener()', 'description': 'remove_is_triggered_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_triggered&quot;. C++ signature :  void remove_is_triggered_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5672, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_name_listener()', 'description': 'remove_name_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5673, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_tempo_enabled_listener()', 'description': 'remove_tempo_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo_enabled&quot;. C++ signature :  void remove_tempo_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_tempo_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5674, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_tempo_listener()', 'description': 'remove_tempo_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo&quot;. C++ signature :  void remove_tempo_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5675, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_time_signature_denominator_listener()', 'description': 'remove_time_signature_denominator_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time_signature_denominator&quot;. C++ signature :  void remove_time_signature_denominator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_time_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5676, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_time_signature_enabled_listener()', 'description': 'remove_time_signature_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time_signature_enabled&quot;. C++ signature :  void remove_time_signature_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_time_signature_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5677, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_time_signature_numerator_listener()', 'description': 'remove_time_signature_numerator_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time_signature_numerator&quot;. C++ signature :  void remove_time_signature_numerator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_time_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5679, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.tempo_enabled_has_listener()', 'description': 'tempo_enabled_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo_enabled&quot;. C++ signature :  bool tempo_enabled_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'tempo_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5680, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.tempo_has_listener()', 'description': 'tempo_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo&quot;. C++ signature :  bool tempo_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'tempo_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5681, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.time_signature_denominator_has_listener()', 'description': 'time_signature_denominator_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time_signature_denominator&quot;. C++ signature :  bool time_signature_denominator_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'time_signature_denominator_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5682, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.time_signature_enabled_has_listener()', 'description': 'time_signature_enabled_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time_signature_enabled&quot;. C++ signature :  bool time_signature_enabled_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'time_signature_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5683, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.time_signature_numerator_has_listener()', 'description': 'time_signature_numerator_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time_signature_numerator&quot;. C++ signature :  bool time_signature_numerator_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'time_signature_numerator_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5712, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_clip_slots_listener()', 'description': 'add_clip_slots_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;clip_slots&quot; has changed. C++ signature :  void add_clip_slots_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5713, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_color_index_listener()', 'description': 'add_color_index_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5714, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_color_listener()', 'description': 'add_color_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5715, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_is_triggered_listener()', 'description': 'add_is_triggered_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_triggered&quot; has changed. C++ signature :  void add_is_triggered_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5716, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_name_listener()', 'description': 'add_name_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5717, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_tempo_enabled_listener()', 'description': 'add_tempo_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo_enabled&quot; has changed. C++ signature :  void add_tempo_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_tempo_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5718, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_tempo_listener()', 'description': 'add_tempo_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo&quot; has changed. C++ signature :  void add_tempo_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5719, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_time_signature_denominator_listener()', 'description': 'add_time_signature_denominator_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time_signature_denominator&quot; has changed. C++ signature :  void add_time_signature_denominator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_time_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5720, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_time_signature_enabled_listener()', 'description': 'add_time_signature_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time_signature_enabled&quot; has changed. C++ signature :  void add_time_signature_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_time_signature_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5721, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.add_time_signature_numerator_listener()', 'description': 'add_time_signature_numerator_listener( (Scene)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time_signature_numerator&quot; has changed. C++ signature :  void add_time_signature_numerator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'add_time_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5724, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.clip_slots_has_listener()', 'description': 'clip_slots_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;clip_slots&quot;. C++ signature :  bool clip_slots_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'clip_slots_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5726, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.color_has_listener()', 'description': 'color_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5728, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.color_index_has_listener()', 'description': 'color_index_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5733, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.is_triggered_has_listener()', 'description': 'is_triggered_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_triggered&quot;. C++ signature :  bool is_triggered_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'is_triggered_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5735, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.name_has_listener()', 'description': 'name_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5736, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_clip_slots_listener()', 'description': 'remove_clip_slots_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;clip_slots&quot;. C++ signature :  void remove_clip_slots_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5737, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5738, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_color_listener()', 'description': 'remove_color_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5739, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_is_triggered_listener()', 'description': 'remove_is_triggered_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_triggered&quot;. C++ signature :  void remove_is_triggered_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_is_triggered_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5740, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_name_listener()', 'description': 'remove_name_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5741, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_tempo_enabled_listener()', 'description': 'remove_tempo_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo_enabled&quot;. C++ signature :  void remove_tempo_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_tempo_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5742, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_tempo_listener()', 'description': 'remove_tempo_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo&quot;. C++ signature :  void remove_tempo_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5743, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_time_signature_denominator_listener()', 'description': 'remove_time_signature_denominator_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time_signature_denominator&quot;. C++ signature :  void remove_time_signature_denominator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_time_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5744, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_time_signature_enabled_listener()', 'description': 'remove_time_signature_enabled_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time_signature_enabled&quot;. C++ signature :  void remove_time_signature_enabled_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_time_signature_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5745, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.remove_time_signature_numerator_listener()', 'description': 'remove_time_signature_numerator_listener( (Scene)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time_signature_numerator&quot;. C++ signature :  void remove_time_signature_numerator_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'remove_time_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5749, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.tempo_enabled_has_listener()', 'description': 'tempo_enabled_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo_enabled&quot;. C++ signature :  bool tempo_enabled_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'tempo_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5750, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.tempo_has_listener()', 'description': 'tempo_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo&quot;. C++ signature :  bool tempo_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'tempo_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5752, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.time_signature_denominator_has_listener()', 'description': 'time_signature_denominator_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time_signature_denominator&quot;. C++ signature :  bool time_signature_denominator_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'time_signature_denominator_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5754, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.time_signature_enabled_has_listener()', 'description': 'time_signature_enabled_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time_signature_enabled&quot;. C++ signature :  bool time_signature_enabled_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'time_signature_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5756, 'tag': 'listener Method', 'name': 'Live.Scene.Scene.time_signature_numerator_has_listener()', 'description': 'time_signature_numerator_has_listener( (Scene)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time_signature_numerator&quot;. C++ signature :  bool time_signature_numerator_has_listener(TPyHandle&lt;AScene&gt;,boost::python::api::object)', 'path': ['Live', 'Scene', 'Scene', 'time_signature_numerator_has_listener()'], 'hierarchy': 3, 'ref_parent': 5650, 'children': [], 'group': 'listener Method'},
{'ref': 5759, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5760, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5761, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5762, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5763, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5764, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_pitch_bend_range_listener()', 'description': 'add_pitch_bend_range_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_bend_range&quot; has changed. C++ signature :  void add_pitch_bend_range_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5765, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_pitch_mode_index_listener()', 'description': 'add_pitch_mode_index_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_mode_index&quot; has changed. C++ signature :  void add_pitch_mode_index_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_pitch_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5766, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5767, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5768, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5769, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5770, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5771, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.pitch_bend_range_has_listener()', 'description': 'pitch_bend_range_has_listener( (ShifterDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_bend_range&quot;. C++ signature :  bool pitch_bend_range_has_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5772, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.pitch_mode_index_has_listener()', 'description': 'pitch_mode_index_has_listener( (ShifterDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_mode_index&quot;. C++ signature :  bool pitch_mode_index_has_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'pitch_mode_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5773, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5774, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5775, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5776, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5777, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5778, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_pitch_bend_range_listener()', 'description': 'remove_pitch_bend_range_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_bend_range&quot;. C++ signature :  void remove_pitch_bend_range_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5779, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_pitch_mode_index_listener()', 'description': 'remove_pitch_mode_index_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_mode_index&quot;. C++ signature :  void remove_pitch_mode_index_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_pitch_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5810, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5811, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5812, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5813, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5814, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5815, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_pitch_bend_range_listener()', 'description': 'add_pitch_bend_range_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_bend_range&quot; has changed. C++ signature :  void add_pitch_bend_range_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5816, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.add_pitch_mode_index_listener()', 'description': 'add_pitch_mode_index_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_mode_index&quot; has changed. C++ signature :  void add_pitch_mode_index_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'add_pitch_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5823, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5825, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5827, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5829, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5831, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5833, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.pitch_bend_range_has_listener()', 'description': 'pitch_bend_range_has_listener( (ShifterDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_bend_range&quot;. C++ signature :  bool pitch_bend_range_has_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5835, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.pitch_mode_index_has_listener()', 'description': 'pitch_mode_index_has_listener( (ShifterDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_mode_index&quot;. C++ signature :  bool pitch_mode_index_has_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'pitch_mode_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5837, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5838, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5839, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5840, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5841, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5842, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_pitch_bend_range_listener()', 'description': 'remove_pitch_bend_range_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_bend_range&quot;. C++ signature :  void remove_pitch_bend_range_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5843, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.remove_pitch_mode_index_listener()', 'description': 'remove_pitch_mode_index_listener( (ShifterDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_mode_index&quot;. C++ signature :  void remove_pitch_mode_index_listener(TShifterDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'remove_pitch_mode_index_listener()'], 'hierarchy': 3, 'ref_parent': 5758, 'children': [], 'group': 'listener Method'},
{'ref': 5848, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5781, 'children': [], 'group': 'listener Method'},
{'ref': 5849, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 5781, 'children': [], 'group': 'listener Method'},
{'ref': 5850, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5781, 'children': [], 'group': 'listener Method'},
{'ref': 5879, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5781, 'children': [], 'group': 'listener Method'},
{'ref': 5882, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 5781, 'children': [], 'group': 'listener Method'},
{'ref': 5883, 'tag': 'listener Method', 'name': 'Live.ShifterDevice.ShifterDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'ShifterDevice', 'ShifterDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 5781, 'children': [], 'group': 'listener Method'},
{'ref': 5967, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_can_warp_as_listener()', 'description': 'add_can_warp_as_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_warp_as&quot; has changed. C++ signature :  void add_can_warp_as_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_can_warp_as_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5968, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_can_warp_double_listener()', 'description': 'add_can_warp_double_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_warp_double&quot; has changed. C++ signature :  void add_can_warp_double_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_can_warp_double_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5969, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_can_warp_half_listener()', 'description': 'add_can_warp_half_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_warp_half&quot; has changed. C++ signature :  void add_can_warp_half_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_can_warp_half_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5970, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5971, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5972, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5973, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_multi_sample_mode_listener()', 'description': 'add_multi_sample_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;multi_sample_mode&quot; has changed. C++ signature :  void add_multi_sample_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_multi_sample_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5974, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5975, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_pad_slicing_listener()', 'description': 'add_pad_slicing_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pad_slicing&quot; has changed. C++ signature :  void add_pad_slicing_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_pad_slicing_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5976, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5977, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_playback_mode_listener()', 'description': 'add_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playback_mode&quot; has changed. C++ signature :  void add_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5978, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_playing_position_enabled_listener()', 'description': 'add_playing_position_enabled_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_position_enabled&quot; has changed. C++ signature :  void add_playing_position_enabled_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_playing_position_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5979, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_playing_position_listener()', 'description': 'add_playing_position_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_position&quot; has changed. C++ signature :  void add_playing_position_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5980, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_retrigger_listener()', 'description': 'add_retrigger_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;retrigger&quot; has changed. C++ signature :  void add_retrigger_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_retrigger_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5981, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_sample_listener()', 'description': 'add_sample_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample&quot; has changed. C++ signature :  void add_sample_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_sample_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5982, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_slicing_playback_mode_listener()', 'description': 'add_slicing_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_playback_mode&quot; has changed. C++ signature :  void add_slicing_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_slicing_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5983, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_voices_listener()', 'description': 'add_voices_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;voices&quot; has changed. C++ signature :  void add_voices_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_voices_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5984, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.can_warp_as_has_listener()', 'description': 'can_warp_as_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_warp_as&quot;. C++ signature :  bool can_warp_as_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'can_warp_as_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5985, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.can_warp_double_has_listener()', 'description': 'can_warp_double_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_warp_double&quot;. C++ signature :  bool can_warp_double_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'can_warp_double_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5986, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.can_warp_half_has_listener()', 'description': 'can_warp_half_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_warp_half&quot;. C++ signature :  bool can_warp_half_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'can_warp_half_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5989, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5990, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5991, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5992, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.multi_sample_mode_has_listener()', 'description': 'multi_sample_mode_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;multi_sample_mode&quot;. C++ signature :  bool multi_sample_mode_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'multi_sample_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5993, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5994, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.pad_slicing_has_listener()', 'description': 'pad_slicing_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pad_slicing&quot;. C++ signature :  bool pad_slicing_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'pad_slicing_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5995, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5996, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.playback_mode_has_listener()', 'description': 'playback_mode_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playback_mode&quot;. C++ signature :  bool playback_mode_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'playback_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5997, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.playing_position_enabled_has_listener()', 'description': 'playing_position_enabled_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_position_enabled&quot;. C++ signature :  bool playing_position_enabled_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'playing_position_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5998, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.playing_position_has_listener()', 'description': 'playing_position_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_position&quot;. C++ signature :  bool playing_position_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'playing_position_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 5999, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_can_warp_as_listener()', 'description': 'remove_can_warp_as_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_warp_as&quot;. C++ signature :  void remove_can_warp_as_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_can_warp_as_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6000, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_can_warp_double_listener()', 'description': 'remove_can_warp_double_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_warp_double&quot;. C++ signature :  void remove_can_warp_double_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_can_warp_double_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6001, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_can_warp_half_listener()', 'description': 'remove_can_warp_half_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_warp_half&quot;. C++ signature :  void remove_can_warp_half_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_can_warp_half_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6002, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6003, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6004, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6005, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_multi_sample_mode_listener()', 'description': 'remove_multi_sample_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;multi_sample_mode&quot;. C++ signature :  void remove_multi_sample_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_multi_sample_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6006, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6007, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_pad_slicing_listener()', 'description': 'remove_pad_slicing_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pad_slicing&quot;. C++ signature :  void remove_pad_slicing_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_pad_slicing_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6008, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6009, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_playback_mode_listener()', 'description': 'remove_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playback_mode&quot;. C++ signature :  void remove_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6010, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_playing_position_enabled_listener()', 'description': 'remove_playing_position_enabled_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_position_enabled&quot;. C++ signature :  void remove_playing_position_enabled_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_playing_position_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6011, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_playing_position_listener()', 'description': 'remove_playing_position_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_position&quot;. C++ signature :  void remove_playing_position_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6012, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_retrigger_listener()', 'description': 'remove_retrigger_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;retrigger&quot;. C++ signature :  void remove_retrigger_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_retrigger_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6013, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_sample_listener()', 'description': 'remove_sample_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample&quot;. C++ signature :  void remove_sample_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_sample_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6014, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_slicing_playback_mode_listener()', 'description': 'remove_slicing_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_playback_mode&quot;. C++ signature :  void remove_slicing_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_slicing_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6015, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_voices_listener()', 'description': 'remove_voices_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;voices&quot;. C++ signature :  void remove_voices_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_voices_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6016, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.retrigger_has_listener()', 'description': 'retrigger_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;retrigger&quot;. C++ signature :  bool retrigger_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'retrigger_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6018, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.sample_has_listener()', 'description': 'sample_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample&quot;. C++ signature :  bool sample_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'sample_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6019, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.slicing_playback_mode_has_listener()', 'description': 'slicing_playback_mode_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_playback_mode&quot;. C++ signature :  bool slicing_playback_mode_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'slicing_playback_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6021, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.voices_has_listener()', 'description': 'voices_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;voices&quot;. C++ signature :  bool voices_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'voices_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6054, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_can_warp_as_listener()', 'description': 'add_can_warp_as_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_warp_as&quot; has changed. C++ signature :  void add_can_warp_as_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_can_warp_as_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6055, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_can_warp_double_listener()', 'description': 'add_can_warp_double_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_warp_double&quot; has changed. C++ signature :  void add_can_warp_double_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_can_warp_double_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6056, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_can_warp_half_listener()', 'description': 'add_can_warp_half_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_warp_half&quot; has changed. C++ signature :  void add_can_warp_half_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_can_warp_half_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6057, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6058, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6059, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6060, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_multi_sample_mode_listener()', 'description': 'add_multi_sample_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;multi_sample_mode&quot; has changed. C++ signature :  void add_multi_sample_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_multi_sample_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6061, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6062, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_pad_slicing_listener()', 'description': 'add_pad_slicing_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pad_slicing&quot; has changed. C++ signature :  void add_pad_slicing_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_pad_slicing_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6063, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6064, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_playback_mode_listener()', 'description': 'add_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playback_mode&quot; has changed. C++ signature :  void add_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6065, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_playing_position_enabled_listener()', 'description': 'add_playing_position_enabled_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_position_enabled&quot; has changed. C++ signature :  void add_playing_position_enabled_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_playing_position_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6066, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_playing_position_listener()', 'description': 'add_playing_position_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_position&quot; has changed. C++ signature :  void add_playing_position_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6067, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_retrigger_listener()', 'description': 'add_retrigger_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;retrigger&quot; has changed. C++ signature :  void add_retrigger_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_retrigger_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6068, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_sample_listener()', 'description': 'add_sample_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample&quot; has changed. C++ signature :  void add_sample_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_sample_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6069, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_slicing_playback_mode_listener()', 'description': 'add_slicing_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;slicing_playback_mode&quot; has changed. C++ signature :  void add_slicing_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_slicing_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6070, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.add_voices_listener()', 'description': 'add_voices_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;voices&quot; has changed. C++ signature :  void add_voices_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'add_voices_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6074, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.can_warp_as_has_listener()', 'description': 'can_warp_as_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_warp_as&quot;. C++ signature :  bool can_warp_as_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'can_warp_as_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6076, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.can_warp_double_has_listener()', 'description': 'can_warp_double_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_warp_double&quot;. C++ signature :  bool can_warp_double_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'can_warp_double_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6078, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.can_warp_half_has_listener()', 'description': 'can_warp_half_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_warp_half&quot;. C++ signature :  bool can_warp_half_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'can_warp_half_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6085, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6087, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6089, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6091, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.multi_sample_mode_has_listener()', 'description': 'multi_sample_mode_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;multi_sample_mode&quot;. C++ signature :  bool multi_sample_mode_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'multi_sample_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6093, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6095, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.pad_slicing_has_listener()', 'description': 'pad_slicing_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pad_slicing&quot;. C++ signature :  bool pad_slicing_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'pad_slicing_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6097, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6099, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.playback_mode_has_listener()', 'description': 'playback_mode_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playback_mode&quot;. C++ signature :  bool playback_mode_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'playback_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6102, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.playing_position_enabled_has_listener()', 'description': 'playing_position_enabled_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_position_enabled&quot;. C++ signature :  bool playing_position_enabled_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'playing_position_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6103, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.playing_position_has_listener()', 'description': 'playing_position_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_position&quot;. C++ signature :  bool playing_position_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'playing_position_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6104, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_can_warp_as_listener()', 'description': 'remove_can_warp_as_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_warp_as&quot;. C++ signature :  void remove_can_warp_as_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_can_warp_as_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6105, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_can_warp_double_listener()', 'description': 'remove_can_warp_double_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_warp_double&quot;. C++ signature :  void remove_can_warp_double_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_can_warp_double_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6106, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_can_warp_half_listener()', 'description': 'remove_can_warp_half_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_warp_half&quot;. C++ signature :  void remove_can_warp_half_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_can_warp_half_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6107, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6108, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6109, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6110, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_multi_sample_mode_listener()', 'description': 'remove_multi_sample_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;multi_sample_mode&quot;. C++ signature :  void remove_multi_sample_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_multi_sample_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6111, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6112, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_pad_slicing_listener()', 'description': 'remove_pad_slicing_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pad_slicing&quot;. C++ signature :  void remove_pad_slicing_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_pad_slicing_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6113, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6114, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_playback_mode_listener()', 'description': 'remove_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playback_mode&quot;. C++ signature :  void remove_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6115, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_playing_position_enabled_listener()', 'description': 'remove_playing_position_enabled_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_position_enabled&quot;. C++ signature :  void remove_playing_position_enabled_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_playing_position_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6116, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_playing_position_listener()', 'description': 'remove_playing_position_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_position&quot;. C++ signature :  void remove_playing_position_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_playing_position_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6117, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_retrigger_listener()', 'description': 'remove_retrigger_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;retrigger&quot;. C++ signature :  void remove_retrigger_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_retrigger_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6118, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_sample_listener()', 'description': 'remove_sample_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample&quot;. C++ signature :  void remove_sample_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_sample_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6119, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_slicing_playback_mode_listener()', 'description': 'remove_slicing_playback_mode_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;slicing_playback_mode&quot;. C++ signature :  void remove_slicing_playback_mode_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_slicing_playback_mode_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6120, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.remove_voices_listener()', 'description': 'remove_voices_listener( (SimplerDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;voices&quot;. C++ signature :  void remove_voices_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'remove_voices_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6122, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.retrigger_has_listener()', 'description': 'retrigger_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;retrigger&quot;. C++ signature :  bool retrigger_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'retrigger_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6125, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.sample_has_listener()', 'description': 'sample_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample&quot;. C++ signature :  bool sample_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'sample_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6127, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.slicing_playback_mode_has_listener()', 'description': 'slicing_playback_mode_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;slicing_playback_mode&quot;. C++ signature :  bool slicing_playback_mode_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'slicing_playback_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6132, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.voices_has_listener()', 'description': 'voices_has_listener( (SimplerDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;voices&quot;. C++ signature :  bool voices_has_listener(TSimplerDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'voices_has_listener()'], 'hierarchy': 3, 'ref_parent': 5966, 'children': [], 'group': 'listener Method'},
{'ref': 6137, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6138, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_end_listener()', 'description': 'add_sample_end_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_end&quot; has changed. C++ signature :  void add_sample_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_end_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6139, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_env_fade_in_listener()', 'description': 'add_sample_env_fade_in_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_env_fade_in&quot; has changed. C++ signature :  void add_sample_env_fade_in_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_env_fade_in_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6140, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_env_fade_out_listener()', 'description': 'add_sample_env_fade_out_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_env_fade_out&quot; has changed. C++ signature :  void add_sample_env_fade_out_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_env_fade_out_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6141, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_loop_end_listener()', 'description': 'add_sample_loop_end_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_loop_end&quot; has changed. C++ signature :  void add_sample_loop_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_loop_end_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6142, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_loop_fade_listener()', 'description': 'add_sample_loop_fade_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_loop_fade&quot; has changed. C++ signature :  void add_sample_loop_fade_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_loop_fade_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6143, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_loop_start_listener()', 'description': 'add_sample_loop_start_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_loop_start&quot; has changed. C++ signature :  void add_sample_loop_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_loop_start_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6144, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_start_listener()', 'description': 'add_sample_start_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_start&quot; has changed. C++ signature :  void add_sample_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_start_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6145, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_selected_slice_listener()', 'description': 'add_selected_slice_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_slice&quot; has changed. C++ signature :  void add_selected_slice_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_selected_slice_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6146, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6147, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6148, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_end_listener()', 'description': 'remove_sample_end_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_end&quot;. C++ signature :  void remove_sample_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_end_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6149, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_env_fade_in_listener()', 'description': 'remove_sample_env_fade_in_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_env_fade_in&quot;. C++ signature :  void remove_sample_env_fade_in_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_env_fade_in_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6150, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_env_fade_out_listener()', 'description': 'remove_sample_env_fade_out_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_env_fade_out&quot;. C++ signature :  void remove_sample_env_fade_out_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_env_fade_out_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6151, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_loop_end_listener()', 'description': 'remove_sample_loop_end_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_loop_end&quot;. C++ signature :  void remove_sample_loop_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_loop_end_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6152, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_loop_fade_listener()', 'description': 'remove_sample_loop_fade_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_loop_fade&quot;. C++ signature :  void remove_sample_loop_fade_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_loop_fade_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6153, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_loop_start_listener()', 'description': 'remove_sample_loop_start_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_loop_start&quot;. C++ signature :  void remove_sample_loop_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_loop_start_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6154, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_start_listener()', 'description': 'remove_sample_start_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_start&quot;. C++ signature :  void remove_sample_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_start_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6155, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_selected_slice_listener()', 'description': 'remove_selected_slice_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_slice&quot;. C++ signature :  void remove_selected_slice_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_selected_slice_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6156, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_end_has_listener()', 'description': 'sample_end_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_end&quot;. C++ signature :  bool sample_end_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_end_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6157, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_env_fade_in_has_listener()', 'description': 'sample_env_fade_in_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_env_fade_in&quot;. C++ signature :  bool sample_env_fade_in_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_env_fade_in_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6158, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_env_fade_out_has_listener()', 'description': 'sample_env_fade_out_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_env_fade_out&quot;. C++ signature :  bool sample_env_fade_out_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_env_fade_out_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6159, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_loop_end_has_listener()', 'description': 'sample_loop_end_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_loop_end&quot;. C++ signature :  bool sample_loop_end_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_loop_end_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6160, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_loop_fade_has_listener()', 'description': 'sample_loop_fade_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_loop_fade&quot;. C++ signature :  bool sample_loop_fade_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_loop_fade_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6161, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_loop_start_has_listener()', 'description': 'sample_loop_start_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_loop_start&quot;. C++ signature :  bool sample_loop_start_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_loop_start_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6162, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_start_has_listener()', 'description': 'sample_start_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_start&quot;. C++ signature :  bool sample_start_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_start_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6163, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.selected_slice_has_listener()', 'description': 'selected_slice_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_slice&quot;. C++ signature :  bool selected_slice_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'selected_slice_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6192, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6193, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_end_listener()', 'description': 'add_sample_end_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_end&quot; has changed. C++ signature :  void add_sample_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_end_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6194, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_env_fade_in_listener()', 'description': 'add_sample_env_fade_in_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_env_fade_in&quot; has changed. C++ signature :  void add_sample_env_fade_in_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_env_fade_in_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6195, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_env_fade_out_listener()', 'description': 'add_sample_env_fade_out_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_env_fade_out&quot; has changed. C++ signature :  void add_sample_env_fade_out_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_env_fade_out_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6196, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_loop_end_listener()', 'description': 'add_sample_loop_end_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_loop_end&quot; has changed. C++ signature :  void add_sample_loop_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_loop_end_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6197, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_loop_fade_listener()', 'description': 'add_sample_loop_fade_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_loop_fade&quot; has changed. C++ signature :  void add_sample_loop_fade_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_loop_fade_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6198, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_loop_start_listener()', 'description': 'add_sample_loop_start_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_loop_start&quot; has changed. C++ signature :  void add_sample_loop_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_loop_start_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6199, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_sample_start_listener()', 'description': 'add_sample_start_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;sample_start&quot; has changed. C++ signature :  void add_sample_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_sample_start_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6200, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.add_selected_slice_listener()', 'description': 'add_selected_slice_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_slice&quot; has changed. C++ signature :  void add_selected_slice_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'add_selected_slice_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6203, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6204, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6205, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_end_listener()', 'description': 'remove_sample_end_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_end&quot;. C++ signature :  void remove_sample_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_end_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6206, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_env_fade_in_listener()', 'description': 'remove_sample_env_fade_in_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_env_fade_in&quot;. C++ signature :  void remove_sample_env_fade_in_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_env_fade_in_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6207, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_env_fade_out_listener()', 'description': 'remove_sample_env_fade_out_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_env_fade_out&quot;. C++ signature :  void remove_sample_env_fade_out_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_env_fade_out_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6208, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_loop_end_listener()', 'description': 'remove_sample_loop_end_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_loop_end&quot;. C++ signature :  void remove_sample_loop_end_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_loop_end_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6209, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_loop_fade_listener()', 'description': 'remove_sample_loop_fade_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_loop_fade&quot;. C++ signature :  void remove_sample_loop_fade_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_loop_fade_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6210, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_loop_start_listener()', 'description': 'remove_sample_loop_start_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_loop_start&quot;. C++ signature :  void remove_sample_loop_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_loop_start_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6211, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_sample_start_listener()', 'description': 'remove_sample_start_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;sample_start&quot;. C++ signature :  void remove_sample_start_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_sample_start_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6212, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.remove_selected_slice_listener()', 'description': 'remove_selected_slice_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_slice&quot;. C++ signature :  void remove_selected_slice_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'remove_selected_slice_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6214, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_end_has_listener()', 'description': 'sample_end_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_end&quot;. C++ signature :  bool sample_end_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_end_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6216, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_env_fade_in_has_listener()', 'description': 'sample_env_fade_in_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_env_fade_in&quot;. C++ signature :  bool sample_env_fade_in_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_env_fade_in_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6218, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_env_fade_out_has_listener()', 'description': 'sample_env_fade_out_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_env_fade_out&quot;. C++ signature :  bool sample_env_fade_out_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_env_fade_out_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6220, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_loop_end_has_listener()', 'description': 'sample_loop_end_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_loop_end&quot;. C++ signature :  bool sample_loop_end_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_loop_end_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6222, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_loop_fade_has_listener()', 'description': 'sample_loop_fade_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_loop_fade&quot;. C++ signature :  bool sample_loop_fade_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_loop_fade_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6224, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_loop_start_has_listener()', 'description': 'sample_loop_start_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_loop_start&quot;. C++ signature :  bool sample_loop_start_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_loop_start_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6226, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.sample_start_has_listener()', 'description': 'sample_start_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;sample_start&quot;. C++ signature :  bool sample_start_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'sample_start_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6228, 'tag': 'listener Method', 'name': 'Live.SimplerDevice.SimplerDevice.View.selected_slice_has_listener()', 'description': 'selected_slice_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_slice&quot;. C++ signature :  bool selected_slice_has_listener(TSimplerDevicePyViewData,boost::python::api::object)', 'path': ['Live', 'SimplerDevice', 'SimplerDevice', 'View', 'selected_slice_has_listener()'], 'hierarchy': 4, 'ref_parent': 6025, 'children': [], 'group': 'listener Method'},
{'ref': 6503, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.add_name_listener()', 'description': 'add_name_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 6502, 'children': [], 'group': 'listener Method'},
{'ref': 6504, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.add_time_listener()', 'description': 'add_time_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time&quot; has changed. C++ signature :  void add_time_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'add_time_listener()'], 'hierarchy': 3, 'ref_parent': 6502, 'children': [], 'group': 'listener Method'},
{'ref': 6506, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.name_has_listener()', 'description': 'name_has_listener( (CuePoint)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 6502, 'children': [], 'group': 'listener Method'},
{'ref': 6507, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.remove_name_listener()', 'description': 'remove_name_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 6502, 'children': [], 'group': 'listener Method'},
{'ref': 6508, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.remove_time_listener()', 'description': 'remove_time_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time&quot;. C++ signature :  void remove_time_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'remove_time_listener()'], 'hierarchy': 3, 'ref_parent': 6502, 'children': [], 'group': 'listener Method'},
{'ref': 6509, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.time_has_listener()', 'description': 'time_has_listener( (CuePoint)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time&quot;. C++ signature :  bool time_has_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'time_has_listener()'], 'hierarchy': 3, 'ref_parent': 6502, 'children': [], 'group': 'listener Method'},
{'ref': 6538, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.add_name_listener()', 'description': 'add_name_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 6502, 'children': [], 'group': 'listener Method'},
{'ref': 6539, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.add_time_listener()', 'description': 'add_time_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;time&quot; has changed. C++ signature :  void add_time_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'add_time_listener()'], 'hierarchy': 3, 'ref_parent': 6502, 'children': [], 'group': 'listener Method'},
{'ref': 6543, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.name_has_listener()', 'description': 'name_has_listener( (CuePoint)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 6502, 'children': [], 'group': 'listener Method'},
{'ref': 6544, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.remove_name_listener()', 'description': 'remove_name_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 6502, 'children': [], 'group': 'listener Method'},
{'ref': 6545, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.remove_time_listener()', 'description': 'remove_time_listener( (CuePoint)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;time&quot;. C++ signature :  void remove_time_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'remove_time_listener()'], 'hierarchy': 3, 'ref_parent': 6502, 'children': [], 'group': 'listener Method'},
{'ref': 6547, 'tag': 'listener Method', 'name': 'Live.Song.CuePoint.time_has_listener()', 'description': 'time_has_listener( (CuePoint)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;time&quot;. C++ signature :  bool time_has_listener(TPyHandle&lt;ACuePoint&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'CuePoint', 'time_has_listener()'], 'hierarchy': 3, 'ref_parent': 6502, 'children': [], 'group': 'listener Method'},
{'ref': 6838, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_appointed_device_listener()', 'description': 'add_appointed_device_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;appointed_device&quot; has changed. C++ signature :  void add_appointed_device_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_appointed_device_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6839, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_arrangement_overdub_listener()', 'description': 'add_arrangement_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;arrangement_overdub&quot; has changed. C++ signature :  void add_arrangement_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_arrangement_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6840, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_back_to_arranger_listener()', 'description': 'add_back_to_arranger_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;back_to_arranger&quot; has changed. C++ signature :  void add_back_to_arranger_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_back_to_arranger_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6841, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_can_capture_midi_listener()', 'description': 'add_can_capture_midi_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_capture_midi&quot; has changed. C++ signature :  void add_can_capture_midi_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_can_capture_midi_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6842, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_can_jump_to_next_cue_listener()', 'description': 'add_can_jump_to_next_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_jump_to_next_cue&quot; has changed. C++ signature :  void add_can_jump_to_next_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_can_jump_to_next_cue_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6843, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_can_jump_to_prev_cue_listener()', 'description': 'add_can_jump_to_prev_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_jump_to_prev_cue&quot; has changed. C++ signature :  void add_can_jump_to_prev_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_can_jump_to_prev_cue_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6844, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_clip_trigger_quantization_listener()', 'description': 'add_clip_trigger_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;clip_trigger_quantization&quot; has changed. C++ signature :  void add_clip_trigger_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_clip_trigger_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6845, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_count_in_duration_listener()', 'description': 'add_count_in_duration_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;count_in_duration&quot; has changed. C++ signature :  void add_count_in_duration_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_count_in_duration_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6846, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_cue_points_listener()', 'description': 'add_cue_points_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;cue_points&quot; has changed. C++ signature :  void add_cue_points_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_cue_points_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6847, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_current_song_time_listener()', 'description': 'add_current_song_time_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_song_time&quot; has changed. C++ signature :  void add_current_song_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_current_song_time_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6848, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_data_listener()', 'description': 'add_data_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;data&quot; has changed. C++ signature :  void add_data_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_data_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6849, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_exclusive_arm_listener()', 'description': 'add_exclusive_arm_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;exclusive_arm&quot; has changed. C++ signature :  void add_exclusive_arm_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_exclusive_arm_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6850, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_groove_amount_listener()', 'description': 'add_groove_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;groove_amount&quot; has changed. C++ signature :  void add_groove_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_groove_amount_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6851, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_ableton_link_enabled_listener()', 'description': 'add_is_ableton_link_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_ableton_link_enabled&quot; has changed. C++ signature :  void add_is_ableton_link_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_ableton_link_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6852, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_ableton_link_start_stop_sync_enabled_listener()', 'description': 'add_is_ableton_link_start_stop_sync_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_ableton_link_start_stop_sync_enabled&quot; has changed. C++ signature :  void add_is_ableton_link_start_stop_sync_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_ableton_link_start_stop_sync_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6853, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_counting_in_listener()', 'description': 'add_is_counting_in_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_counting_in&quot; has changed. C++ signature :  void add_is_counting_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_counting_in_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6854, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_playing_listener()', 'description': 'add_is_playing_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_playing&quot; has changed. C++ signature :  void add_is_playing_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_playing_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6855, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_loop_length_listener()', 'description': 'add_loop_length_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_length&quot; has changed. C++ signature :  void add_loop_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_loop_length_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6856, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_loop_listener()', 'description': 'add_loop_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop&quot; has changed. C++ signature :  void add_loop_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_loop_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6857, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_loop_start_listener()', 'description': 'add_loop_start_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_start&quot; has changed. C++ signature :  void add_loop_start_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6858, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_metronome_listener()', 'description': 'add_metronome_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;metronome&quot; has changed. C++ signature :  void add_metronome_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_metronome_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6859, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_midi_recording_quantization_listener()', 'description': 'add_midi_recording_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_recording_quantization&quot; has changed. C++ signature :  void add_midi_recording_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_midi_recording_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6860, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_nudge_down_listener()', 'description': 'add_nudge_down_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;nudge_down&quot; has changed. C++ signature :  void add_nudge_down_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_nudge_down_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6861, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_nudge_up_listener()', 'description': 'add_nudge_up_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;nudge_up&quot; has changed. C++ signature :  void add_nudge_up_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_nudge_up_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6862, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_overdub_listener()', 'description': 'add_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;overdub&quot; has changed. C++ signature :  void add_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6863, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_punch_in_listener()', 'description': 'add_punch_in_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;punch_in&quot; has changed. C++ signature :  void add_punch_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_punch_in_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6864, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_punch_out_listener()', 'description': 'add_punch_out_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;punch_out&quot; has changed. C++ signature :  void add_punch_out_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_punch_out_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6865, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_re_enable_automation_enabled_listener()', 'description': 'add_re_enable_automation_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;re_enable_automation_enabled&quot; has changed. C++ signature :  void add_re_enable_automation_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_re_enable_automation_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6866, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_record_mode_listener()', 'description': 'add_record_mode_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;record_mode&quot; has changed. C++ signature :  void add_record_mode_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_record_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6867, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_return_tracks_listener()', 'description': 'add_return_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;return_tracks&quot; has changed. C++ signature :  void add_return_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_return_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6868, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_root_note_listener()', 'description': 'add_root_note_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;root_note&quot; has changed. C++ signature :  void add_root_note_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_root_note_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6869, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_scale_intervals_listener()', 'description': 'add_scale_intervals_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;scale_intervals&quot; has changed. C++ signature :  void add_scale_intervals_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_scale_intervals_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6870, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_scale_name_listener()', 'description': 'add_scale_name_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;scale_name&quot; has changed. C++ signature :  void add_scale_name_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_scale_name_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6871, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_scenes_listener()', 'description': 'add_scenes_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;scenes&quot; has changed. C++ signature :  void add_scenes_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_scenes_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6872, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_session_automation_record_listener()', 'description': 'add_session_automation_record_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;session_automation_record&quot; has changed. C++ signature :  void add_session_automation_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_session_automation_record_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6873, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_session_record_listener()', 'description': 'add_session_record_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;session_record&quot; has changed. C++ signature :  void add_session_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_session_record_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6874, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_session_record_status_listener()', 'description': 'add_session_record_status_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;session_record_status&quot; has changed. C++ signature :  void add_session_record_status_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_session_record_status_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6875, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_signature_denominator_listener()', 'description': 'add_signature_denominator_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_denominator&quot; has changed. C++ signature :  void add_signature_denominator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6876, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_signature_numerator_listener()', 'description': 'add_signature_numerator_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_numerator&quot; has changed. C++ signature :  void add_signature_numerator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6877, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_song_length_listener()', 'description': 'add_song_length_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;song_length&quot; has changed. C++ signature :  void add_song_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_song_length_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6878, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_start_time_listener()', 'description': 'add_start_time_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;start_time&quot; has changed. C++ signature :  void add_start_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_start_time_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6879, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_swing_amount_listener()', 'description': 'add_swing_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;swing_amount&quot; has changed. C++ signature :  void add_swing_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_swing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6880, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tempo_follower_enabled_listener()', 'description': 'add_tempo_follower_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo_follower_enabled&quot; has changed. C++ signature :  void add_tempo_follower_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tempo_follower_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6881, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tempo_listener()', 'description': 'add_tempo_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo&quot; has changed. C++ signature :  void add_tempo_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6882, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tracks_listener()', 'description': 'add_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tracks&quot; has changed. C++ signature :  void add_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6883, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_visible_tracks_listener()', 'description': 'add_visible_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_tracks&quot; has changed. C++ signature :  void add_visible_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_visible_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6884, 'tag': 'listener Method', 'name': 'Live.Song.Song.appointed_device_has_listener()', 'description': 'appointed_device_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;appointed_device&quot;. C++ signature :  bool appointed_device_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'appointed_device_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6885, 'tag': 'listener Method', 'name': 'Live.Song.Song.arrangement_overdub_has_listener()', 'description': 'arrangement_overdub_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;arrangement_overdub&quot;. C++ signature :  bool arrangement_overdub_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'arrangement_overdub_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6886, 'tag': 'listener Method', 'name': 'Live.Song.Song.back_to_arranger_has_listener()', 'description': 'back_to_arranger_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;back_to_arranger&quot;. C++ signature :  bool back_to_arranger_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'back_to_arranger_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6888, 'tag': 'listener Method', 'name': 'Live.Song.Song.can_capture_midi_has_listener()', 'description': 'can_capture_midi_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_capture_midi&quot;. C++ signature :  bool can_capture_midi_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'can_capture_midi_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6889, 'tag': 'listener Method', 'name': 'Live.Song.Song.can_jump_to_next_cue_has_listener()', 'description': 'can_jump_to_next_cue_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_jump_to_next_cue&quot;. C++ signature :  bool can_jump_to_next_cue_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'can_jump_to_next_cue_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6890, 'tag': 'listener Method', 'name': 'Live.Song.Song.can_jump_to_prev_cue_has_listener()', 'description': 'can_jump_to_prev_cue_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_jump_to_prev_cue&quot;. C++ signature :  bool can_jump_to_prev_cue_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'can_jump_to_prev_cue_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6893, 'tag': 'listener Method', 'name': 'Live.Song.Song.clip_trigger_quantization_has_listener()', 'description': 'clip_trigger_quantization_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;clip_trigger_quantization&quot;. C++ signature :  bool clip_trigger_quantization_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'clip_trigger_quantization_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6895, 'tag': 'listener Method', 'name': 'Live.Song.Song.count_in_duration_has_listener()', 'description': 'count_in_duration_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;count_in_duration&quot;. C++ signature :  bool count_in_duration_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'count_in_duration_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6900, 'tag': 'listener Method', 'name': 'Live.Song.Song.cue_points_has_listener()', 'description': 'cue_points_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;cue_points&quot;. C++ signature :  bool cue_points_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'cue_points_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6901, 'tag': 'listener Method', 'name': 'Live.Song.Song.current_song_time_has_listener()', 'description': 'current_song_time_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_song_time&quot;. C++ signature :  bool current_song_time_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'current_song_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6902, 'tag': 'listener Method', 'name': 'Live.Song.Song.data_has_listener()', 'description': 'data_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;data&quot;. C++ signature :  bool data_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'data_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6909, 'tag': 'listener Method', 'name': 'Live.Song.Song.exclusive_arm_has_listener()', 'description': 'exclusive_arm_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;exclusive_arm&quot;. C++ signature :  bool exclusive_arm_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'exclusive_arm_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6917, 'tag': 'listener Method', 'name': 'Live.Song.Song.groove_amount_has_listener()', 'description': 'groove_amount_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;groove_amount&quot;. C++ signature :  bool groove_amount_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'groove_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6918, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_ableton_link_enabled_has_listener()', 'description': 'is_ableton_link_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_ableton_link_enabled&quot;. C++ signature :  bool is_ableton_link_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_ableton_link_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6919, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_ableton_link_start_stop_sync_enabled_has_listener()', 'description': 'is_ableton_link_start_stop_sync_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_ableton_link_start_stop_sync_enabled&quot;. C++ signature :  bool is_ableton_link_start_stop_sync_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_ableton_link_start_stop_sync_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6920, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_counting_in_has_listener()', 'description': 'is_counting_in_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_counting_in&quot;. C++ signature :  bool is_counting_in_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_counting_in_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6922, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_playing_has_listener()', 'description': 'is_playing_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_playing&quot;. C++ signature :  bool is_playing_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_playing_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6926, 'tag': 'listener Method', 'name': 'Live.Song.Song.loop_has_listener()', 'description': 'loop_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop&quot;. C++ signature :  bool loop_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'loop_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6927, 'tag': 'listener Method', 'name': 'Live.Song.Song.loop_length_has_listener()', 'description': 'loop_length_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_length&quot;. C++ signature :  bool loop_length_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'loop_length_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6928, 'tag': 'listener Method', 'name': 'Live.Song.Song.loop_start_has_listener()', 'description': 'loop_start_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_start&quot;. C++ signature :  bool loop_start_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'loop_start_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6929, 'tag': 'listener Method', 'name': 'Live.Song.Song.metronome_has_listener()', 'description': 'metronome_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;metronome&quot;. C++ signature :  bool metronome_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'metronome_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6930, 'tag': 'listener Method', 'name': 'Live.Song.Song.midi_recording_quantization_has_listener()', 'description': 'midi_recording_quantization_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_recording_quantization&quot;. C++ signature :  bool midi_recording_quantization_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'midi_recording_quantization_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6932, 'tag': 'listener Method', 'name': 'Live.Song.Song.nudge_down_has_listener()', 'description': 'nudge_down_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;nudge_down&quot;. C++ signature :  bool nudge_down_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'nudge_down_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6933, 'tag': 'listener Method', 'name': 'Live.Song.Song.nudge_up_has_listener()', 'description': 'nudge_up_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;nudge_up&quot;. C++ signature :  bool nudge_up_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'nudge_up_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6934, 'tag': 'listener Method', 'name': 'Live.Song.Song.overdub_has_listener()', 'description': 'overdub_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;overdub&quot;. C++ signature :  bool overdub_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'overdub_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6936, 'tag': 'listener Method', 'name': 'Live.Song.Song.punch_in_has_listener()', 'description': 'punch_in_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;punch_in&quot;. C++ signature :  bool punch_in_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'punch_in_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6937, 'tag': 'listener Method', 'name': 'Live.Song.Song.punch_out_has_listener()', 'description': 'punch_out_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;punch_out&quot;. C++ signature :  bool punch_out_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'punch_out_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6939, 'tag': 'listener Method', 'name': 'Live.Song.Song.re_enable_automation_enabled_has_listener()', 'description': 're_enable_automation_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;re_enable_automation_enabled&quot;. C++ signature :  bool re_enable_automation_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 're_enable_automation_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6940, 'tag': 'listener Method', 'name': 'Live.Song.Song.record_mode_has_listener()', 'description': 'record_mode_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;record_mode&quot;. C++ signature :  bool record_mode_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'record_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6942, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_appointed_device_listener()', 'description': 'remove_appointed_device_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;appointed_device&quot;. C++ signature :  void remove_appointed_device_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_appointed_device_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6943, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_arrangement_overdub_listener()', 'description': 'remove_arrangement_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;arrangement_overdub&quot;. C++ signature :  void remove_arrangement_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_arrangement_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6944, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_back_to_arranger_listener()', 'description': 'remove_back_to_arranger_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;back_to_arranger&quot;. C++ signature :  void remove_back_to_arranger_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_back_to_arranger_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6945, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_can_capture_midi_listener()', 'description': 'remove_can_capture_midi_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_capture_midi&quot;. C++ signature :  void remove_can_capture_midi_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_can_capture_midi_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6946, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_can_jump_to_next_cue_listener()', 'description': 'remove_can_jump_to_next_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_jump_to_next_cue&quot;. C++ signature :  void remove_can_jump_to_next_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_can_jump_to_next_cue_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6947, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_can_jump_to_prev_cue_listener()', 'description': 'remove_can_jump_to_prev_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_jump_to_prev_cue&quot;. C++ signature :  void remove_can_jump_to_prev_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_can_jump_to_prev_cue_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6948, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_clip_trigger_quantization_listener()', 'description': 'remove_clip_trigger_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;clip_trigger_quantization&quot;. C++ signature :  void remove_clip_trigger_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_clip_trigger_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6949, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_count_in_duration_listener()', 'description': 'remove_count_in_duration_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;count_in_duration&quot;. C++ signature :  void remove_count_in_duration_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_count_in_duration_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6950, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_cue_points_listener()', 'description': 'remove_cue_points_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;cue_points&quot;. C++ signature :  void remove_cue_points_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_cue_points_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6951, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_current_song_time_listener()', 'description': 'remove_current_song_time_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_song_time&quot;. C++ signature :  void remove_current_song_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_current_song_time_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6952, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_data_listener()', 'description': 'remove_data_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;data&quot;. C++ signature :  void remove_data_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_data_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6953, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_exclusive_arm_listener()', 'description': 'remove_exclusive_arm_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;exclusive_arm&quot;. C++ signature :  void remove_exclusive_arm_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_exclusive_arm_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6954, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_groove_amount_listener()', 'description': 'remove_groove_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;groove_amount&quot;. C++ signature :  void remove_groove_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_groove_amount_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6955, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_ableton_link_enabled_listener()', 'description': 'remove_is_ableton_link_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_ableton_link_enabled&quot;. C++ signature :  void remove_is_ableton_link_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_ableton_link_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6956, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_ableton_link_start_stop_sync_enabled_listener()', 'description': 'remove_is_ableton_link_start_stop_sync_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_ableton_link_start_stop_sync_enabled&quot;. C++ signature :  void remove_is_ableton_link_start_stop_sync_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_ableton_link_start_stop_sync_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6957, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_counting_in_listener()', 'description': 'remove_is_counting_in_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_counting_in&quot;. C++ signature :  void remove_is_counting_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_counting_in_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6958, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_playing_listener()', 'description': 'remove_is_playing_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_playing&quot;. C++ signature :  void remove_is_playing_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_playing_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6959, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_loop_length_listener()', 'description': 'remove_loop_length_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_length&quot;. C++ signature :  void remove_loop_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_loop_length_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6960, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_loop_listener()', 'description': 'remove_loop_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop&quot;. C++ signature :  void remove_loop_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_loop_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6961, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_loop_start_listener()', 'description': 'remove_loop_start_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_start&quot;. C++ signature :  void remove_loop_start_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6962, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_metronome_listener()', 'description': 'remove_metronome_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;metronome&quot;. C++ signature :  void remove_metronome_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_metronome_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6963, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_midi_recording_quantization_listener()', 'description': 'remove_midi_recording_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_recording_quantization&quot;. C++ signature :  void remove_midi_recording_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_midi_recording_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6964, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_nudge_down_listener()', 'description': 'remove_nudge_down_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;nudge_down&quot;. C++ signature :  void remove_nudge_down_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_nudge_down_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6965, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_nudge_up_listener()', 'description': 'remove_nudge_up_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;nudge_up&quot;. C++ signature :  void remove_nudge_up_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_nudge_up_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6966, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_overdub_listener()', 'description': 'remove_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;overdub&quot;. C++ signature :  void remove_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6967, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_punch_in_listener()', 'description': 'remove_punch_in_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;punch_in&quot;. C++ signature :  void remove_punch_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_punch_in_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6968, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_punch_out_listener()', 'description': 'remove_punch_out_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;punch_out&quot;. C++ signature :  void remove_punch_out_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_punch_out_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6969, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_re_enable_automation_enabled_listener()', 'description': 'remove_re_enable_automation_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;re_enable_automation_enabled&quot;. C++ signature :  void remove_re_enable_automation_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_re_enable_automation_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6970, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_record_mode_listener()', 'description': 'remove_record_mode_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;record_mode&quot;. C++ signature :  void remove_record_mode_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_record_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6971, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_return_tracks_listener()', 'description': 'remove_return_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;return_tracks&quot;. C++ signature :  void remove_return_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_return_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6972, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_root_note_listener()', 'description': 'remove_root_note_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;root_note&quot;. C++ signature :  void remove_root_note_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_root_note_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6973, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_scale_intervals_listener()', 'description': 'remove_scale_intervals_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;scale_intervals&quot;. C++ signature :  void remove_scale_intervals_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_scale_intervals_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6974, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_scale_name_listener()', 'description': 'remove_scale_name_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;scale_name&quot;. C++ signature :  void remove_scale_name_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_scale_name_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6975, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_scenes_listener()', 'description': 'remove_scenes_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;scenes&quot;. C++ signature :  void remove_scenes_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_scenes_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6976, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_session_automation_record_listener()', 'description': 'remove_session_automation_record_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;session_automation_record&quot;. C++ signature :  void remove_session_automation_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_session_automation_record_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6977, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_session_record_listener()', 'description': 'remove_session_record_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;session_record&quot;. C++ signature :  void remove_session_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_session_record_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6978, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_session_record_status_listener()', 'description': 'remove_session_record_status_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;session_record_status&quot;. C++ signature :  void remove_session_record_status_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_session_record_status_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6979, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_signature_denominator_listener()', 'description': 'remove_signature_denominator_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_denominator&quot;. C++ signature :  void remove_signature_denominator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6980, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_signature_numerator_listener()', 'description': 'remove_signature_numerator_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_numerator&quot;. C++ signature :  void remove_signature_numerator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6981, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_song_length_listener()', 'description': 'remove_song_length_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;song_length&quot;. C++ signature :  void remove_song_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_song_length_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6982, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_start_time_listener()', 'description': 'remove_start_time_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;start_time&quot;. C++ signature :  void remove_start_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_start_time_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6983, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_swing_amount_listener()', 'description': 'remove_swing_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;swing_amount&quot;. C++ signature :  void remove_swing_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_swing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6984, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tempo_follower_enabled_listener()', 'description': 'remove_tempo_follower_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo_follower_enabled&quot;. C++ signature :  void remove_tempo_follower_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tempo_follower_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6985, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tempo_listener()', 'description': 'remove_tempo_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo&quot;. C++ signature :  void remove_tempo_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6986, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tracks_listener()', 'description': 'remove_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tracks&quot;. C++ signature :  void remove_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6987, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_visible_tracks_listener()', 'description': 'remove_visible_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_tracks&quot;. C++ signature :  void remove_visible_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_visible_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6988, 'tag': 'listener Method', 'name': 'Live.Song.Song.return_tracks_has_listener()', 'description': 'return_tracks_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;return_tracks&quot;. C++ signature :  bool return_tracks_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'return_tracks_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6989, 'tag': 'listener Method', 'name': 'Live.Song.Song.root_note_has_listener()', 'description': 'root_note_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;root_note&quot;. C++ signature :  bool root_note_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'root_note_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6990, 'tag': 'listener Method', 'name': 'Live.Song.Song.scale_intervals_has_listener()', 'description': 'scale_intervals_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;scale_intervals&quot;. C++ signature :  bool scale_intervals_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'scale_intervals_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6991, 'tag': 'listener Method', 'name': 'Live.Song.Song.scale_name_has_listener()', 'description': 'scale_name_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;scale_name&quot;. C++ signature :  bool scale_name_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'scale_name_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6992, 'tag': 'listener Method', 'name': 'Live.Song.Song.scenes_has_listener()', 'description': 'scenes_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;scenes&quot;. C++ signature :  bool scenes_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'scenes_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6994, 'tag': 'listener Method', 'name': 'Live.Song.Song.session_automation_record_has_listener()', 'description': 'session_automation_record_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;session_automation_record&quot;. C++ signature :  bool session_automation_record_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'session_automation_record_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6995, 'tag': 'listener Method', 'name': 'Live.Song.Song.session_record_has_listener()', 'description': 'session_record_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;session_record&quot;. C++ signature :  bool session_record_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'session_record_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6996, 'tag': 'listener Method', 'name': 'Live.Song.Song.session_record_status_has_listener()', 'description': 'session_record_status_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;session_record_status&quot;. C++ signature :  bool session_record_status_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'session_record_status_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 6999, 'tag': 'listener Method', 'name': 'Live.Song.Song.signature_denominator_has_listener()', 'description': 'signature_denominator_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_denominator&quot;. C++ signature :  bool signature_denominator_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'signature_denominator_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7000, 'tag': 'listener Method', 'name': 'Live.Song.Song.signature_numerator_has_listener()', 'description': 'signature_numerator_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_numerator&quot;. C++ signature :  bool signature_numerator_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'signature_numerator_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7001, 'tag': 'listener Method', 'name': 'Live.Song.Song.song_length_has_listener()', 'description': 'song_length_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;song_length&quot;. C++ signature :  bool song_length_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'song_length_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7003, 'tag': 'listener Method', 'name': 'Live.Song.Song.start_time_has_listener()', 'description': 'start_time_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;start_time&quot;. C++ signature :  bool start_time_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'start_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7006, 'tag': 'listener Method', 'name': 'Live.Song.Song.swing_amount_has_listener()', 'description': 'swing_amount_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;swing_amount&quot;. C++ signature :  bool swing_amount_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'swing_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7008, 'tag': 'listener Method', 'name': 'Live.Song.Song.tempo_follower_enabled_has_listener()', 'description': 'tempo_follower_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo_follower_enabled&quot;. C++ signature :  bool tempo_follower_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tempo_follower_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7009, 'tag': 'listener Method', 'name': 'Live.Song.Song.tempo_has_listener()', 'description': 'tempo_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo&quot;. C++ signature :  bool tempo_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tempo_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7010, 'tag': 'listener Method', 'name': 'Live.Song.Song.tracks_has_listener()', 'description': 'tracks_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tracks&quot;. C++ signature :  bool tracks_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tracks_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7013, 'tag': 'listener Method', 'name': 'Live.Song.Song.visible_tracks_has_listener()', 'description': 'visible_tracks_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_tracks&quot;. C++ signature :  bool visible_tracks_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'visible_tracks_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7043, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_appointed_device_listener()', 'description': 'add_appointed_device_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;appointed_device&quot; has changed. C++ signature :  void add_appointed_device_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_appointed_device_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7044, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_arrangement_overdub_listener()', 'description': 'add_arrangement_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;arrangement_overdub&quot; has changed. C++ signature :  void add_arrangement_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_arrangement_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7045, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_back_to_arranger_listener()', 'description': 'add_back_to_arranger_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;back_to_arranger&quot; has changed. C++ signature :  void add_back_to_arranger_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_back_to_arranger_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7046, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_can_capture_midi_listener()', 'description': 'add_can_capture_midi_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_capture_midi&quot; has changed. C++ signature :  void add_can_capture_midi_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_can_capture_midi_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7047, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_can_jump_to_next_cue_listener()', 'description': 'add_can_jump_to_next_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_jump_to_next_cue&quot; has changed. C++ signature :  void add_can_jump_to_next_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_can_jump_to_next_cue_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7048, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_can_jump_to_prev_cue_listener()', 'description': 'add_can_jump_to_prev_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;can_jump_to_prev_cue&quot; has changed. C++ signature :  void add_can_jump_to_prev_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_can_jump_to_prev_cue_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7049, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_clip_trigger_quantization_listener()', 'description': 'add_clip_trigger_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;clip_trigger_quantization&quot; has changed. C++ signature :  void add_clip_trigger_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_clip_trigger_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7050, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_count_in_duration_listener()', 'description': 'add_count_in_duration_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;count_in_duration&quot; has changed. C++ signature :  void add_count_in_duration_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_count_in_duration_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7051, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_cue_points_listener()', 'description': 'add_cue_points_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;cue_points&quot; has changed. C++ signature :  void add_cue_points_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_cue_points_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7052, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_current_song_time_listener()', 'description': 'add_current_song_time_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_song_time&quot; has changed. C++ signature :  void add_current_song_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_current_song_time_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7053, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_data_listener()', 'description': 'add_data_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;data&quot; has changed. C++ signature :  void add_data_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_data_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7054, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_exclusive_arm_listener()', 'description': 'add_exclusive_arm_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;exclusive_arm&quot; has changed. C++ signature :  void add_exclusive_arm_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_exclusive_arm_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7055, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_groove_amount_listener()', 'description': 'add_groove_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;groove_amount&quot; has changed. C++ signature :  void add_groove_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_groove_amount_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7056, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_ableton_link_enabled_listener()', 'description': 'add_is_ableton_link_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_ableton_link_enabled&quot; has changed. C++ signature :  void add_is_ableton_link_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_ableton_link_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7057, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_ableton_link_start_stop_sync_enabled_listener()', 'description': 'add_is_ableton_link_start_stop_sync_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_ableton_link_start_stop_sync_enabled&quot; has changed. C++ signature :  void add_is_ableton_link_start_stop_sync_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_ableton_link_start_stop_sync_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7058, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_counting_in_listener()', 'description': 'add_is_counting_in_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_counting_in&quot; has changed. C++ signature :  void add_is_counting_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_counting_in_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7059, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_is_playing_listener()', 'description': 'add_is_playing_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_playing&quot; has changed. C++ signature :  void add_is_playing_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_is_playing_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7060, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_loop_length_listener()', 'description': 'add_loop_length_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_length&quot; has changed. C++ signature :  void add_loop_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_loop_length_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7061, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_loop_listener()', 'description': 'add_loop_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop&quot; has changed. C++ signature :  void add_loop_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_loop_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7062, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_loop_start_listener()', 'description': 'add_loop_start_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;loop_start&quot; has changed. C++ signature :  void add_loop_start_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7063, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_metronome_listener()', 'description': 'add_metronome_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;metronome&quot; has changed. C++ signature :  void add_metronome_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_metronome_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7064, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_midi_recording_quantization_listener()', 'description': 'add_midi_recording_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_recording_quantization&quot; has changed. C++ signature :  void add_midi_recording_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_midi_recording_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7065, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_nudge_down_listener()', 'description': 'add_nudge_down_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;nudge_down&quot; has changed. C++ signature :  void add_nudge_down_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_nudge_down_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7066, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_nudge_up_listener()', 'description': 'add_nudge_up_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;nudge_up&quot; has changed. C++ signature :  void add_nudge_up_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_nudge_up_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7067, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_overdub_listener()', 'description': 'add_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;overdub&quot; has changed. C++ signature :  void add_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7068, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_punch_in_listener()', 'description': 'add_punch_in_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;punch_in&quot; has changed. C++ signature :  void add_punch_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_punch_in_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7069, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_punch_out_listener()', 'description': 'add_punch_out_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;punch_out&quot; has changed. C++ signature :  void add_punch_out_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_punch_out_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7070, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_re_enable_automation_enabled_listener()', 'description': 'add_re_enable_automation_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;re_enable_automation_enabled&quot; has changed. C++ signature :  void add_re_enable_automation_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_re_enable_automation_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7071, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_record_mode_listener()', 'description': 'add_record_mode_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;record_mode&quot; has changed. C++ signature :  void add_record_mode_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_record_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7072, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_return_tracks_listener()', 'description': 'add_return_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;return_tracks&quot; has changed. C++ signature :  void add_return_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_return_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7073, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_root_note_listener()', 'description': 'add_root_note_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;root_note&quot; has changed. C++ signature :  void add_root_note_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_root_note_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7074, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_scale_intervals_listener()', 'description': 'add_scale_intervals_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;scale_intervals&quot; has changed. C++ signature :  void add_scale_intervals_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_scale_intervals_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7075, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_scale_name_listener()', 'description': 'add_scale_name_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;scale_name&quot; has changed. C++ signature :  void add_scale_name_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_scale_name_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7076, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_scenes_listener()', 'description': 'add_scenes_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;scenes&quot; has changed. C++ signature :  void add_scenes_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_scenes_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7077, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_session_automation_record_listener()', 'description': 'add_session_automation_record_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;session_automation_record&quot; has changed. C++ signature :  void add_session_automation_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_session_automation_record_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7078, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_session_record_listener()', 'description': 'add_session_record_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;session_record&quot; has changed. C++ signature :  void add_session_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_session_record_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7079, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_session_record_status_listener()', 'description': 'add_session_record_status_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;session_record_status&quot; has changed. C++ signature :  void add_session_record_status_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_session_record_status_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7080, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_signature_denominator_listener()', 'description': 'add_signature_denominator_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_denominator&quot; has changed. C++ signature :  void add_signature_denominator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7081, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_signature_numerator_listener()', 'description': 'add_signature_numerator_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;signature_numerator&quot; has changed. C++ signature :  void add_signature_numerator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7082, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_song_length_listener()', 'description': 'add_song_length_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;song_length&quot; has changed. C++ signature :  void add_song_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_song_length_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7083, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_start_time_listener()', 'description': 'add_start_time_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;start_time&quot; has changed. C++ signature :  void add_start_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_start_time_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7084, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_swing_amount_listener()', 'description': 'add_swing_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;swing_amount&quot; has changed. C++ signature :  void add_swing_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_swing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7085, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tempo_follower_enabled_listener()', 'description': 'add_tempo_follower_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo_follower_enabled&quot; has changed. C++ signature :  void add_tempo_follower_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tempo_follower_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7086, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tempo_listener()', 'description': 'add_tempo_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tempo&quot; has changed. C++ signature :  void add_tempo_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7087, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_tracks_listener()', 'description': 'add_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;tracks&quot; has changed. C++ signature :  void add_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7088, 'tag': 'listener Method', 'name': 'Live.Song.Song.add_visible_tracks_listener()', 'description': 'add_visible_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_tracks&quot; has changed. C++ signature :  void add_visible_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'add_visible_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7090, 'tag': 'listener Method', 'name': 'Live.Song.Song.appointed_device_has_listener()', 'description': 'appointed_device_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;appointed_device&quot;. C++ signature :  bool appointed_device_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'appointed_device_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7092, 'tag': 'listener Method', 'name': 'Live.Song.Song.arrangement_overdub_has_listener()', 'description': 'arrangement_overdub_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;arrangement_overdub&quot;. C++ signature :  bool arrangement_overdub_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'arrangement_overdub_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7094, 'tag': 'listener Method', 'name': 'Live.Song.Song.back_to_arranger_has_listener()', 'description': 'back_to_arranger_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;back_to_arranger&quot;. C++ signature :  bool back_to_arranger_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'back_to_arranger_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7097, 'tag': 'listener Method', 'name': 'Live.Song.Song.can_capture_midi_has_listener()', 'description': 'can_capture_midi_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_capture_midi&quot;. C++ signature :  bool can_capture_midi_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'can_capture_midi_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7099, 'tag': 'listener Method', 'name': 'Live.Song.Song.can_jump_to_next_cue_has_listener()', 'description': 'can_jump_to_next_cue_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_jump_to_next_cue&quot;. C++ signature :  bool can_jump_to_next_cue_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'can_jump_to_next_cue_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7101, 'tag': 'listener Method', 'name': 'Live.Song.Song.can_jump_to_prev_cue_has_listener()', 'description': 'can_jump_to_prev_cue_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;can_jump_to_prev_cue&quot;. C++ signature :  bool can_jump_to_prev_cue_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'can_jump_to_prev_cue_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7108, 'tag': 'listener Method', 'name': 'Live.Song.Song.clip_trigger_quantization_has_listener()', 'description': 'clip_trigger_quantization_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;clip_trigger_quantization&quot;. C++ signature :  bool clip_trigger_quantization_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'clip_trigger_quantization_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7111, 'tag': 'listener Method', 'name': 'Live.Song.Song.count_in_duration_has_listener()', 'description': 'count_in_duration_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;count_in_duration&quot;. C++ signature :  bool count_in_duration_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'count_in_duration_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7117, 'tag': 'listener Method', 'name': 'Live.Song.Song.cue_points_has_listener()', 'description': 'cue_points_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;cue_points&quot;. C++ signature :  bool cue_points_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'cue_points_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7119, 'tag': 'listener Method', 'name': 'Live.Song.Song.current_song_time_has_listener()', 'description': 'current_song_time_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_song_time&quot;. C++ signature :  bool current_song_time_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'current_song_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7120, 'tag': 'listener Method', 'name': 'Live.Song.Song.data_has_listener()', 'description': 'data_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;data&quot;. C++ signature :  bool data_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'data_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7128, 'tag': 'listener Method', 'name': 'Live.Song.Song.exclusive_arm_has_listener()', 'description': 'exclusive_arm_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;exclusive_arm&quot;. C++ signature :  bool exclusive_arm_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'exclusive_arm_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7138, 'tag': 'listener Method', 'name': 'Live.Song.Song.groove_amount_has_listener()', 'description': 'groove_amount_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;groove_amount&quot;. C++ signature :  bool groove_amount_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'groove_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7141, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_ableton_link_enabled_has_listener()', 'description': 'is_ableton_link_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_ableton_link_enabled&quot;. C++ signature :  bool is_ableton_link_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_ableton_link_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7143, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_ableton_link_start_stop_sync_enabled_has_listener()', 'description': 'is_ableton_link_start_stop_sync_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_ableton_link_start_stop_sync_enabled&quot;. C++ signature :  bool is_ableton_link_start_stop_sync_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_ableton_link_start_stop_sync_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7145, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_counting_in_has_listener()', 'description': 'is_counting_in_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_counting_in&quot;. C++ signature :  bool is_counting_in_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_counting_in_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7148, 'tag': 'listener Method', 'name': 'Live.Song.Song.is_playing_has_listener()', 'description': 'is_playing_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_playing&quot;. C++ signature :  bool is_playing_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'is_playing_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7154, 'tag': 'listener Method', 'name': 'Live.Song.Song.loop_has_listener()', 'description': 'loop_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop&quot;. C++ signature :  bool loop_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'loop_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7156, 'tag': 'listener Method', 'name': 'Live.Song.Song.loop_length_has_listener()', 'description': 'loop_length_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_length&quot;. C++ signature :  bool loop_length_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'loop_length_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7158, 'tag': 'listener Method', 'name': 'Live.Song.Song.loop_start_has_listener()', 'description': 'loop_start_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;loop_start&quot;. C++ signature :  bool loop_start_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'loop_start_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7161, 'tag': 'listener Method', 'name': 'Live.Song.Song.metronome_has_listener()', 'description': 'metronome_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;metronome&quot;. C++ signature :  bool metronome_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'metronome_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7163, 'tag': 'listener Method', 'name': 'Live.Song.Song.midi_recording_quantization_has_listener()', 'description': 'midi_recording_quantization_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_recording_quantization&quot;. C++ signature :  bool midi_recording_quantization_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'midi_recording_quantization_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7166, 'tag': 'listener Method', 'name': 'Live.Song.Song.nudge_down_has_listener()', 'description': 'nudge_down_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;nudge_down&quot;. C++ signature :  bool nudge_down_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'nudge_down_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7168, 'tag': 'listener Method', 'name': 'Live.Song.Song.nudge_up_has_listener()', 'description': 'nudge_up_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;nudge_up&quot;. C++ signature :  bool nudge_up_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'nudge_up_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7170, 'tag': 'listener Method', 'name': 'Live.Song.Song.overdub_has_listener()', 'description': 'overdub_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;overdub&quot;. C++ signature :  bool overdub_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'overdub_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7173, 'tag': 'listener Method', 'name': 'Live.Song.Song.punch_in_has_listener()', 'description': 'punch_in_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;punch_in&quot;. C++ signature :  bool punch_in_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'punch_in_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7175, 'tag': 'listener Method', 'name': 'Live.Song.Song.punch_out_has_listener()', 'description': 'punch_out_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;punch_out&quot;. C++ signature :  bool punch_out_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'punch_out_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7178, 'tag': 'listener Method', 'name': 'Live.Song.Song.re_enable_automation_enabled_has_listener()', 'description': 're_enable_automation_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;re_enable_automation_enabled&quot;. C++ signature :  bool re_enable_automation_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 're_enable_automation_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7180, 'tag': 'listener Method', 'name': 'Live.Song.Song.record_mode_has_listener()', 'description': 'record_mode_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;record_mode&quot;. C++ signature :  bool record_mode_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'record_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7182, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_appointed_device_listener()', 'description': 'remove_appointed_device_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;appointed_device&quot;. C++ signature :  void remove_appointed_device_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_appointed_device_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7183, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_arrangement_overdub_listener()', 'description': 'remove_arrangement_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;arrangement_overdub&quot;. C++ signature :  void remove_arrangement_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_arrangement_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7184, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_back_to_arranger_listener()', 'description': 'remove_back_to_arranger_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;back_to_arranger&quot;. C++ signature :  void remove_back_to_arranger_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_back_to_arranger_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7185, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_can_capture_midi_listener()', 'description': 'remove_can_capture_midi_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_capture_midi&quot;. C++ signature :  void remove_can_capture_midi_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_can_capture_midi_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7186, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_can_jump_to_next_cue_listener()', 'description': 'remove_can_jump_to_next_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_jump_to_next_cue&quot;. C++ signature :  void remove_can_jump_to_next_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_can_jump_to_next_cue_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7187, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_can_jump_to_prev_cue_listener()', 'description': 'remove_can_jump_to_prev_cue_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;can_jump_to_prev_cue&quot;. C++ signature :  void remove_can_jump_to_prev_cue_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_can_jump_to_prev_cue_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7188, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_clip_trigger_quantization_listener()', 'description': 'remove_clip_trigger_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;clip_trigger_quantization&quot;. C++ signature :  void remove_clip_trigger_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_clip_trigger_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7189, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_count_in_duration_listener()', 'description': 'remove_count_in_duration_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;count_in_duration&quot;. C++ signature :  void remove_count_in_duration_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_count_in_duration_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7190, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_cue_points_listener()', 'description': 'remove_cue_points_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;cue_points&quot;. C++ signature :  void remove_cue_points_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_cue_points_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7191, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_current_song_time_listener()', 'description': 'remove_current_song_time_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_song_time&quot;. C++ signature :  void remove_current_song_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_current_song_time_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7192, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_data_listener()', 'description': 'remove_data_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;data&quot;. C++ signature :  void remove_data_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_data_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7193, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_exclusive_arm_listener()', 'description': 'remove_exclusive_arm_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;exclusive_arm&quot;. C++ signature :  void remove_exclusive_arm_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_exclusive_arm_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7194, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_groove_amount_listener()', 'description': 'remove_groove_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;groove_amount&quot;. C++ signature :  void remove_groove_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_groove_amount_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7195, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_ableton_link_enabled_listener()', 'description': 'remove_is_ableton_link_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_ableton_link_enabled&quot;. C++ signature :  void remove_is_ableton_link_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_ableton_link_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7196, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_ableton_link_start_stop_sync_enabled_listener()', 'description': 'remove_is_ableton_link_start_stop_sync_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_ableton_link_start_stop_sync_enabled&quot;. C++ signature :  void remove_is_ableton_link_start_stop_sync_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_ableton_link_start_stop_sync_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7197, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_counting_in_listener()', 'description': 'remove_is_counting_in_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_counting_in&quot;. C++ signature :  void remove_is_counting_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_counting_in_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7198, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_is_playing_listener()', 'description': 'remove_is_playing_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_playing&quot;. C++ signature :  void remove_is_playing_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_is_playing_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7199, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_loop_length_listener()', 'description': 'remove_loop_length_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_length&quot;. C++ signature :  void remove_loop_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_loop_length_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7200, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_loop_listener()', 'description': 'remove_loop_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop&quot;. C++ signature :  void remove_loop_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_loop_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7201, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_loop_start_listener()', 'description': 'remove_loop_start_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;loop_start&quot;. C++ signature :  void remove_loop_start_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_loop_start_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7202, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_metronome_listener()', 'description': 'remove_metronome_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;metronome&quot;. C++ signature :  void remove_metronome_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_metronome_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7203, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_midi_recording_quantization_listener()', 'description': 'remove_midi_recording_quantization_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_recording_quantization&quot;. C++ signature :  void remove_midi_recording_quantization_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_midi_recording_quantization_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7204, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_nudge_down_listener()', 'description': 'remove_nudge_down_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;nudge_down&quot;. C++ signature :  void remove_nudge_down_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_nudge_down_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7205, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_nudge_up_listener()', 'description': 'remove_nudge_up_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;nudge_up&quot;. C++ signature :  void remove_nudge_up_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_nudge_up_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7206, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_overdub_listener()', 'description': 'remove_overdub_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;overdub&quot;. C++ signature :  void remove_overdub_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_overdub_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7207, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_punch_in_listener()', 'description': 'remove_punch_in_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;punch_in&quot;. C++ signature :  void remove_punch_in_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_punch_in_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7208, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_punch_out_listener()', 'description': 'remove_punch_out_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;punch_out&quot;. C++ signature :  void remove_punch_out_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_punch_out_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7209, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_re_enable_automation_enabled_listener()', 'description': 'remove_re_enable_automation_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;re_enable_automation_enabled&quot;. C++ signature :  void remove_re_enable_automation_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_re_enable_automation_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7210, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_record_mode_listener()', 'description': 'remove_record_mode_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;record_mode&quot;. C++ signature :  void remove_record_mode_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_record_mode_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7211, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_return_tracks_listener()', 'description': 'remove_return_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;return_tracks&quot;. C++ signature :  void remove_return_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_return_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7212, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_root_note_listener()', 'description': 'remove_root_note_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;root_note&quot;. C++ signature :  void remove_root_note_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_root_note_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7213, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_scale_intervals_listener()', 'description': 'remove_scale_intervals_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;scale_intervals&quot;. C++ signature :  void remove_scale_intervals_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_scale_intervals_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7214, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_scale_name_listener()', 'description': 'remove_scale_name_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;scale_name&quot;. C++ signature :  void remove_scale_name_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_scale_name_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7215, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_scenes_listener()', 'description': 'remove_scenes_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;scenes&quot;. C++ signature :  void remove_scenes_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_scenes_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7216, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_session_automation_record_listener()', 'description': 'remove_session_automation_record_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;session_automation_record&quot;. C++ signature :  void remove_session_automation_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_session_automation_record_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7217, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_session_record_listener()', 'description': 'remove_session_record_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;session_record&quot;. C++ signature :  void remove_session_record_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_session_record_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7218, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_session_record_status_listener()', 'description': 'remove_session_record_status_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;session_record_status&quot;. C++ signature :  void remove_session_record_status_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_session_record_status_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7219, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_signature_denominator_listener()', 'description': 'remove_signature_denominator_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_denominator&quot;. C++ signature :  void remove_signature_denominator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_signature_denominator_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7220, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_signature_numerator_listener()', 'description': 'remove_signature_numerator_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;signature_numerator&quot;. C++ signature :  void remove_signature_numerator_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_signature_numerator_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7221, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_song_length_listener()', 'description': 'remove_song_length_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;song_length&quot;. C++ signature :  void remove_song_length_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_song_length_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7222, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_start_time_listener()', 'description': 'remove_start_time_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;start_time&quot;. C++ signature :  void remove_start_time_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_start_time_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7223, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_swing_amount_listener()', 'description': 'remove_swing_amount_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;swing_amount&quot;. C++ signature :  void remove_swing_amount_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_swing_amount_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7224, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tempo_follower_enabled_listener()', 'description': 'remove_tempo_follower_enabled_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo_follower_enabled&quot;. C++ signature :  void remove_tempo_follower_enabled_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tempo_follower_enabled_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7225, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tempo_listener()', 'description': 'remove_tempo_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tempo&quot;. C++ signature :  void remove_tempo_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tempo_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7226, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_tracks_listener()', 'description': 'remove_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;tracks&quot;. C++ signature :  void remove_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7227, 'tag': 'listener Method', 'name': 'Live.Song.Song.remove_visible_tracks_listener()', 'description': 'remove_visible_tracks_listener( (Song)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_tracks&quot;. C++ signature :  void remove_visible_tracks_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'remove_visible_tracks_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7229, 'tag': 'listener Method', 'name': 'Live.Song.Song.return_tracks_has_listener()', 'description': 'return_tracks_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;return_tracks&quot;. C++ signature :  bool return_tracks_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'return_tracks_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7231, 'tag': 'listener Method', 'name': 'Live.Song.Song.root_note_has_listener()', 'description': 'root_note_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;root_note&quot;. C++ signature :  bool root_note_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'root_note_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7233, 'tag': 'listener Method', 'name': 'Live.Song.Song.scale_intervals_has_listener()', 'description': 'scale_intervals_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;scale_intervals&quot;. C++ signature :  bool scale_intervals_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'scale_intervals_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7235, 'tag': 'listener Method', 'name': 'Live.Song.Song.scale_name_has_listener()', 'description': 'scale_name_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;scale_name&quot;. C++ signature :  bool scale_name_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'scale_name_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7237, 'tag': 'listener Method', 'name': 'Live.Song.Song.scenes_has_listener()', 'description': 'scenes_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;scenes&quot;. C++ signature :  bool scenes_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'scenes_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7241, 'tag': 'listener Method', 'name': 'Live.Song.Song.session_automation_record_has_listener()', 'description': 'session_automation_record_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;session_automation_record&quot;. C++ signature :  bool session_automation_record_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'session_automation_record_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7243, 'tag': 'listener Method', 'name': 'Live.Song.Song.session_record_has_listener()', 'description': 'session_record_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;session_record&quot;. C++ signature :  bool session_record_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'session_record_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7245, 'tag': 'listener Method', 'name': 'Live.Song.Song.session_record_status_has_listener()', 'description': 'session_record_status_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;session_record_status&quot;. C++ signature :  bool session_record_status_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'session_record_status_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7249, 'tag': 'listener Method', 'name': 'Live.Song.Song.signature_denominator_has_listener()', 'description': 'signature_denominator_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_denominator&quot;. C++ signature :  bool signature_denominator_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'signature_denominator_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7251, 'tag': 'listener Method', 'name': 'Live.Song.Song.signature_numerator_has_listener()', 'description': 'signature_numerator_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;signature_numerator&quot;. C++ signature :  bool signature_numerator_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'signature_numerator_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7253, 'tag': 'listener Method', 'name': 'Live.Song.Song.song_length_has_listener()', 'description': 'song_length_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;song_length&quot;. C++ signature :  bool song_length_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'song_length_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7256, 'tag': 'listener Method', 'name': 'Live.Song.Song.start_time_has_listener()', 'description': 'start_time_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;start_time&quot;. C++ signature :  bool start_time_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'start_time_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7260, 'tag': 'listener Method', 'name': 'Live.Song.Song.swing_amount_has_listener()', 'description': 'swing_amount_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;swing_amount&quot;. C++ signature :  bool swing_amount_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'swing_amount_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7264, 'tag': 'listener Method', 'name': 'Live.Song.Song.tempo_follower_enabled_has_listener()', 'description': 'tempo_follower_enabled_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo_follower_enabled&quot;. C++ signature :  bool tempo_follower_enabled_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tempo_follower_enabled_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7265, 'tag': 'listener Method', 'name': 'Live.Song.Song.tempo_has_listener()', 'description': 'tempo_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tempo&quot;. C++ signature :  bool tempo_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tempo_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7267, 'tag': 'listener Method', 'name': 'Live.Song.Song.tracks_has_listener()', 'description': 'tracks_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;tracks&quot;. C++ signature :  bool tracks_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'tracks_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7272, 'tag': 'listener Method', 'name': 'Live.Song.Song.visible_tracks_has_listener()', 'description': 'visible_tracks_has_listener( (Song)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_tracks&quot;. C++ signature :  bool visible_tracks_has_listener(TPyHandle&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'visible_tracks_has_listener()'], 'hierarchy': 3, 'ref_parent': 6837, 'children': [], 'group': 'listener Method'},
{'ref': 7274, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_detail_clip_listener()', 'description': 'add_detail_clip_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;detail_clip&quot; has changed. C++ signature :  void add_detail_clip_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_detail_clip_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7275, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_draw_mode_listener()', 'description': 'add_draw_mode_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;draw_mode&quot; has changed. C++ signature :  void add_draw_mode_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_draw_mode_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7276, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_follow_song_listener()', 'description': 'add_follow_song_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;follow_song&quot; has changed. C++ signature :  void add_follow_song_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_follow_song_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7277, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_chain_listener()', 'description': 'add_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_chain&quot; has changed. C++ signature :  void add_selected_chain_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7278, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_parameter_listener()', 'description': 'add_selected_parameter_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_parameter&quot; has changed. C++ signature :  void add_selected_parameter_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_parameter_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7279, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_scene_listener()', 'description': 'add_selected_scene_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_scene&quot; has changed. C++ signature :  void add_selected_scene_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_scene_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7280, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_track_listener()', 'description': 'add_selected_track_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_track&quot; has changed. C++ signature :  void add_selected_track_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_track_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7281, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.detail_clip_has_listener()', 'description': 'detail_clip_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;detail_clip&quot;. C++ signature :  bool detail_clip_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'detail_clip_has_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7282, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.draw_mode_has_listener()', 'description': 'draw_mode_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;draw_mode&quot;. C++ signature :  bool draw_mode_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'draw_mode_has_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7283, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.follow_song_has_listener()', 'description': 'follow_song_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;follow_song&quot;. C++ signature :  bool follow_song_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'follow_song_has_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7284, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_detail_clip_listener()', 'description': 'remove_detail_clip_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;detail_clip&quot;. C++ signature :  void remove_detail_clip_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_detail_clip_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7285, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_draw_mode_listener()', 'description': 'remove_draw_mode_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;draw_mode&quot;. C++ signature :  void remove_draw_mode_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_draw_mode_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7286, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_follow_song_listener()', 'description': 'remove_follow_song_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;follow_song&quot;. C++ signature :  void remove_follow_song_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_follow_song_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7287, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_chain_listener()', 'description': 'remove_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_chain&quot;. C++ signature :  void remove_selected_chain_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7288, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_parameter_listener()', 'description': 'remove_selected_parameter_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_parameter&quot;. C++ signature :  void remove_selected_parameter_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_parameter_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7289, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_scene_listener()', 'description': 'remove_selected_scene_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_scene&quot;. C++ signature :  void remove_selected_scene_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_scene_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7290, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_track_listener()', 'description': 'remove_selected_track_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_track&quot;. C++ signature :  void remove_selected_track_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_track_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7292, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_chain_has_listener()', 'description': 'selected_chain_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_chain&quot;. C++ signature :  bool selected_chain_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_chain_has_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7293, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_parameter_has_listener()', 'description': 'selected_parameter_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_parameter&quot;. C++ signature :  bool selected_parameter_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_parameter_has_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7294, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_scene_has_listener()', 'description': 'selected_scene_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_scene&quot;. C++ signature :  bool selected_scene_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_scene_has_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7295, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_track_has_listener()', 'description': 'selected_track_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_track&quot;. C++ signature :  bool selected_track_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_track_has_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7324, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_detail_clip_listener()', 'description': 'add_detail_clip_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;detail_clip&quot; has changed. C++ signature :  void add_detail_clip_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_detail_clip_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7325, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_draw_mode_listener()', 'description': 'add_draw_mode_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;draw_mode&quot; has changed. C++ signature :  void add_draw_mode_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_draw_mode_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7326, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_follow_song_listener()', 'description': 'add_follow_song_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;follow_song&quot; has changed. C++ signature :  void add_follow_song_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_follow_song_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7327, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_chain_listener()', 'description': 'add_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_chain&quot; has changed. C++ signature :  void add_selected_chain_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7328, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_parameter_listener()', 'description': 'add_selected_parameter_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_parameter&quot; has changed. C++ signature :  void add_selected_parameter_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_parameter_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7329, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_scene_listener()', 'description': 'add_selected_scene_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_scene&quot; has changed. C++ signature :  void add_selected_scene_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_scene_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7330, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.add_selected_track_listener()', 'description': 'add_selected_track_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_track&quot; has changed. C++ signature :  void add_selected_track_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'add_selected_track_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7333, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.detail_clip_has_listener()', 'description': 'detail_clip_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;detail_clip&quot;. C++ signature :  bool detail_clip_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'detail_clip_has_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7335, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.draw_mode_has_listener()', 'description': 'draw_mode_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;draw_mode&quot;. C++ signature :  bool draw_mode_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'draw_mode_has_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7337, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.follow_song_has_listener()', 'description': 'follow_song_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;follow_song&quot;. C++ signature :  bool follow_song_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'follow_song_has_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7339, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_detail_clip_listener()', 'description': 'remove_detail_clip_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;detail_clip&quot;. C++ signature :  void remove_detail_clip_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_detail_clip_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7340, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_draw_mode_listener()', 'description': 'remove_draw_mode_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;draw_mode&quot;. C++ signature :  void remove_draw_mode_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_draw_mode_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7341, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_follow_song_listener()', 'description': 'remove_follow_song_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;follow_song&quot;. C++ signature :  void remove_follow_song_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_follow_song_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7342, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_chain_listener()', 'description': 'remove_selected_chain_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_chain&quot;. C++ signature :  void remove_selected_chain_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_chain_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7343, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_parameter_listener()', 'description': 'remove_selected_parameter_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_parameter&quot;. C++ signature :  void remove_selected_parameter_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_parameter_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7344, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_scene_listener()', 'description': 'remove_selected_scene_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_scene&quot;. C++ signature :  void remove_selected_scene_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_scene_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7345, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.remove_selected_track_listener()', 'description': 'remove_selected_track_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_track&quot;. C++ signature :  void remove_selected_track_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'remove_selected_track_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7348, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_chain_has_listener()', 'description': 'selected_chain_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_chain&quot;. C++ signature :  bool selected_chain_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_chain_has_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7350, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_parameter_has_listener()', 'description': 'selected_parameter_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_parameter&quot;. C++ signature :  bool selected_parameter_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_parameter_has_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7352, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_scene_has_listener()', 'description': 'selected_scene_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_scene&quot;. C++ signature :  bool selected_scene_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_scene_has_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7354, 'tag': 'listener Method', 'name': 'Live.Song.Song.View.selected_track_has_listener()', 'description': 'selected_track_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_track&quot;. C++ signature :  bool selected_track_has_listener(TPyViewData&lt;ASong&gt;,boost::python::api::object)', 'path': ['Live', 'Song', 'Song', 'View', 'selected_track_has_listener()'], 'hierarchy': 4, 'ref_parent': 7014, 'children': [], 'group': 'listener Method'},
{'ref': 7440, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_frequency_dial_mode_list_listener()', 'description': 'add_frequency_dial_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;frequency_dial_mode_list&quot; has changed. C++ signature :  void add_frequency_dial_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_frequency_dial_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7441, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_frequency_dial_mode_listener()', 'description': 'add_frequency_dial_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;frequency_dial_mode&quot; has changed. C++ signature :  void add_frequency_dial_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_frequency_dial_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7442, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7443, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7444, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7445, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_midi_gate_list_listener()', 'description': 'add_midi_gate_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_gate_list&quot; has changed. C++ signature :  void add_midi_gate_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_midi_gate_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7446, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_midi_gate_listener()', 'description': 'add_midi_gate_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_gate&quot; has changed. C++ signature :  void add_midi_gate_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_midi_gate_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7447, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mod_mode_list_listener()', 'description': 'add_mod_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_mode_list&quot; has changed. C++ signature :  void add_mod_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mod_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7448, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mod_mode_listener()', 'description': 'add_mod_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_mode&quot; has changed. C++ signature :  void add_mod_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mod_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7449, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mono_poly_list_listener()', 'description': 'add_mono_poly_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly_list&quot; has changed. C++ signature :  void add_mono_poly_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mono_poly_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7450, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mono_poly_listener()', 'description': 'add_mono_poly_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly&quot; has changed. C++ signature :  void add_mono_poly_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7451, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7452, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7453, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_pitch_bend_range_listener()', 'description': 'add_pitch_bend_range_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_bend_range&quot; has changed. C++ signature :  void add_pitch_bend_range_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7454, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_pitch_mode_list_listener()', 'description': 'add_pitch_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_mode_list&quot; has changed. C++ signature :  void add_pitch_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_pitch_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7455, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_pitch_mode_listener()', 'description': 'add_pitch_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_mode&quot; has changed. C++ signature :  void add_pitch_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_pitch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7456, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_polyphony_listener()', 'description': 'add_polyphony_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;polyphony&quot; has changed. C++ signature :  void add_polyphony_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_polyphony_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7457, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.frequency_dial_mode_has_listener()', 'description': 'frequency_dial_mode_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;frequency_dial_mode&quot;. C++ signature :  bool frequency_dial_mode_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'frequency_dial_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7458, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.frequency_dial_mode_list_has_listener()', 'description': 'frequency_dial_mode_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;frequency_dial_mode_list&quot;. C++ signature :  bool frequency_dial_mode_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'frequency_dial_mode_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7459, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7460, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7461, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7462, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.midi_gate_has_listener()', 'description': 'midi_gate_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_gate&quot;. C++ signature :  bool midi_gate_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'midi_gate_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7463, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.midi_gate_list_has_listener()', 'description': 'midi_gate_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_gate_list&quot;. C++ signature :  bool midi_gate_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'midi_gate_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7464, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mod_mode_has_listener()', 'description': 'mod_mode_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_mode&quot;. C++ signature :  bool mod_mode_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mod_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7465, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mod_mode_list_has_listener()', 'description': 'mod_mode_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_mode_list&quot;. C++ signature :  bool mod_mode_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mod_mode_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7466, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mono_poly_has_listener()', 'description': 'mono_poly_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly&quot;. C++ signature :  bool mono_poly_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mono_poly_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7467, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mono_poly_list_has_listener()', 'description': 'mono_poly_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly_list&quot;. C++ signature :  bool mono_poly_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mono_poly_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7468, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7469, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7470, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.pitch_bend_range_has_listener()', 'description': 'pitch_bend_range_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_bend_range&quot;. C++ signature :  bool pitch_bend_range_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7471, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.pitch_mode_has_listener()', 'description': 'pitch_mode_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_mode&quot;. C++ signature :  bool pitch_mode_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'pitch_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7472, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.pitch_mode_list_has_listener()', 'description': 'pitch_mode_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_mode_list&quot;. C++ signature :  bool pitch_mode_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'pitch_mode_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7473, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.polyphony_has_listener()', 'description': 'polyphony_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;polyphony&quot;. C++ signature :  bool polyphony_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'polyphony_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7474, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_frequency_dial_mode_list_listener()', 'description': 'remove_frequency_dial_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;frequency_dial_mode_list&quot;. C++ signature :  void remove_frequency_dial_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_frequency_dial_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7475, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_frequency_dial_mode_listener()', 'description': 'remove_frequency_dial_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;frequency_dial_mode&quot;. C++ signature :  void remove_frequency_dial_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_frequency_dial_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7476, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7477, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7478, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7479, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_midi_gate_list_listener()', 'description': 'remove_midi_gate_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_gate_list&quot;. C++ signature :  void remove_midi_gate_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_midi_gate_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7480, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_midi_gate_listener()', 'description': 'remove_midi_gate_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_gate&quot;. C++ signature :  void remove_midi_gate_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_midi_gate_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7481, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mod_mode_list_listener()', 'description': 'remove_mod_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_mode_list&quot;. C++ signature :  void remove_mod_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mod_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7482, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mod_mode_listener()', 'description': 'remove_mod_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_mode&quot;. C++ signature :  void remove_mod_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mod_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7483, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mono_poly_list_listener()', 'description': 'remove_mono_poly_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mono_poly_list&quot;. C++ signature :  void remove_mono_poly_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mono_poly_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7484, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mono_poly_listener()', 'description': 'remove_mono_poly_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mono_poly&quot;. C++ signature :  void remove_mono_poly_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7485, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7486, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7487, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_pitch_bend_range_listener()', 'description': 'remove_pitch_bend_range_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_bend_range&quot;. C++ signature :  void remove_pitch_bend_range_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7488, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_pitch_mode_list_listener()', 'description': 'remove_pitch_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_mode_list&quot;. C++ signature :  void remove_pitch_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_pitch_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7489, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_pitch_mode_listener()', 'description': 'remove_pitch_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_mode&quot;. C++ signature :  void remove_pitch_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_pitch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7490, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_polyphony_listener()', 'description': 'remove_polyphony_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;polyphony&quot;. C++ signature :  void remove_polyphony_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_polyphony_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7521, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_frequency_dial_mode_list_listener()', 'description': 'add_frequency_dial_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;frequency_dial_mode_list&quot; has changed. C++ signature :  void add_frequency_dial_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_frequency_dial_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7522, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_frequency_dial_mode_listener()', 'description': 'add_frequency_dial_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;frequency_dial_mode&quot; has changed. C++ signature :  void add_frequency_dial_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_frequency_dial_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7523, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7524, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7525, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7526, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_midi_gate_list_listener()', 'description': 'add_midi_gate_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_gate_list&quot; has changed. C++ signature :  void add_midi_gate_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_midi_gate_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7527, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_midi_gate_listener()', 'description': 'add_midi_gate_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;midi_gate&quot; has changed. C++ signature :  void add_midi_gate_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_midi_gate_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7528, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mod_mode_list_listener()', 'description': 'add_mod_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_mode_list&quot; has changed. C++ signature :  void add_mod_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mod_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7529, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mod_mode_listener()', 'description': 'add_mod_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mod_mode&quot; has changed. C++ signature :  void add_mod_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mod_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7530, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mono_poly_list_listener()', 'description': 'add_mono_poly_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly_list&quot; has changed. C++ signature :  void add_mono_poly_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mono_poly_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7531, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_mono_poly_listener()', 'description': 'add_mono_poly_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly&quot; has changed. C++ signature :  void add_mono_poly_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7532, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7533, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7534, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_pitch_bend_range_listener()', 'description': 'add_pitch_bend_range_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_bend_range&quot; has changed. C++ signature :  void add_pitch_bend_range_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7535, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_pitch_mode_list_listener()', 'description': 'add_pitch_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_mode_list&quot; has changed. C++ signature :  void add_pitch_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_pitch_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7536, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_pitch_mode_listener()', 'description': 'add_pitch_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;pitch_mode&quot; has changed. C++ signature :  void add_pitch_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_pitch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7537, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.add_polyphony_listener()', 'description': 'add_polyphony_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;polyphony&quot; has changed. C++ signature :  void add_polyphony_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'add_polyphony_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7544, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.frequency_dial_mode_has_listener()', 'description': 'frequency_dial_mode_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;frequency_dial_mode&quot;. C++ signature :  bool frequency_dial_mode_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'frequency_dial_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7546, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.frequency_dial_mode_list_has_listener()', 'description': 'frequency_dial_mode_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;frequency_dial_mode_list&quot;. C++ signature :  bool frequency_dial_mode_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'frequency_dial_mode_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7548, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7550, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7552, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7554, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.midi_gate_has_listener()', 'description': 'midi_gate_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_gate&quot;. C++ signature :  bool midi_gate_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'midi_gate_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7556, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.midi_gate_list_has_listener()', 'description': 'midi_gate_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;midi_gate_list&quot;. C++ signature :  bool midi_gate_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'midi_gate_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7558, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mod_mode_has_listener()', 'description': 'mod_mode_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_mode&quot;. C++ signature :  bool mod_mode_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mod_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7560, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mod_mode_list_has_listener()', 'description': 'mod_mode_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mod_mode_list&quot;. C++ signature :  bool mod_mode_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mod_mode_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7562, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mono_poly_has_listener()', 'description': 'mono_poly_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly&quot;. C++ signature :  bool mono_poly_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mono_poly_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7564, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.mono_poly_list_has_listener()', 'description': 'mono_poly_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly_list&quot;. C++ signature :  bool mono_poly_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'mono_poly_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7566, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7568, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7570, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.pitch_bend_range_has_listener()', 'description': 'pitch_bend_range_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_bend_range&quot;. C++ signature :  bool pitch_bend_range_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'pitch_bend_range_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7572, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.pitch_mode_has_listener()', 'description': 'pitch_mode_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_mode&quot;. C++ signature :  bool pitch_mode_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'pitch_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7574, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.pitch_mode_list_has_listener()', 'description': 'pitch_mode_list_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;pitch_mode_list&quot;. C++ signature :  bool pitch_mode_list_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'pitch_mode_list_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7576, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.polyphony_has_listener()', 'description': 'polyphony_has_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;polyphony&quot;. C++ signature :  bool polyphony_has_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'polyphony_has_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7577, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_frequency_dial_mode_list_listener()', 'description': 'remove_frequency_dial_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;frequency_dial_mode_list&quot;. C++ signature :  void remove_frequency_dial_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_frequency_dial_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7578, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_frequency_dial_mode_listener()', 'description': 'remove_frequency_dial_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;frequency_dial_mode&quot;. C++ signature :  void remove_frequency_dial_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_frequency_dial_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7579, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7580, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7581, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7582, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_midi_gate_list_listener()', 'description': 'remove_midi_gate_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_gate_list&quot;. C++ signature :  void remove_midi_gate_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_midi_gate_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7583, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_midi_gate_listener()', 'description': 'remove_midi_gate_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;midi_gate&quot;. C++ signature :  void remove_midi_gate_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_midi_gate_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7584, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mod_mode_list_listener()', 'description': 'remove_mod_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_mode_list&quot;. C++ signature :  void remove_mod_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mod_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7585, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mod_mode_listener()', 'description': 'remove_mod_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mod_mode&quot;. C++ signature :  void remove_mod_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mod_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7586, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mono_poly_list_listener()', 'description': 'remove_mono_poly_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mono_poly_list&quot;. C++ signature :  void remove_mono_poly_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mono_poly_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7587, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_mono_poly_listener()', 'description': 'remove_mono_poly_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mono_poly&quot;. C++ signature :  void remove_mono_poly_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7588, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7589, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7590, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_pitch_bend_range_listener()', 'description': 'remove_pitch_bend_range_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_bend_range&quot;. C++ signature :  void remove_pitch_bend_range_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_pitch_bend_range_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7591, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_pitch_mode_list_listener()', 'description': 'remove_pitch_mode_list_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_mode_list&quot;. C++ signature :  void remove_pitch_mode_list_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_pitch_mode_list_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7592, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_pitch_mode_listener()', 'description': 'remove_pitch_mode_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;pitch_mode&quot;. C++ signature :  void remove_pitch_mode_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_pitch_mode_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7593, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.remove_polyphony_listener()', 'description': 'remove_polyphony_listener( (SpectralResonatorDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;polyphony&quot;. C++ signature :  void remove_polyphony_listener(TTransmuteDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'remove_polyphony_listener()'], 'hierarchy': 3, 'ref_parent': 7439, 'children': [], 'group': 'listener Method'},
{'ref': 7598, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 7492, 'children': [], 'group': 'listener Method'},
{'ref': 7599, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 7492, 'children': [], 'group': 'listener Method'},
{'ref': 7600, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 7492, 'children': [], 'group': 'listener Method'},
{'ref': 7629, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 7492, 'children': [], 'group': 'listener Method'},
{'ref': 7632, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 7492, 'children': [], 'group': 'listener Method'},
{'ref': 7633, 'tag': 'listener Method', 'name': 'Live.SpectralResonatorDevice.SpectralResonatorDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'SpectralResonatorDevice', 'SpectralResonatorDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 7492, 'children': [], 'group': 'listener Method'},
{'ref': 8046, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_arm_listener()', 'description': 'add_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;arm&quot; has changed. C++ signature :  void add_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8047, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_arrangement_clips_listener()', 'description': 'add_arrangement_clips_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;arrangement_clips&quot; has changed. C++ signature :  void add_arrangement_clips_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_arrangement_clips_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8048, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_input_routing_channels_listener()', 'description': 'add_available_input_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_channels&quot; has changed. C++ signature :  void add_available_input_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8049, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_input_routing_types_listener()', 'description': 'add_available_input_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_types&quot; has changed. C++ signature :  void add_available_input_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8050, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_output_routing_channels_listener()', 'description': 'add_available_output_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_output_routing_channels&quot; has changed. C++ signature :  void add_available_output_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_output_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8051, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_output_routing_types_listener()', 'description': 'add_available_output_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_output_routing_types&quot; has changed. C++ signature :  void add_available_output_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_output_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8052, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_clip_slots_listener()', 'description': 'add_clip_slots_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;clip_slots&quot; has changed. C++ signature :  void add_clip_slots_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8053, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_color_index_listener()', 'description': 'add_color_index_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8054, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_color_listener()', 'description': 'add_color_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8055, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_input_routing_listener()', 'description': 'add_current_input_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_input_routing&quot; has changed. C++ signature :  void add_current_input_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_input_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8056, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_input_sub_routing_listener()', 'description': 'add_current_input_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_input_sub_routing&quot; has changed. C++ signature :  void add_current_input_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_input_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8057, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_monitoring_state_listener()', 'description': 'add_current_monitoring_state_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_monitoring_state&quot; has changed. C++ signature :  void add_current_monitoring_state_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_monitoring_state_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8058, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_output_routing_listener()', 'description': 'add_current_output_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_output_routing&quot; has changed. C++ signature :  void add_current_output_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_output_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8059, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_output_sub_routing_listener()', 'description': 'add_current_output_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_output_sub_routing&quot; has changed. C++ signature :  void add_current_output_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_output_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8060, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_data_listener()', 'description': 'add_data_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;data&quot; has changed. C++ signature :  void add_data_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_data_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8061, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_devices_listener()', 'description': 'add_devices_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;devices&quot; has changed. C++ signature :  void add_devices_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_devices_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8062, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_fired_slot_index_listener()', 'description': 'add_fired_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;fired_slot_index&quot; has changed. C++ signature :  void add_fired_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_fired_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8063, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_audio_input_listener()', 'description': 'add_has_audio_input_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_audio_input&quot; has changed. C++ signature :  void add_has_audio_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_audio_input_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8064, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_audio_output_listener()', 'description': 'add_has_audio_output_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_audio_output&quot; has changed. C++ signature :  void add_has_audio_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_audio_output_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8065, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_midi_input_listener()', 'description': 'add_has_midi_input_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_midi_input&quot; has changed. C++ signature :  void add_has_midi_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_midi_input_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8066, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_midi_output_listener()', 'description': 'add_has_midi_output_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_midi_output&quot; has changed. C++ signature :  void add_has_midi_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_midi_output_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8067, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_implicit_arm_listener()', 'description': 'add_implicit_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;implicit_arm&quot; has changed. C++ signature :  void add_implicit_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_implicit_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8068, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_meter_left_listener()', 'description': 'add_input_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_meter_left&quot; has changed. C++ signature :  void add_input_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8069, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_meter_level_listener()', 'description': 'add_input_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_meter_level&quot; has changed. C++ signature :  void add_input_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8070, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_meter_right_listener()', 'description': 'add_input_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_meter_right&quot; has changed. C++ signature :  void add_input_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8071, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_routing_channel_listener()', 'description': 'add_input_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_channel&quot; has changed. C++ signature :  void add_input_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8072, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_routing_type_listener()', 'description': 'add_input_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_type&quot; has changed. C++ signature :  void add_input_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8073, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_routings_listener()', 'description': 'add_input_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routings&quot; has changed. C++ signature :  void add_input_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8074, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_sub_routings_listener()', 'description': 'add_input_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_sub_routings&quot; has changed. C++ signature :  void add_input_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8075, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_is_frozen_listener()', 'description': 'add_is_frozen_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_frozen&quot; has changed. C++ signature :  void add_is_frozen_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_is_frozen_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8076, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_is_showing_chains_listener()', 'description': 'add_is_showing_chains_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_showing_chains&quot; has changed. C++ signature :  void add_is_showing_chains_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8077, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_mute_listener()', 'description': 'add_mute_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8078, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_muted_via_solo_listener()', 'description': 'add_muted_via_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted_via_solo&quot; has changed. C++ signature :  void add_muted_via_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8079, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_name_listener()', 'description': 'add_name_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8080, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_meter_left_listener()', 'description': 'add_output_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_meter_left&quot; has changed. C++ signature :  void add_output_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8081, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_meter_level_listener()', 'description': 'add_output_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_meter_level&quot; has changed. C++ signature :  void add_output_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8082, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_meter_right_listener()', 'description': 'add_output_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_meter_right&quot; has changed. C++ signature :  void add_output_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8083, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_routing_channel_listener()', 'description': 'add_output_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_routing_channel&quot; has changed. C++ signature :  void add_output_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8084, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_routing_type_listener()', 'description': 'add_output_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_routing_type&quot; has changed. C++ signature :  void add_output_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8085, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_routings_listener()', 'description': 'add_output_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_routings&quot; has changed. C++ signature :  void add_output_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8086, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_sub_routings_listener()', 'description': 'add_output_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_sub_routings&quot; has changed. C++ signature :  void add_output_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8087, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_performance_impact_listener()', 'description': 'add_performance_impact_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;performance_impact&quot; has changed. C++ signature :  void add_performance_impact_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_performance_impact_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8088, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_playing_slot_index_listener()', 'description': 'add_playing_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_slot_index&quot; has changed. C++ signature :  void add_playing_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_playing_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8089, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_solo_listener()', 'description': 'add_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8090, 'tag': 'listener Method', 'name': 'Live.Track.Track.arm_has_listener()', 'description': 'arm_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;arm&quot;. C++ signature :  bool arm_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'arm_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8091, 'tag': 'listener Method', 'name': 'Live.Track.Track.arrangement_clips_has_listener()', 'description': 'arrangement_clips_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;arrangement_clips&quot;. C++ signature :  bool arrangement_clips_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'arrangement_clips_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8092, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_input_routing_channels_has_listener()', 'description': 'available_input_routing_channels_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_channels&quot;. C++ signature :  bool available_input_routing_channels_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_input_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8093, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_input_routing_types_has_listener()', 'description': 'available_input_routing_types_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_types&quot;. C++ signature :  bool available_input_routing_types_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_input_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8094, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_output_routing_channels_has_listener()', 'description': 'available_output_routing_channels_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_output_routing_channels&quot;. C++ signature :  bool available_output_routing_channels_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_output_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8095, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_output_routing_types_has_listener()', 'description': 'available_output_routing_types_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_output_routing_types&quot;. C++ signature :  bool available_output_routing_types_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_output_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8096, 'tag': 'listener Method', 'name': 'Live.Track.Track.clip_slots_has_listener()', 'description': 'clip_slots_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;clip_slots&quot;. C++ signature :  bool clip_slots_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'clip_slots_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8097, 'tag': 'listener Method', 'name': 'Live.Track.Track.color_has_listener()', 'description': 'color_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8098, 'tag': 'listener Method', 'name': 'Live.Track.Track.color_index_has_listener()', 'description': 'color_index_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8099, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_input_routing_has_listener()', 'description': 'current_input_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_input_routing&quot;. C++ signature :  bool current_input_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_input_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8100, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_input_sub_routing_has_listener()', 'description': 'current_input_sub_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_input_sub_routing&quot;. C++ signature :  bool current_input_sub_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_input_sub_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8101, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_monitoring_state_has_listener()', 'description': 'current_monitoring_state_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_monitoring_state&quot;. C++ signature :  bool current_monitoring_state_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_monitoring_state_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8102, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_output_routing_has_listener()', 'description': 'current_output_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_output_routing&quot;. C++ signature :  bool current_output_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_output_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8103, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_output_sub_routing_has_listener()', 'description': 'current_output_sub_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_output_sub_routing&quot;. C++ signature :  bool current_output_sub_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_output_sub_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8104, 'tag': 'listener Method', 'name': 'Live.Track.Track.data_has_listener()', 'description': 'data_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;data&quot;. C++ signature :  bool data_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'data_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8107, 'tag': 'listener Method', 'name': 'Live.Track.Track.devices_has_listener()', 'description': 'devices_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;devices&quot;. C++ signature :  bool devices_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'devices_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8110, 'tag': 'listener Method', 'name': 'Live.Track.Track.fired_slot_index_has_listener()', 'description': 'fired_slot_index_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;fired_slot_index&quot;. C++ signature :  bool fired_slot_index_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'fired_slot_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8112, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_audio_input_has_listener()', 'description': 'has_audio_input_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_audio_input&quot;. C++ signature :  bool has_audio_input_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_audio_input_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8113, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_audio_output_has_listener()', 'description': 'has_audio_output_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_audio_output&quot;. C++ signature :  bool has_audio_output_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_audio_output_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8114, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_midi_input_has_listener()', 'description': 'has_midi_input_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_midi_input&quot;. C++ signature :  bool has_midi_input_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_midi_input_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8115, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_midi_output_has_listener()', 'description': 'has_midi_output_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_midi_output&quot;. C++ signature :  bool has_midi_output_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_midi_output_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8116, 'tag': 'listener Method', 'name': 'Live.Track.Track.implicit_arm_has_listener()', 'description': 'implicit_arm_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;implicit_arm&quot;. C++ signature :  bool implicit_arm_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'implicit_arm_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8117, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_meter_left_has_listener()', 'description': 'input_meter_left_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_meter_left&quot;. C++ signature :  bool input_meter_left_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_meter_left_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8118, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_meter_level_has_listener()', 'description': 'input_meter_level_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_meter_level&quot;. C++ signature :  bool input_meter_level_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_meter_level_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8119, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_meter_right_has_listener()', 'description': 'input_meter_right_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_meter_right&quot;. C++ signature :  bool input_meter_right_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_meter_right_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8120, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_routing_channel_has_listener()', 'description': 'input_routing_channel_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_channel&quot;. C++ signature :  bool input_routing_channel_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8121, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_routing_type_has_listener()', 'description': 'input_routing_type_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_type&quot;. C++ signature :  bool input_routing_type_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8122, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_routings_has_listener()', 'description': 'input_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routings&quot;. C++ signature :  bool input_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8123, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_sub_routings_has_listener()', 'description': 'input_sub_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_sub_routings&quot;. C++ signature :  bool input_sub_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_sub_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8124, 'tag': 'listener Method', 'name': 'Live.Track.Track.is_frozen_has_listener()', 'description': 'is_frozen_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_frozen&quot;. C++ signature :  bool is_frozen_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'is_frozen_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8125, 'tag': 'listener Method', 'name': 'Live.Track.Track.is_showing_chains_has_listener()', 'description': 'is_showing_chains_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_showing_chains&quot;. C++ signature :  bool is_showing_chains_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'is_showing_chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8127, 'tag': 'listener Method', 'name': 'Live.Track.Track.mute_has_listener()', 'description': 'mute_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8128, 'tag': 'listener Method', 'name': 'Live.Track.Track.muted_via_solo_has_listener()', 'description': 'muted_via_solo_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted_via_solo&quot;. C++ signature :  bool muted_via_solo_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'muted_via_solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8129, 'tag': 'listener Method', 'name': 'Live.Track.Track.name_has_listener()', 'description': 'name_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8130, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_meter_left_has_listener()', 'description': 'output_meter_left_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_meter_left&quot;. C++ signature :  bool output_meter_left_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_meter_left_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8131, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_meter_level_has_listener()', 'description': 'output_meter_level_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_meter_level&quot;. C++ signature :  bool output_meter_level_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_meter_level_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8132, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_meter_right_has_listener()', 'description': 'output_meter_right_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_meter_right&quot;. C++ signature :  bool output_meter_right_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_meter_right_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8133, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_routing_channel_has_listener()', 'description': 'output_routing_channel_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_routing_channel&quot;. C++ signature :  bool output_routing_channel_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8134, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_routing_type_has_listener()', 'description': 'output_routing_type_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_routing_type&quot;. C++ signature :  bool output_routing_type_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8135, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_routings_has_listener()', 'description': 'output_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_routings&quot;. C++ signature :  bool output_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8136, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_sub_routings_has_listener()', 'description': 'output_sub_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_sub_routings&quot;. C++ signature :  bool output_sub_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_sub_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8137, 'tag': 'listener Method', 'name': 'Live.Track.Track.performance_impact_has_listener()', 'description': 'performance_impact_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;performance_impact&quot;. C++ signature :  bool performance_impact_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'performance_impact_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8138, 'tag': 'listener Method', 'name': 'Live.Track.Track.playing_slot_index_has_listener()', 'description': 'playing_slot_index_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_slot_index&quot;. C++ signature :  bool playing_slot_index_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'playing_slot_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8139, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_arm_listener()', 'description': 'remove_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;arm&quot;. C++ signature :  void remove_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8140, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_arrangement_clips_listener()', 'description': 'remove_arrangement_clips_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;arrangement_clips&quot;. C++ signature :  void remove_arrangement_clips_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_arrangement_clips_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8141, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_input_routing_channels_listener()', 'description': 'remove_available_input_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_channels&quot;. C++ signature :  void remove_available_input_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8142, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_input_routing_types_listener()', 'description': 'remove_available_input_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_types&quot;. C++ signature :  void remove_available_input_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8143, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_output_routing_channels_listener()', 'description': 'remove_available_output_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_output_routing_channels&quot;. C++ signature :  void remove_available_output_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_output_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8144, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_output_routing_types_listener()', 'description': 'remove_available_output_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_output_routing_types&quot;. C++ signature :  void remove_available_output_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_output_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8145, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_clip_slots_listener()', 'description': 'remove_clip_slots_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;clip_slots&quot;. C++ signature :  void remove_clip_slots_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8146, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8147, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_color_listener()', 'description': 'remove_color_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8148, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_input_routing_listener()', 'description': 'remove_current_input_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_input_routing&quot;. C++ signature :  void remove_current_input_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_input_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8149, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_input_sub_routing_listener()', 'description': 'remove_current_input_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_input_sub_routing&quot;. C++ signature :  void remove_current_input_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_input_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8150, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_monitoring_state_listener()', 'description': 'remove_current_monitoring_state_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_monitoring_state&quot;. C++ signature :  void remove_current_monitoring_state_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_monitoring_state_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8151, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_output_routing_listener()', 'description': 'remove_current_output_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_output_routing&quot;. C++ signature :  void remove_current_output_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_output_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8152, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_output_sub_routing_listener()', 'description': 'remove_current_output_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_output_sub_routing&quot;. C++ signature :  void remove_current_output_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_output_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8153, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_data_listener()', 'description': 'remove_data_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;data&quot;. C++ signature :  void remove_data_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_data_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8154, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_devices_listener()', 'description': 'remove_devices_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;devices&quot;. C++ signature :  void remove_devices_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_devices_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8155, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_fired_slot_index_listener()', 'description': 'remove_fired_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;fired_slot_index&quot;. C++ signature :  void remove_fired_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_fired_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8156, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_audio_input_listener()', 'description': 'remove_has_audio_input_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_audio_input&quot;. C++ signature :  void remove_has_audio_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_audio_input_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8157, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_audio_output_listener()', 'description': 'remove_has_audio_output_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_audio_output&quot;. C++ signature :  void remove_has_audio_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_audio_output_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8158, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_midi_input_listener()', 'description': 'remove_has_midi_input_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_midi_input&quot;. C++ signature :  void remove_has_midi_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_midi_input_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8159, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_midi_output_listener()', 'description': 'remove_has_midi_output_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_midi_output&quot;. C++ signature :  void remove_has_midi_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_midi_output_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8160, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_implicit_arm_listener()', 'description': 'remove_implicit_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;implicit_arm&quot;. C++ signature :  void remove_implicit_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_implicit_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8161, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_meter_left_listener()', 'description': 'remove_input_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_meter_left&quot;. C++ signature :  void remove_input_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8162, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_meter_level_listener()', 'description': 'remove_input_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_meter_level&quot;. C++ signature :  void remove_input_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8163, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_meter_right_listener()', 'description': 'remove_input_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_meter_right&quot;. C++ signature :  void remove_input_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8164, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_routing_channel_listener()', 'description': 'remove_input_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_channel&quot;. C++ signature :  void remove_input_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8165, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_routing_type_listener()', 'description': 'remove_input_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_type&quot;. C++ signature :  void remove_input_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8166, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_routings_listener()', 'description': 'remove_input_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routings&quot;. C++ signature :  void remove_input_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8167, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_sub_routings_listener()', 'description': 'remove_input_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_sub_routings&quot;. C++ signature :  void remove_input_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8168, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_is_frozen_listener()', 'description': 'remove_is_frozen_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_frozen&quot;. C++ signature :  void remove_is_frozen_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_is_frozen_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8169, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_is_showing_chains_listener()', 'description': 'remove_is_showing_chains_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_showing_chains&quot;. C++ signature :  void remove_is_showing_chains_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8170, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_mute_listener()', 'description': 'remove_mute_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8171, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_muted_via_solo_listener()', 'description': 'remove_muted_via_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted_via_solo&quot;. C++ signature :  void remove_muted_via_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8172, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_name_listener()', 'description': 'remove_name_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8173, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_meter_left_listener()', 'description': 'remove_output_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_meter_left&quot;. C++ signature :  void remove_output_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8174, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_meter_level_listener()', 'description': 'remove_output_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_meter_level&quot;. C++ signature :  void remove_output_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8175, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_meter_right_listener()', 'description': 'remove_output_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_meter_right&quot;. C++ signature :  void remove_output_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8176, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_routing_channel_listener()', 'description': 'remove_output_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_routing_channel&quot;. C++ signature :  void remove_output_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8177, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_routing_type_listener()', 'description': 'remove_output_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_routing_type&quot;. C++ signature :  void remove_output_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8178, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_routings_listener()', 'description': 'remove_output_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_routings&quot;. C++ signature :  void remove_output_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8179, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_sub_routings_listener()', 'description': 'remove_output_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_sub_routings&quot;. C++ signature :  void remove_output_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8180, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_performance_impact_listener()', 'description': 'remove_performance_impact_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;performance_impact&quot;. C++ signature :  void remove_performance_impact_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_performance_impact_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8181, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_playing_slot_index_listener()', 'description': 'remove_playing_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_slot_index&quot;. C++ signature :  void remove_playing_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_playing_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8182, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_solo_listener()', 'description': 'remove_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8184, 'tag': 'listener Method', 'name': 'Live.Track.Track.solo_has_listener()', 'description': 'solo_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8215, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_arm_listener()', 'description': 'add_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;arm&quot; has changed. C++ signature :  void add_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8216, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_arrangement_clips_listener()', 'description': 'add_arrangement_clips_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;arrangement_clips&quot; has changed. C++ signature :  void add_arrangement_clips_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_arrangement_clips_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8217, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_input_routing_channels_listener()', 'description': 'add_available_input_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_channels&quot; has changed. C++ signature :  void add_available_input_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8218, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_input_routing_types_listener()', 'description': 'add_available_input_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_input_routing_types&quot; has changed. C++ signature :  void add_available_input_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8219, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_output_routing_channels_listener()', 'description': 'add_available_output_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_output_routing_channels&quot; has changed. C++ signature :  void add_available_output_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_output_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8220, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_available_output_routing_types_listener()', 'description': 'add_available_output_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;available_output_routing_types&quot; has changed. C++ signature :  void add_available_output_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_available_output_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8221, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_clip_slots_listener()', 'description': 'add_clip_slots_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;clip_slots&quot; has changed. C++ signature :  void add_clip_slots_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8222, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_color_index_listener()', 'description': 'add_color_index_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color_index&quot; has changed. C++ signature :  void add_color_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8223, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_color_listener()', 'description': 'add_color_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;color&quot; has changed. C++ signature :  void add_color_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_color_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8224, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_input_routing_listener()', 'description': 'add_current_input_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_input_routing&quot; has changed. C++ signature :  void add_current_input_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_input_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8225, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_input_sub_routing_listener()', 'description': 'add_current_input_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_input_sub_routing&quot; has changed. C++ signature :  void add_current_input_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_input_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8226, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_monitoring_state_listener()', 'description': 'add_current_monitoring_state_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_monitoring_state&quot; has changed. C++ signature :  void add_current_monitoring_state_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_monitoring_state_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8227, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_output_routing_listener()', 'description': 'add_current_output_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_output_routing&quot; has changed. C++ signature :  void add_current_output_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_output_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8228, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_current_output_sub_routing_listener()', 'description': 'add_current_output_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;current_output_sub_routing&quot; has changed. C++ signature :  void add_current_output_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_current_output_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8229, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_data_listener()', 'description': 'add_data_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;data&quot; has changed. C++ signature :  void add_data_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_data_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8230, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_devices_listener()', 'description': 'add_devices_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;devices&quot; has changed. C++ signature :  void add_devices_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_devices_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8231, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_fired_slot_index_listener()', 'description': 'add_fired_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;fired_slot_index&quot; has changed. C++ signature :  void add_fired_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_fired_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8232, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_audio_input_listener()', 'description': 'add_has_audio_input_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_audio_input&quot; has changed. C++ signature :  void add_has_audio_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_audio_input_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8233, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_audio_output_listener()', 'description': 'add_has_audio_output_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_audio_output&quot; has changed. C++ signature :  void add_has_audio_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_audio_output_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8234, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_midi_input_listener()', 'description': 'add_has_midi_input_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_midi_input&quot; has changed. C++ signature :  void add_has_midi_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_midi_input_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8235, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_has_midi_output_listener()', 'description': 'add_has_midi_output_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;has_midi_output&quot; has changed. C++ signature :  void add_has_midi_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_has_midi_output_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8236, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_implicit_arm_listener()', 'description': 'add_implicit_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;implicit_arm&quot; has changed. C++ signature :  void add_implicit_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_implicit_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8237, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_meter_left_listener()', 'description': 'add_input_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_meter_left&quot; has changed. C++ signature :  void add_input_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8238, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_meter_level_listener()', 'description': 'add_input_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_meter_level&quot; has changed. C++ signature :  void add_input_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8239, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_meter_right_listener()', 'description': 'add_input_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_meter_right&quot; has changed. C++ signature :  void add_input_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8240, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_routing_channel_listener()', 'description': 'add_input_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_channel&quot; has changed. C++ signature :  void add_input_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8241, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_routing_type_listener()', 'description': 'add_input_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routing_type&quot; has changed. C++ signature :  void add_input_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8242, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_routings_listener()', 'description': 'add_input_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_routings&quot; has changed. C++ signature :  void add_input_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8243, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_input_sub_routings_listener()', 'description': 'add_input_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;input_sub_routings&quot; has changed. C++ signature :  void add_input_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_input_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8244, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_is_frozen_listener()', 'description': 'add_is_frozen_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_frozen&quot; has changed. C++ signature :  void add_is_frozen_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_is_frozen_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8245, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_is_showing_chains_listener()', 'description': 'add_is_showing_chains_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_showing_chains&quot; has changed. C++ signature :  void add_is_showing_chains_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8246, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_mute_listener()', 'description': 'add_mute_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mute&quot; has changed. C++ signature :  void add_mute_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_mute_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8247, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_muted_via_solo_listener()', 'description': 'add_muted_via_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;muted_via_solo&quot; has changed. C++ signature :  void add_muted_via_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8248, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_name_listener()', 'description': 'add_name_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8249, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_meter_left_listener()', 'description': 'add_output_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_meter_left&quot; has changed. C++ signature :  void add_output_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8250, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_meter_level_listener()', 'description': 'add_output_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_meter_level&quot; has changed. C++ signature :  void add_output_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8251, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_meter_right_listener()', 'description': 'add_output_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_meter_right&quot; has changed. C++ signature :  void add_output_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8252, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_routing_channel_listener()', 'description': 'add_output_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_routing_channel&quot; has changed. C++ signature :  void add_output_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8253, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_routing_type_listener()', 'description': 'add_output_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_routing_type&quot; has changed. C++ signature :  void add_output_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8254, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_routings_listener()', 'description': 'add_output_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_routings&quot; has changed. C++ signature :  void add_output_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8255, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_output_sub_routings_listener()', 'description': 'add_output_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;output_sub_routings&quot; has changed. C++ signature :  void add_output_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_output_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8256, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_performance_impact_listener()', 'description': 'add_performance_impact_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;performance_impact&quot; has changed. C++ signature :  void add_performance_impact_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_performance_impact_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8257, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_playing_slot_index_listener()', 'description': 'add_playing_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;playing_slot_index&quot; has changed. C++ signature :  void add_playing_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_playing_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8258, 'tag': 'listener Method', 'name': 'Live.Track.Track.add_solo_listener()', 'description': 'add_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;solo&quot; has changed. C++ signature :  void add_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'add_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8260, 'tag': 'listener Method', 'name': 'Live.Track.Track.arm_has_listener()', 'description': 'arm_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;arm&quot;. C++ signature :  bool arm_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'arm_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8262, 'tag': 'listener Method', 'name': 'Live.Track.Track.arrangement_clips_has_listener()', 'description': 'arrangement_clips_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;arrangement_clips&quot;. C++ signature :  bool arrangement_clips_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'arrangement_clips_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8264, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_input_routing_channels_has_listener()', 'description': 'available_input_routing_channels_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_channels&quot;. C++ signature :  bool available_input_routing_channels_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_input_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8266, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_input_routing_types_has_listener()', 'description': 'available_input_routing_types_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_input_routing_types&quot;. C++ signature :  bool available_input_routing_types_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_input_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8268, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_output_routing_channels_has_listener()', 'description': 'available_output_routing_channels_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_output_routing_channels&quot;. C++ signature :  bool available_output_routing_channels_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_output_routing_channels_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8270, 'tag': 'listener Method', 'name': 'Live.Track.Track.available_output_routing_types_has_listener()', 'description': 'available_output_routing_types_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;available_output_routing_types&quot;. C++ signature :  bool available_output_routing_types_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'available_output_routing_types_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8276, 'tag': 'listener Method', 'name': 'Live.Track.Track.clip_slots_has_listener()', 'description': 'clip_slots_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;clip_slots&quot;. C++ signature :  bool clip_slots_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'clip_slots_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8278, 'tag': 'listener Method', 'name': 'Live.Track.Track.color_has_listener()', 'description': 'color_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color&quot;. C++ signature :  bool color_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'color_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8280, 'tag': 'listener Method', 'name': 'Live.Track.Track.color_index_has_listener()', 'description': 'color_index_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;color_index&quot;. C++ signature :  bool color_index_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'color_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8282, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_input_routing_has_listener()', 'description': 'current_input_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_input_routing&quot;. C++ signature :  bool current_input_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_input_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8284, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_input_sub_routing_has_listener()', 'description': 'current_input_sub_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_input_sub_routing&quot;. C++ signature :  bool current_input_sub_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_input_sub_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8286, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_monitoring_state_has_listener()', 'description': 'current_monitoring_state_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_monitoring_state&quot;. C++ signature :  bool current_monitoring_state_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_monitoring_state_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8288, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_output_routing_has_listener()', 'description': 'current_output_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_output_routing&quot;. C++ signature :  bool current_output_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_output_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8290, 'tag': 'listener Method', 'name': 'Live.Track.Track.current_output_sub_routing_has_listener()', 'description': 'current_output_sub_routing_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;current_output_sub_routing&quot;. C++ signature :  bool current_output_sub_routing_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'current_output_sub_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8291, 'tag': 'listener Method', 'name': 'Live.Track.Track.data_has_listener()', 'description': 'data_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;data&quot;. C++ signature :  bool data_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'data_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8295, 'tag': 'listener Method', 'name': 'Live.Track.Track.devices_has_listener()', 'description': 'devices_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;devices&quot;. C++ signature :  bool devices_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'devices_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8299, 'tag': 'listener Method', 'name': 'Live.Track.Track.fired_slot_index_has_listener()', 'description': 'fired_slot_index_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;fired_slot_index&quot;. C++ signature :  bool fired_slot_index_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'fired_slot_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8304, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_audio_input_has_listener()', 'description': 'has_audio_input_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_audio_input&quot;. C++ signature :  bool has_audio_input_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_audio_input_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8306, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_audio_output_has_listener()', 'description': 'has_audio_output_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_audio_output&quot;. C++ signature :  bool has_audio_output_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_audio_output_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8308, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_midi_input_has_listener()', 'description': 'has_midi_input_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_midi_input&quot;. C++ signature :  bool has_midi_input_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_midi_input_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8310, 'tag': 'listener Method', 'name': 'Live.Track.Track.has_midi_output_has_listener()', 'description': 'has_midi_output_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;has_midi_output&quot;. C++ signature :  bool has_midi_output_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'has_midi_output_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8312, 'tag': 'listener Method', 'name': 'Live.Track.Track.implicit_arm_has_listener()', 'description': 'implicit_arm_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;implicit_arm&quot;. C++ signature :  bool implicit_arm_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'implicit_arm_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8314, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_meter_left_has_listener()', 'description': 'input_meter_left_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_meter_left&quot;. C++ signature :  bool input_meter_left_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_meter_left_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8316, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_meter_level_has_listener()', 'description': 'input_meter_level_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_meter_level&quot;. C++ signature :  bool input_meter_level_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_meter_level_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8318, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_meter_right_has_listener()', 'description': 'input_meter_right_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_meter_right&quot;. C++ signature :  bool input_meter_right_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_meter_right_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8320, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_routing_channel_has_listener()', 'description': 'input_routing_channel_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_channel&quot;. C++ signature :  bool input_routing_channel_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8322, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_routing_type_has_listener()', 'description': 'input_routing_type_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routing_type&quot;. C++ signature :  bool input_routing_type_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8324, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_routings_has_listener()', 'description': 'input_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_routings&quot;. C++ signature :  bool input_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8326, 'tag': 'listener Method', 'name': 'Live.Track.Track.input_sub_routings_has_listener()', 'description': 'input_sub_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;input_sub_routings&quot;. C++ signature :  bool input_sub_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'input_sub_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8329, 'tag': 'listener Method', 'name': 'Live.Track.Track.is_frozen_has_listener()', 'description': 'is_frozen_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_frozen&quot;. C++ signature :  bool is_frozen_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'is_frozen_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8333, 'tag': 'listener Method', 'name': 'Live.Track.Track.is_showing_chains_has_listener()', 'description': 'is_showing_chains_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_showing_chains&quot;. C++ signature :  bool is_showing_chains_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'is_showing_chains_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8339, 'tag': 'listener Method', 'name': 'Live.Track.Track.mute_has_listener()', 'description': 'mute_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mute&quot;. C++ signature :  bool mute_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'mute_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8341, 'tag': 'listener Method', 'name': 'Live.Track.Track.muted_via_solo_has_listener()', 'description': 'muted_via_solo_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;muted_via_solo&quot;. C++ signature :  bool muted_via_solo_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'muted_via_solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8343, 'tag': 'listener Method', 'name': 'Live.Track.Track.name_has_listener()', 'description': 'name_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8345, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_meter_left_has_listener()', 'description': 'output_meter_left_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_meter_left&quot;. C++ signature :  bool output_meter_left_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_meter_left_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8347, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_meter_level_has_listener()', 'description': 'output_meter_level_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_meter_level&quot;. C++ signature :  bool output_meter_level_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_meter_level_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8349, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_meter_right_has_listener()', 'description': 'output_meter_right_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_meter_right&quot;. C++ signature :  bool output_meter_right_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_meter_right_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8351, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_routing_channel_has_listener()', 'description': 'output_routing_channel_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_routing_channel&quot;. C++ signature :  bool output_routing_channel_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_routing_channel_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8353, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_routing_type_has_listener()', 'description': 'output_routing_type_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_routing_type&quot;. C++ signature :  bool output_routing_type_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_routing_type_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8355, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_routings_has_listener()', 'description': 'output_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_routings&quot;. C++ signature :  bool output_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8357, 'tag': 'listener Method', 'name': 'Live.Track.Track.output_sub_routings_has_listener()', 'description': 'output_sub_routings_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;output_sub_routings&quot;. C++ signature :  bool output_sub_routings_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'output_sub_routings_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8359, 'tag': 'listener Method', 'name': 'Live.Track.Track.performance_impact_has_listener()', 'description': 'performance_impact_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;performance_impact&quot;. C++ signature :  bool performance_impact_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'performance_impact_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8361, 'tag': 'listener Method', 'name': 'Live.Track.Track.playing_slot_index_has_listener()', 'description': 'playing_slot_index_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;playing_slot_index&quot;. C++ signature :  bool playing_slot_index_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'playing_slot_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8362, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_arm_listener()', 'description': 'remove_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;arm&quot;. C++ signature :  void remove_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8363, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_arrangement_clips_listener()', 'description': 'remove_arrangement_clips_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;arrangement_clips&quot;. C++ signature :  void remove_arrangement_clips_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_arrangement_clips_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8364, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_input_routing_channels_listener()', 'description': 'remove_available_input_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_channels&quot;. C++ signature :  void remove_available_input_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_input_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8365, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_input_routing_types_listener()', 'description': 'remove_available_input_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_input_routing_types&quot;. C++ signature :  void remove_available_input_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_input_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8366, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_output_routing_channels_listener()', 'description': 'remove_available_output_routing_channels_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_output_routing_channels&quot;. C++ signature :  void remove_available_output_routing_channels_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_output_routing_channels_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8367, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_available_output_routing_types_listener()', 'description': 'remove_available_output_routing_types_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;available_output_routing_types&quot;. C++ signature :  void remove_available_output_routing_types_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_available_output_routing_types_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8368, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_clip_slots_listener()', 'description': 'remove_clip_slots_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;clip_slots&quot;. C++ signature :  void remove_clip_slots_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_clip_slots_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8369, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_color_index_listener()', 'description': 'remove_color_index_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color_index&quot;. C++ signature :  void remove_color_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_color_index_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8370, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_color_listener()', 'description': 'remove_color_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;color&quot;. C++ signature :  void remove_color_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_color_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8371, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_input_routing_listener()', 'description': 'remove_current_input_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_input_routing&quot;. C++ signature :  void remove_current_input_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_input_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8372, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_input_sub_routing_listener()', 'description': 'remove_current_input_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_input_sub_routing&quot;. C++ signature :  void remove_current_input_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_input_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8373, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_monitoring_state_listener()', 'description': 'remove_current_monitoring_state_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_monitoring_state&quot;. C++ signature :  void remove_current_monitoring_state_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_monitoring_state_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8374, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_output_routing_listener()', 'description': 'remove_current_output_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_output_routing&quot;. C++ signature :  void remove_current_output_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_output_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8375, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_current_output_sub_routing_listener()', 'description': 'remove_current_output_sub_routing_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;current_output_sub_routing&quot;. C++ signature :  void remove_current_output_sub_routing_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_current_output_sub_routing_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8376, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_data_listener()', 'description': 'remove_data_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;data&quot;. C++ signature :  void remove_data_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_data_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8377, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_devices_listener()', 'description': 'remove_devices_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;devices&quot;. C++ signature :  void remove_devices_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_devices_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8378, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_fired_slot_index_listener()', 'description': 'remove_fired_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;fired_slot_index&quot;. C++ signature :  void remove_fired_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_fired_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8379, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_audio_input_listener()', 'description': 'remove_has_audio_input_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_audio_input&quot;. C++ signature :  void remove_has_audio_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_audio_input_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8380, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_audio_output_listener()', 'description': 'remove_has_audio_output_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_audio_output&quot;. C++ signature :  void remove_has_audio_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_audio_output_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8381, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_midi_input_listener()', 'description': 'remove_has_midi_input_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_midi_input&quot;. C++ signature :  void remove_has_midi_input_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_midi_input_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8382, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_has_midi_output_listener()', 'description': 'remove_has_midi_output_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;has_midi_output&quot;. C++ signature :  void remove_has_midi_output_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_has_midi_output_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8383, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_implicit_arm_listener()', 'description': 'remove_implicit_arm_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;implicit_arm&quot;. C++ signature :  void remove_implicit_arm_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_implicit_arm_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8384, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_meter_left_listener()', 'description': 'remove_input_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_meter_left&quot;. C++ signature :  void remove_input_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8385, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_meter_level_listener()', 'description': 'remove_input_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_meter_level&quot;. C++ signature :  void remove_input_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8386, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_meter_right_listener()', 'description': 'remove_input_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_meter_right&quot;. C++ signature :  void remove_input_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8387, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_routing_channel_listener()', 'description': 'remove_input_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_channel&quot;. C++ signature :  void remove_input_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8388, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_routing_type_listener()', 'description': 'remove_input_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routing_type&quot;. C++ signature :  void remove_input_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8389, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_routings_listener()', 'description': 'remove_input_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_routings&quot;. C++ signature :  void remove_input_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8390, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_input_sub_routings_listener()', 'description': 'remove_input_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;input_sub_routings&quot;. C++ signature :  void remove_input_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_input_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8391, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_is_frozen_listener()', 'description': 'remove_is_frozen_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_frozen&quot;. C++ signature :  void remove_is_frozen_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_is_frozen_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8392, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_is_showing_chains_listener()', 'description': 'remove_is_showing_chains_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_showing_chains&quot;. C++ signature :  void remove_is_showing_chains_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_is_showing_chains_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8393, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_mute_listener()', 'description': 'remove_mute_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mute&quot;. C++ signature :  void remove_mute_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_mute_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8394, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_muted_via_solo_listener()', 'description': 'remove_muted_via_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;muted_via_solo&quot;. C++ signature :  void remove_muted_via_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_muted_via_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8395, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_name_listener()', 'description': 'remove_name_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8396, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_meter_left_listener()', 'description': 'remove_output_meter_left_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_meter_left&quot;. C++ signature :  void remove_output_meter_left_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_meter_left_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8397, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_meter_level_listener()', 'description': 'remove_output_meter_level_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_meter_level&quot;. C++ signature :  void remove_output_meter_level_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_meter_level_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8398, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_meter_right_listener()', 'description': 'remove_output_meter_right_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_meter_right&quot;. C++ signature :  void remove_output_meter_right_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_meter_right_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8399, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_routing_channel_listener()', 'description': 'remove_output_routing_channel_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_routing_channel&quot;. C++ signature :  void remove_output_routing_channel_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_routing_channel_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8400, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_routing_type_listener()', 'description': 'remove_output_routing_type_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_routing_type&quot;. C++ signature :  void remove_output_routing_type_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_routing_type_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8401, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_routings_listener()', 'description': 'remove_output_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_routings&quot;. C++ signature :  void remove_output_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8402, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_output_sub_routings_listener()', 'description': 'remove_output_sub_routings_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;output_sub_routings&quot;. C++ signature :  void remove_output_sub_routings_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_output_sub_routings_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8403, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_performance_impact_listener()', 'description': 'remove_performance_impact_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;performance_impact&quot;. C++ signature :  void remove_performance_impact_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_performance_impact_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8404, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_playing_slot_index_listener()', 'description': 'remove_playing_slot_index_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;playing_slot_index&quot;. C++ signature :  void remove_playing_slot_index_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_playing_slot_index_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8405, 'tag': 'listener Method', 'name': 'Live.Track.Track.remove_solo_listener()', 'description': 'remove_solo_listener( (Track)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;solo&quot;. C++ signature :  void remove_solo_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'remove_solo_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8408, 'tag': 'listener Method', 'name': 'Live.Track.Track.solo_has_listener()', 'description': 'solo_has_listener( (Track)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;solo&quot;. C++ signature :  bool solo_has_listener(TTrackPyHandle,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'solo_has_listener()'], 'hierarchy': 3, 'ref_parent': 8045, 'children': [], 'group': 'listener Method'},
{'ref': 8412, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.add_device_insert_mode_listener()', 'description': 'add_device_insert_mode_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;device_insert_mode&quot; has changed. C++ signature :  void add_device_insert_mode_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'add_device_insert_mode_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8413, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8414, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.add_selected_device_listener()', 'description': 'add_selected_device_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_device&quot; has changed. C++ signature :  void add_selected_device_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'add_selected_device_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8415, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.device_insert_mode_has_listener()', 'description': 'device_insert_mode_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;device_insert_mode&quot;. C++ signature :  bool device_insert_mode_has_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'device_insert_mode_has_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8416, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8417, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.remove_device_insert_mode_listener()', 'description': 'remove_device_insert_mode_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;device_insert_mode&quot;. C++ signature :  void remove_device_insert_mode_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'remove_device_insert_mode_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8418, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8419, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.remove_selected_device_listener()', 'description': 'remove_selected_device_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_device&quot;. C++ signature :  void remove_selected_device_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'remove_selected_device_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8421, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.selected_device_has_listener()', 'description': 'selected_device_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_device&quot;. C++ signature :  bool selected_device_has_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'selected_device_has_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8450, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.add_device_insert_mode_listener()', 'description': 'add_device_insert_mode_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;device_insert_mode&quot; has changed. C++ signature :  void add_device_insert_mode_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'add_device_insert_mode_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8451, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8452, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.add_selected_device_listener()', 'description': 'add_selected_device_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;selected_device&quot; has changed. C++ signature :  void add_selected_device_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'add_selected_device_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8455, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.device_insert_mode_has_listener()', 'description': 'device_insert_mode_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;device_insert_mode&quot;. C++ signature :  bool device_insert_mode_has_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'device_insert_mode_has_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8457, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8458, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.remove_device_insert_mode_listener()', 'description': 'remove_device_insert_mode_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;device_insert_mode&quot;. C++ signature :  void remove_device_insert_mode_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'remove_device_insert_mode_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8459, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8460, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.remove_selected_device_listener()', 'description': 'remove_selected_device_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;selected_device&quot;. C++ signature :  void remove_selected_device_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'remove_selected_device_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 8463, 'tag': 'listener Method', 'name': 'Live.Track.Track.View.selected_device_has_listener()', 'description': 'selected_device_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;selected_device&quot;. C++ signature :  bool selected_device_has_listener(TPyViewData&lt;ATrack&gt;,boost::python::api::object)', 'path': ['Live', 'Track', 'Track', 'View', 'selected_device_has_listener()'], 'hierarchy': 4, 'ref_parent': 8186, 'children': [], 'group': 'listener Method'},
{'ref': 9042, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_filter_routing_listener()', 'description': 'add_filter_routing_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;filter_routing&quot; has changed. C++ signature :  void add_filter_routing_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_filter_routing_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9043, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9044, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9045, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9046, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_modulation_matrix_changed_listener()', 'description': 'add_modulation_matrix_changed_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;modulation_matrix_changed&quot; has changed. C++ signature :  void add_modulation_matrix_changed_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_modulation_matrix_changed_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9047, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_mono_poly_listener()', 'description': 'add_mono_poly_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly&quot; has changed. C++ signature :  void add_mono_poly_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9048, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9049, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_effect_mode_listener()', 'description': 'add_oscillator_1_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_effect_mode&quot; has changed. C++ signature :  void add_oscillator_1_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9050, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_wavetable_category_listener()', 'description': 'add_oscillator_1_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_wavetable_category&quot; has changed. C++ signature :  void add_oscillator_1_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9051, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_wavetable_index_listener()', 'description': 'add_oscillator_1_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_wavetable_index&quot; has changed. C++ signature :  void add_oscillator_1_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9052, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_wavetables_listener()', 'description': 'add_oscillator_1_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_wavetables&quot; has changed. C++ signature :  void add_oscillator_1_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9053, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_effect_mode_listener()', 'description': 'add_oscillator_2_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_effect_mode&quot; has changed. C++ signature :  void add_oscillator_2_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9054, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_wavetable_category_listener()', 'description': 'add_oscillator_2_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetable_category&quot; has changed. C++ signature :  void add_oscillator_2_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9055, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_wavetable_index_listener()', 'description': 'add_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetable_index&quot; has changed. C++ signature :  void add_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)add_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetable_index&quot; has changed. C++ signature :  void add_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9056, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_wavetables_listener()', 'description': 'add_oscillator_2_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetables&quot; has changed. C++ signature :  void add_oscillator_2_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9058, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9059, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_poly_voices_listener()', 'description': 'add_poly_voices_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;poly_voices&quot; has changed. C++ signature :  void add_poly_voices_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_poly_voices_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9060, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_unison_mode_listener()', 'description': 'add_unison_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;unison_mode&quot; has changed. C++ signature :  void add_unison_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_unison_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9061, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_unison_voice_count_listener()', 'description': 'add_unison_voice_count_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;unison_voice_count&quot; has changed. C++ signature :  void add_unison_voice_count_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_unison_voice_count_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9062, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_visible_modulation_target_names_listener()', 'description': 'add_visible_modulation_target_names_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_modulation_target_names&quot; has changed. C++ signature :  void add_visible_modulation_target_names_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_visible_modulation_target_names_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9063, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.filter_routing_has_listener()', 'description': 'filter_routing_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;filter_routing&quot;. C++ signature :  bool filter_routing_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'filter_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9066, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9068, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9069, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9070, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.modulation_matrix_changed_has_listener()', 'description': 'modulation_matrix_changed_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;modulation_matrix_changed&quot;. C++ signature :  bool modulation_matrix_changed_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'modulation_matrix_changed_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9071, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.mono_poly_has_listener()', 'description': 'mono_poly_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly&quot;. C++ signature :  bool mono_poly_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'mono_poly_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9072, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9073, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_effect_mode_has_listener()', 'description': 'oscillator_1_effect_mode_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_effect_mode&quot;. C++ signature :  bool oscillator_1_effect_mode_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_effect_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9074, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_wavetable_category_has_listener()', 'description': 'oscillator_1_wavetable_category_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_wavetable_category&quot;. C++ signature :  bool oscillator_1_wavetable_category_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_wavetable_category_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9075, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_wavetable_index_has_listener()', 'description': 'oscillator_1_wavetable_index_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_wavetable_index&quot;. C++ signature :  bool oscillator_1_wavetable_index_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_wavetable_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9076, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_wavetables_has_listener()', 'description': 'oscillator_1_wavetables_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_wavetables&quot;. C++ signature :  bool oscillator_1_wavetables_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_wavetables_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9077, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_effect_mode_has_listener()', 'description': 'oscillator_2_effect_mode_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_effect_mode&quot;. C++ signature :  bool oscillator_2_effect_mode_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_effect_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9078, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_wavetable_category_has_listener()', 'description': 'oscillator_2_wavetable_category_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetable_category&quot;. C++ signature :  bool oscillator_2_wavetable_category_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_wavetable_category_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9079, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_wavetable_index_has_listener()', 'description': 'oscillator_2_wavetable_index_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  bool oscillator_2_wavetable_index_has_listener(TWavetableDevicePyHandle,boost::python::api::object)oscillator_2_wavetable_index_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  bool oscillator_2_wavetable_index_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_wavetable_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9080, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_wavetables_has_listener()', 'description': 'oscillator_2_wavetables_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetables&quot;. C++ signature :  bool oscillator_2_wavetables_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_wavetables_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9081, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9082, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.poly_voices_has_listener()', 'description': 'poly_voices_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;poly_voices&quot;. C++ signature :  bool poly_voices_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'poly_voices_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9083, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_filter_routing_listener()', 'description': 'remove_filter_routing_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;filter_routing&quot;. C++ signature :  void remove_filter_routing_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_filter_routing_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9084, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9085, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9086, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9087, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_modulation_matrix_changed_listener()', 'description': 'remove_modulation_matrix_changed_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;modulation_matrix_changed&quot;. C++ signature :  void remove_modulation_matrix_changed_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_modulation_matrix_changed_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9088, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_mono_poly_listener()', 'description': 'remove_mono_poly_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mono_poly&quot;. C++ signature :  void remove_mono_poly_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9089, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9090, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_effect_mode_listener()', 'description': 'remove_oscillator_1_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_effect_mode&quot;. C++ signature :  void remove_oscillator_1_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9091, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_wavetable_category_listener()', 'description': 'remove_oscillator_1_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_wavetable_category&quot;. C++ signature :  void remove_oscillator_1_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9092, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_wavetable_index_listener()', 'description': 'remove_oscillator_1_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_wavetable_index&quot;. C++ signature :  void remove_oscillator_1_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9093, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_wavetables_listener()', 'description': 'remove_oscillator_1_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_wavetables&quot;. C++ signature :  void remove_oscillator_1_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9094, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_effect_mode_listener()', 'description': 'remove_oscillator_2_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_effect_mode&quot;. C++ signature :  void remove_oscillator_2_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9095, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_wavetable_category_listener()', 'description': 'remove_oscillator_2_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetable_category&quot;. C++ signature :  void remove_oscillator_2_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9096, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_wavetable_index_listener()', 'description': 'remove_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  void remove_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)remove_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  void remove_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9097, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_wavetables_listener()', 'description': 'remove_oscillator_2_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetables&quot;. C++ signature :  void remove_oscillator_2_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9098, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9099, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_poly_voices_listener()', 'description': 'remove_poly_voices_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;poly_voices&quot;. C++ signature :  void remove_poly_voices_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_poly_voices_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9100, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_unison_mode_listener()', 'description': 'remove_unison_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;unison_mode&quot;. C++ signature :  void remove_unison_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_unison_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9101, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_unison_voice_count_listener()', 'description': 'remove_unison_voice_count_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;unison_voice_count&quot;. C++ signature :  void remove_unison_voice_count_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_unison_voice_count_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9102, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_visible_modulation_target_names_listener()', 'description': 'remove_visible_modulation_target_names_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_modulation_target_names&quot;. C++ signature :  void remove_visible_modulation_target_names_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_visible_modulation_target_names_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9105, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.unison_mode_has_listener()', 'description': 'unison_mode_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;unison_mode&quot;. C++ signature :  bool unison_mode_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'unison_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9106, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.unison_voice_count_has_listener()', 'description': 'unison_voice_count_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;unison_voice_count&quot;. C++ signature :  bool unison_voice_count_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'unison_voice_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9107, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.visible_modulation_target_names_has_listener()', 'description': 'visible_modulation_target_names_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_modulation_target_names&quot;. C++ signature :  bool visible_modulation_target_names_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'visible_modulation_target_names_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9137, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_filter_routing_listener()', 'description': 'add_filter_routing_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;filter_routing&quot; has changed. C++ signature :  void add_filter_routing_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_filter_routing_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9138, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_is_active_listener()', 'description': 'add_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_active&quot; has changed. C++ signature :  void add_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9139, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_latency_in_ms_listener()', 'description': 'add_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_ms&quot; has changed. C++ signature :  void add_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9140, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_latency_in_samples_listener()', 'description': 'add_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;latency_in_samples&quot; has changed. C++ signature :  void add_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9141, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_modulation_matrix_changed_listener()', 'description': 'add_modulation_matrix_changed_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;modulation_matrix_changed&quot; has changed. C++ signature :  void add_modulation_matrix_changed_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_modulation_matrix_changed_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9142, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_mono_poly_listener()', 'description': 'add_mono_poly_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;mono_poly&quot; has changed. C++ signature :  void add_mono_poly_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9143, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_name_listener()', 'description': 'add_name_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;name&quot; has changed. C++ signature :  void add_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_name_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9144, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_effect_mode_listener()', 'description': 'add_oscillator_1_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_effect_mode&quot; has changed. C++ signature :  void add_oscillator_1_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9145, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_wavetable_category_listener()', 'description': 'add_oscillator_1_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_wavetable_category&quot; has changed. C++ signature :  void add_oscillator_1_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9146, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_wavetable_index_listener()', 'description': 'add_oscillator_1_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_wavetable_index&quot; has changed. C++ signature :  void add_oscillator_1_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9147, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_1_wavetables_listener()', 'description': 'add_oscillator_1_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_1_wavetables&quot; has changed. C++ signature :  void add_oscillator_1_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_1_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9148, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_effect_mode_listener()', 'description': 'add_oscillator_2_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_effect_mode&quot; has changed. C++ signature :  void add_oscillator_2_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9149, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_wavetable_category_listener()', 'description': 'add_oscillator_2_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetable_category&quot; has changed. C++ signature :  void add_oscillator_2_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9150, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_wavetable_index_listener()', 'description': 'add_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetable_index&quot; has changed. C++ signature :  void add_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)add_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetable_index&quot; has changed. C++ signature :  void add_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9151, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_oscillator_2_wavetables_listener()', 'description': 'add_oscillator_2_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;oscillator_2_wavetables&quot; has changed. C++ signature :  void add_oscillator_2_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_oscillator_2_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9153, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_parameters_listener()', 'description': 'add_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;parameters&quot; has changed. C++ signature :  void add_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9154, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_poly_voices_listener()', 'description': 'add_poly_voices_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;poly_voices&quot; has changed. C++ signature :  void add_poly_voices_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_poly_voices_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9155, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_unison_mode_listener()', 'description': 'add_unison_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;unison_mode&quot; has changed. C++ signature :  void add_unison_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_unison_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9156, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_unison_voice_count_listener()', 'description': 'add_unison_voice_count_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;unison_voice_count&quot; has changed. C++ signature :  void add_unison_voice_count_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_unison_voice_count_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9157, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.add_visible_modulation_target_names_listener()', 'description': 'add_visible_modulation_target_names_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;visible_modulation_target_names&quot; has changed. C++ signature :  void add_visible_modulation_target_names_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'add_visible_modulation_target_names_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9164, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.filter_routing_has_listener()', 'description': 'filter_routing_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;filter_routing&quot;. C++ signature :  bool filter_routing_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'filter_routing_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9168, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.is_active_has_listener()', 'description': 'is_active_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_active&quot;. C++ signature :  bool is_active_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'is_active_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9171, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.latency_in_ms_has_listener()', 'description': 'latency_in_ms_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_ms&quot;. C++ signature :  bool latency_in_ms_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'latency_in_ms_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9173, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.latency_in_samples_has_listener()', 'description': 'latency_in_samples_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;latency_in_samples&quot;. C++ signature :  bool latency_in_samples_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'latency_in_samples_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9174, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.modulation_matrix_changed_has_listener()', 'description': 'modulation_matrix_changed_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;modulation_matrix_changed&quot;. C++ signature :  bool modulation_matrix_changed_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'modulation_matrix_changed_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9176, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.mono_poly_has_listener()', 'description': 'mono_poly_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;mono_poly&quot;. C++ signature :  bool mono_poly_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'mono_poly_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9178, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.name_has_listener()', 'description': 'name_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;name&quot;. C++ signature :  bool name_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'name_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9180, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_effect_mode_has_listener()', 'description': 'oscillator_1_effect_mode_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_effect_mode&quot;. C++ signature :  bool oscillator_1_effect_mode_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_effect_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9182, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_wavetable_category_has_listener()', 'description': 'oscillator_1_wavetable_category_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_wavetable_category&quot;. C++ signature :  bool oscillator_1_wavetable_category_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_wavetable_category_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9184, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_wavetable_index_has_listener()', 'description': 'oscillator_1_wavetable_index_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_wavetable_index&quot;. C++ signature :  bool oscillator_1_wavetable_index_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_wavetable_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9186, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_1_wavetables_has_listener()', 'description': 'oscillator_1_wavetables_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_1_wavetables&quot;. C++ signature :  bool oscillator_1_wavetables_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_1_wavetables_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9188, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_effect_mode_has_listener()', 'description': 'oscillator_2_effect_mode_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_effect_mode&quot;. C++ signature :  bool oscillator_2_effect_mode_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_effect_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9190, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_wavetable_category_has_listener()', 'description': 'oscillator_2_wavetable_category_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetable_category&quot;. C++ signature :  bool oscillator_2_wavetable_category_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_wavetable_category_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9192, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_wavetable_index_has_listener()', 'description': 'oscillator_2_wavetable_index_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  bool oscillator_2_wavetable_index_has_listener(TWavetableDevicePyHandle,boost::python::api::object)oscillator_2_wavetable_index_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  bool oscillator_2_wavetable_index_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_wavetable_index_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9194, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.oscillator_2_wavetables_has_listener()', 'description': 'oscillator_2_wavetables_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;oscillator_2_wavetables&quot;. C++ signature :  bool oscillator_2_wavetables_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'oscillator_2_wavetables_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9197, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.parameters_has_listener()', 'description': 'parameters_has_listener( (Device)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;parameters&quot;. C++ signature :  bool parameters_has_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'parameters_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9199, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.poly_voices_has_listener()', 'description': 'poly_voices_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;poly_voices&quot;. C++ signature :  bool poly_voices_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'poly_voices_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9200, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_filter_routing_listener()', 'description': 'remove_filter_routing_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;filter_routing&quot;. C++ signature :  void remove_filter_routing_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_filter_routing_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9201, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_is_active_listener()', 'description': 'remove_is_active_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_active&quot;. C++ signature :  void remove_is_active_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_is_active_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9202, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_latency_in_ms_listener()', 'description': 'remove_latency_in_ms_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_ms&quot;. C++ signature :  void remove_latency_in_ms_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_latency_in_ms_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9203, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_latency_in_samples_listener()', 'description': 'remove_latency_in_samples_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;latency_in_samples&quot;. C++ signature :  void remove_latency_in_samples_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_latency_in_samples_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9204, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_modulation_matrix_changed_listener()', 'description': 'remove_modulation_matrix_changed_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;modulation_matrix_changed&quot;. C++ signature :  void remove_modulation_matrix_changed_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_modulation_matrix_changed_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9205, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_mono_poly_listener()', 'description': 'remove_mono_poly_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;mono_poly&quot;. C++ signature :  void remove_mono_poly_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_mono_poly_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9206, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_name_listener()', 'description': 'remove_name_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;name&quot;. C++ signature :  void remove_name_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_name_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9207, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_effect_mode_listener()', 'description': 'remove_oscillator_1_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_effect_mode&quot;. C++ signature :  void remove_oscillator_1_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9208, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_wavetable_category_listener()', 'description': 'remove_oscillator_1_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_wavetable_category&quot;. C++ signature :  void remove_oscillator_1_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9209, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_wavetable_index_listener()', 'description': 'remove_oscillator_1_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_wavetable_index&quot;. C++ signature :  void remove_oscillator_1_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9210, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_1_wavetables_listener()', 'description': 'remove_oscillator_1_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_1_wavetables&quot;. C++ signature :  void remove_oscillator_1_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_1_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9211, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_effect_mode_listener()', 'description': 'remove_oscillator_2_effect_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_effect_mode&quot;. C++ signature :  void remove_oscillator_2_effect_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_effect_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9212, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_wavetable_category_listener()', 'description': 'remove_oscillator_2_wavetable_category_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetable_category&quot;. C++ signature :  void remove_oscillator_2_wavetable_category_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_wavetable_category_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9213, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_wavetable_index_listener()', 'description': 'remove_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  void remove_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)remove_oscillator_2_wavetable_index_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetable_index&quot;. C++ signature :  void remove_oscillator_2_wavetable_index_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_wavetable_index_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9214, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_oscillator_2_wavetables_listener()', 'description': 'remove_oscillator_2_wavetables_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;oscillator_2_wavetables&quot;. C++ signature :  void remove_oscillator_2_wavetables_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_oscillator_2_wavetables_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9215, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_parameters_listener()', 'description': 'remove_parameters_listener( (Device)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;parameters&quot;. C++ signature :  void remove_parameters_listener(TPyHandle&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_parameters_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9216, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_poly_voices_listener()', 'description': 'remove_poly_voices_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;poly_voices&quot;. C++ signature :  void remove_poly_voices_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_poly_voices_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9217, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_unison_mode_listener()', 'description': 'remove_unison_mode_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;unison_mode&quot;. C++ signature :  void remove_unison_mode_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_unison_mode_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9218, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_unison_voice_count_listener()', 'description': 'remove_unison_voice_count_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;unison_voice_count&quot;. C++ signature :  void remove_unison_voice_count_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_unison_voice_count_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9219, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.remove_visible_modulation_target_names_listener()', 'description': 'remove_visible_modulation_target_names_listener( (WavetableDevice)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;visible_modulation_target_names&quot;. C++ signature :  void remove_visible_modulation_target_names_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'remove_visible_modulation_target_names_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9224, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.unison_mode_has_listener()', 'description': 'unison_mode_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;unison_mode&quot;. C++ signature :  bool unison_mode_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'unison_mode_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9226, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.unison_voice_count_has_listener()', 'description': 'unison_voice_count_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;unison_voice_count&quot;. C++ signature :  bool unison_voice_count_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'unison_voice_count_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9229, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.visible_modulation_target_names_has_listener()', 'description': 'visible_modulation_target_names_has_listener( (WavetableDevice)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;visible_modulation_target_names&quot;. C++ signature :  bool visible_modulation_target_names_has_listener(TWavetableDevicePyHandle,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'visible_modulation_target_names_has_listener()'], 'hierarchy': 3, 'ref_parent': 9041, 'children': [], 'group': 'listener Method'},
{'ref': 9231, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 9108, 'children': [], 'group': 'listener Method'},
{'ref': 9232, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 9108, 'children': [], 'group': 'listener Method'},
{'ref': 9233, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 9108, 'children': [], 'group': 'listener Method'},
{'ref': 9262, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.View.add_is_collapsed_listener()', 'description': 'add_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Add a listener function or method, which will be called as soon as the property &quot;is_collapsed&quot; has changed. C++ signature :  void add_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'View', 'add_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 9108, 'children': [], 'group': 'listener Method'},
{'ref': 9265, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.View.is_collapsed_has_listener()', 'description': 'is_collapsed_has_listener( (View)arg1, (object)arg2) -&gt; bool : Returns true, if the given listener function or method is connected to the property &quot;is_collapsed&quot;. C++ signature :  bool is_collapsed_has_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'View', 'is_collapsed_has_listener()'], 'hierarchy': 4, 'ref_parent': 9108, 'children': [], 'group': 'listener Method'},
{'ref': 9266, 'tag': 'listener Method', 'name': 'Live.WavetableDevice.WavetableDevice.View.remove_is_collapsed_listener()', 'description': 'remove_is_collapsed_listener( (View)arg1, (object)arg2) -&gt; None : Remove a previously set listener function or method from property &quot;is_collapsed&quot;. C++ signature :  void remove_is_collapsed_listener(TPyViewData&lt;ADevice&gt;,boost::python::api::object)', 'path': ['Live', 'WavetableDevice', 'WavetableDevice', 'View', 'remove_is_collapsed_listener()'], 'hierarchy': 4, 'ref_parent': 9108, 'children': [], 'group': 'listener Method'},
]